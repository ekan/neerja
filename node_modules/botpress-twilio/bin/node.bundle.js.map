{"version":3,"sources":["webpack:///webpack/bootstrap c3e9def02ac9203add5a","webpack:///./src/index.js","webpack:///external \"twilio\"","webpack:///external \"querystring\"","webpack:///external \"lodash\"","webpack:///external \"body-parser\"","webpack:///./src/util.js","webpack:///./src/umm.js","webpack:///external \"util\"","webpack:///external \"bluebird\""],"names":["client","module","exports","config","accountSID","type","required","env","authToken","fromNumber","messagingServiceSid","init","bp","configurator","handleOutgoing","event","next","platform","payload","to","body","text","isNil","from","messages","create","then","_promise","_resolve","middlewares","register","name","order","handler","description","loadAll","ready","id","db","get","knex","where","users","existingUser","newUser","first_name","last_name","profile_pic","number","saveUser","getOrCreateUser","logDebug","message","process","TWILIO_DEBUG","logger","debug","twilio","router","getRouter","use","urlencoded","extended","post","req","res","headers","host","originalUrl","valid","validateExpressRequest","protocol","sendStatus","twiml","MessagingResponse","writeHead","end","toString","Body","From","fromCountry","FromCountry","fromCity","FromCity","fromState","FromState","smsSid","SmsSid","messageSid","SmsMessageSid","_toNumber","To","_accountSid","AccountSid","user","sendIncoming","raw","extractNumber","Error","PromisifyEvent","resolve","reject","_reject","processOutgoing","blocName","instruction","ins","Object","assign","optionsList","options","pick","prop","strRep","inspect","at","umm","registerConnector","args","templates"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c3e9def02ac9203add5a","import twilio from 'twilio'\nimport qs from 'querystring'\nimport _ from 'lodash'\nimport bodyParser from 'body-parser'\n\nimport { extractNumber } from './util'\nimport UMM from './umm'\n\nlet client = null\n\nmodule.exports = {\n\n  config: {\n    accountSID: { type: 'string', required: true, env: 'TWILIO_SID' },\n    authToken: { type: 'string', required: true, env: 'TWILIO_TOKEN' },\n    fromNumber: { type: 'string', required: false, env: 'TWILIO_FROM' },\n    messagingServiceSid: { type: 'string', required: false, env: 'TWILIO_MESSAGING_SERVICE_SID' }\n  },\n\n  init: async function(bp, configurator) {\n    bp.middlewares.register({\n      name: 'twilio.sendSms',\n      type: 'outgoing',\n      order: 100,\n      handler: handleOutgoing,\n      module: 'botpress-twilio',\n      description: 'Sends out text messages by SMS using Twilio'\n    })\n\n    const {\n      accountSID,\n      authToken,\n      fromNumber,\n      messagingServiceSid\n    } = await configurator.loadAll()\n\n    client = new twilio(accountSID, authToken)\n\n    function handleOutgoing(event, next) {\n      if (event.platform !== 'twilio') {\n        // Only process twilio messages\n        return next()\n      }\n\n      const payload = {\n        to: extractNumber(event),\n        body: event.text\n      }\n\n      if (!_.isNil(messagingServiceSid)) {\n        payload.messagingServiceSid = messagingServiceSid\n      } else {\n        payload.from = fromNumber\n      }\n\n      client.messages.create(payload)\n      .then(() => {\n        if (event._promise && event._resolve) {\n          event._resolve()\n        }\n      })\n    }\n\n    UMM(bp)\n  },\n\n  ready: async function(bp, configurator) {\n\n    function logDebug(message) {\n      if (process.env.TWILIO_DEBUG) {\n        bp.logger.debug('[Twilio] ' + message)\n      }\n    }\n\n    async function getOrCreateUser(fromNumber) {\n      const id = `twilio:${fromNumber}`;\n      const existingUser = await bp.db.get()\n        .then(knex => knex('users').where('id', id))\n        .then(users => users[0]);\n\n      if (existingUser) {\n        existingUser.id = fromNumber;\n        return existingUser;\n\n      } else {\n        const newUser = {\n          first_name: 'Unknown',\n          last_name: 'Unknown',\n          profile_pic: null,\n          id: fromNumber,\n          platform: 'twilio',\n          number: fromNumber\n        }\n\n        await bp.db.saveUser(newUser);\n        return newUser;\n      }\n    }\n\n    bp.twilio = { getOrCreateUser }\n\n    const router = bp.getRouter('botpress-twilio', {\n      'bodyParser.json': false,\n      'auth': false,\n      'bodyParser.urlencoded': false\n    })\n\n    router.use(bodyParser.urlencoded({\n      extended: false\n    }))\n\n    const { authToken } = await configurator.loadAll()\n\n    router.post('/webhook', async (req, res) => {\n      logDebug(`Incoming Twilio Message [HOST='${req.headers.host}'] [URL='${req.originalUrl}']`)\n\n      const valid = twilio.validateExpressRequest(req, authToken, { protocol: 'https' })\n      \n      if (!valid) {\n        logDebug('Signature verification failed')\n        return res.sendStatus(403)\n      }\n\n      logDebug('Message verified')\n      var twiml = new twilio.twiml.MessagingResponse()\n      res.writeHead(200, {'Content-Type': 'text/xml'})\n      res.end(twiml.toString()) // Reply with nothing\n\n      const {\n        Body: message,\n        From: fromNumber,\n        FromCountry: fromCountry,\n        FromCity: fromCity,\n        FromState: fromState,\n        SmsSid: smsSid,\n        SmsMessageSid: messageSid,\n        To: _toNumber,\n        AccountSid: _accountSid\n       } = req.body || {}\n\n       const user = await getOrCreateUser(fromNumber)\n\n       bp.middlewares.sendIncoming({\n        platform: 'twilio',\n        type: 'message',\n        user: user,\n        text: message,\n        raw: { message, fromNumber, fromCountry, fromCity, fromState, smsSid, messageSid }\n      })\n\n      logDebug('Message delivered to bot')\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"twilio\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"twilio\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"querystring\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"querystring\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","import _ from 'lodash'\n\nfunction extractNumber(event) {\n  const number = _.get(event, 'user.number')\n    || _.get(event, 'number')\n    || _.get(event, 'raw.to')\n    || _.get(event, 'raw.number')\n    || _.get(event, 'user.userId')\n\n  if (!number) {\n    throw new Error('Could not extract user phone number number from event')\n  }\n\n  return number\n}\n\nmodule.exports = { extractNumber }\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","import util from 'util'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport { extractNumber } from './util'\n\nfunction PromisifyEvent(event) {\n  if (!event._promise) {\n    event._promise = new Promise((resolve, reject) => {\n      event._resolve = resolve\n      event._reject = reject\n    })\n  }\n\n  return event\n}\n\nfunction processOutgoing({ event, blocName, instruction }) {\n  const ins = Object.assign({}, instruction) // Create a shallow copy of the instruction\n\n  ////////\n  // PRE-PROCESSING\n  ////////\n  \n  const optionsList = ['typing']\n\n  const options = _.pick(instruction, optionsList)\n  \n  for (let prop of optionsList) {\n    delete ins[prop]\n  }\n\n  /////////\n  /// Processing\n  /////////\n\n  if (!_.isNil(instruction.text)) {\n    const number = extractNumber(event)\n    \n    return PromisifyEvent({\n      platform: 'twilio',\n      type: 'text',\n      user: { id: number, number },\n      raw: Object.assign({ to: number, message: instruction.text }, options),\n      text: instruction.text\n    })\n  }\n\n  ////////////\n  /// POST-PROCESSING\n  ////////////\n  \n  // Nothing to post-process yet\n\n  ////////////\n  /// INVALID INSTRUCTION\n  ////////////\n\n  const strRep = util.inspect(instruction, false, 1)\n  throw new Error(`Unrecognized instruction in Twilio in bloc '${blocName}': ${strRep}`)\n}\n\nmodule.exports = bp => {\n  const [umm, registerConnector] = _.at(bp, ['umm', 'umm.registerConnector'])\n\n  umm && registerConnector && registerConnector({\n    platform: 'twilio',\n    processOutgoing: args => processOutgoing(Object.assign({}, args, { bp })),\n    templates: []\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}