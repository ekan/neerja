{"version":3,"sources":["webpack:///webpack/bootstrap b7eec2644aa6656f8d53","webpack:///./src/index.js","webpack:///external \"botpress-version-manager\"","webpack:///./src/analytics.js","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"eventemitter2\"","webpack:///external \"lodash\"","webpack:///external \"moment\"","webpack:///./src/stats.js","webpack:///external \"bluebird\"","webpack:///external \"botpress\"","webpack:///./src/custom_analytics.js","webpack:///./src/db.js"],"names":["checkVersion","require","Analytics","CustomAnalytics","DB","_","analytics","db","interactionsToTrack","incomingMiddleware","event","next","includes","type","user","saveIncoming","then","catch","bp","logger","debug","platform","outgoingMiddleware","saveOutgoing","module","exports","init","__dirname","middlewares","register","name","handler","order","description","custom","get","knex","initializeDb","ready","getRouter","req","res","send","getChartsGraphData","getAnalyticsMetadata","metadata","getAll","query","from","to","metrics","fs","path","EventEmitter","moment","Stats","createEmptyFileIfDoesntExist","file","existsSync","writeFileSync","loadDataFromFile","console","log","JSON","parse","readFileSync","Error","stats","chartsDatafile","join","projectLocation","botfile","dataDir","running","setInterval","getLastRun","elasped","duration","diff","ts","asMinutes","getUpdateFrequency","updateData","location","statSync","run","Date","subtract","humanize","lastUpdated","size","getDBSize","getTotalUsers","savePartialData","data","getDailyActiveUsers","getDailyGender","getInteractionRanges","getAverageInteractions","getNumberOfUsers","numberOfInteractionInAverage","averageInteractions","numberOfUsersToday","nbUsers","today","numberOfUsersYesterday","yesterday","numberOfUsersThisWeek","week","usersRetention","getBusyHours","events","emit","setLastRun","property","chartsData","stringify","isEmpty","loading","noData","totalUsersChartData","totalUsers","activeUsersChartData","activeUsers","genderUsageChartData","genderUsage","typicalConversationLengthInADay","interactionsRange","specificMetricsForLastDays","fictiveSpecificMetrics","retentionHeatMap","busyHoursHeatMap","oneDayMs","rangeDates","select","raw","result","min","max","range","ranges","i","push","parseInt","ret","format","date","dates","statsBase","platforms","reduce","acc","curr","total","groupBy","orderBy","totalPlatform","Object","assign","rows","map","row","count","add","toPairs","k","v","getLastDaysRange","nb","nbOfDays","times","Number","n","start","startOf","toDate","end","endOf","day","reverse","mapSeries","where","isBetween","andWhere","results","gender","inner","toString","r","mapValues","a","s1","s2","s3","s4","s5","s6","s7","s8","lastWeek","now","as","parseFloat","label","cohorts","coo","cohort_size","daysToAdd","since","dta","isAfter","partial_retention","isSameOrAfter","mean","filter","retention","hourOfDay","sql","biggest","x","Math","toFixed","limit","entry","insert","operation","value","racing","isString","toLowerCase","trim","update","isNumber","countQuery","abs","increment","decrement","set","graphs","getters","graph","addGraph","variable","first","variables","percent","variable1","variable2","last","count1","count2","allDates","uniq","n1","find","n2","isFunction","fn","piechart","drop","split","createTableIfNotExists","table","increments","primary","timestamp","string","references","enu","integer","unique","saveInteractionIn","startsWith","interactionRow","text","direction","saveInteractionOut","userId","botpress"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/slvn/Desktop/botpress-analytics\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b7eec2644aa6656f8d53","const checkVersion = require('botpress-version-manager')\n\nconst Analytics = require('./analytics')\nconst CustomAnalytics = require('./custom_analytics')\nconst DB = require('./db')\nconst _ = require('lodash')\n\nlet analytics = null\nlet db = null\n\nconst interactionsToTrack = [\n  'message', \n  'text', \n  'button', \n  'template', \n  'quick_reply', \n  'postback'\n]\n\nconst incomingMiddleware = (event, next) => {\n  if (!_.includes(interactionsToTrack, event.type)) {\n    return next()\n  }\n\n  if (event.user) {\n    // Asynchronously save the interaction (non-blocking)\n    db && db.saveIncoming(event).then()\n    .catch(() => {\n      event.bp && event.bp.logger.debug('[Analytics] Could not save incoming interaction for ' + event.platform)\n    })\n  }\n\n  \n  next()\n}\n\nconst outgoingMiddleware = (event, next) => {\n  if (!_.includes(interactionsToTrack, event.type)) {\n    return next()\n  }\n\n  // Asynchronously save the interaction (non-blocking)\n  db && db.saveOutgoing(event).then()\n  .catch(() => {\n    event.bp && event.bp.logger.debug('[Analytics] Could not save outgoing interaction for ' + event.platform)\n  })\n\n  next()\n}\n\nmodule.exports = {\n  init: function(bp) {\n    checkVersion(bp, __dirname)\n\n    bp.middlewares.register({\n      name: 'analytics.incoming',\n      module: 'botpress-analytics',\n      type: 'incoming',\n      handler: incomingMiddleware,\n      order: 5,\n      description: 'Tracks incoming messages for Analytics purposes'\n    })\n\n    bp.middlewares.register({\n      name: 'analytics.outgoing',\n      module: 'botpress-analytics',\n      type: 'outgoing',\n      handler: outgoingMiddleware,\n      description: 'Tracks outgoing messages for Analytics purposes'\n    })\n\n    bp.analytics = {\n      custom: CustomAnalytics({ bp })\n    }\n\n    bp.db.get()\n    .then(knex => {\n      db = DB(knex, bp)\n      return db.initializeDb()\n      .then(() => analytics = new Analytics(bp, knex))\n    })\n  },\n\n  ready: function(bp) {\n    \n    bp.getRouter(\"botpress-analytics\")\n    .get(\"/graphs\", (req, res, next) => {\n      res.send(analytics.getChartsGraphData())\n    })\n\n    bp.getRouter('botpress-analytics')\n    .get('/metadata', (req, res, next) => {\n      analytics.getAnalyticsMetadata()\n      .then(metadata => res.send(metadata))\n    })\n\n    bp.getRouter('botpress-analytics')\n    .get('/custom_metrics', async (req, res, next) => {\n      const metrics = await bp.analytics.custom.getAll(req.query.from, req.query.to)\n      res.send(metrics)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"botpress-version-manager\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botpress-version-manager\"\n// module id = 2\n// module chunks = 0","const fs = require('fs')\nconst path = require('path')\nconst EventEmitter = require('eventemitter2');\nconst _ = require('lodash')\nconst moment = require('moment')\n\nconst Stats = require('./stats')\n\nconst createEmptyFileIfDoesntExist = (file) => {\n  if(!fs.existsSync(file)) {\n    fs.writeFileSync(file, '{}')\n  }\n}\n\nconst loadDataFromFile = (file) => {\n  if(!fs.existsSync(file)){\n    console.log(\"Analytics file (\" + file + \") doesn\\'t exist.\")\n  }\n  return JSON.parse(fs.readFileSync(file, \"utf-8\"))\n}\n\nclass Analytics {\n  constructor(bp, knex) {\n    if (!bp){\n      throw new Error('You need to specify botpress');\n    }\n\n    this.bp = bp\n    this.knex = knex\n    this.stats = Stats(knex)\n    this.chartsDatafile = path.join(bp.projectLocation, bp.botfile.dataDir, 'botpress-analytics.charts.json')\n\n    createEmptyFileIfDoesntExist(this.chartsDatafile)\n\n    let running = false\n    setInterval(() => {\n      this.stats.getLastRun()\n      .then(ts => {\n        const elasped = moment.duration(moment().diff(ts)).asMinutes()\n        if(!ts || elasped >= this.getUpdateFrequency()) {\n          this.updateData()\n        }\n      })\n    }, 5000)\n  }\n\n  getDBSize() {\n    if (this.bp.db.location !== 'postgres') {\n      return fs.statSync(this.bp.db.location)['size'] / 1000000.0 // in megabytes  \n    } else {\n      return 1\n    }\n  }\n\n  getAnalyticsMetadata() {\n    return this.stats.getLastRun()\n    .then(ts => {\n      const run = moment(new Date(ts))\n      const then = moment(new Date()).subtract(30, 'min')\n      const elasped = moment.duration(then.diff(run)).humanize()\n      return { lastUpdated: elasped, size: this.getDBSize() }\n    })\n  }\n\n  getUpdateFrequency() {\n    return this.getDBSize() < 5 ? 5 : 60\n  }\n\n  updateData() {\n    if(this.running) return\n    this.running = true\n    this.bp.logger.debug('botpress-analytics: recompiling analytics')\n    this.stats.getTotalUsers()\n    .then(data => this.savePartialData('totalUsers', data))\n    .then(() => this.stats.getDailyActiveUsers())\n    .then(data => this.savePartialData('activeUsers', data))\n    .then(() => this.stats.getDailyGender())\n    .then(data => this.savePartialData('genderUsage', data))\n    .then(() => this.stats.getInteractionRanges())\n    .then(data => this.savePartialData('interactionsRange', data))\n    .then(() => this.stats.getAverageInteractions())\n    .then(averageInteractions => {\n      this.stats.getNumberOfUsers()\n      .then(nbUsers => {\n        this.savePartialData('fictiveSpecificMetrics', {\n          numberOfInteractionInAverage: averageInteractions,\n          numberOfUsersToday: nbUsers.today,\n          numberOfUsersYesterday: nbUsers.yesterday,\n          numberOfUsersThisWeek: nbUsers.week\n        })\n      })\n    })\n    .then(() => this.stats.usersRetention())\n    .then(data => this.savePartialData('retentionHeatMap', data))\n    .then(() => this.stats.getBusyHours())\n    .then(data => this.savePartialData('busyHoursHeatMap', data))\n    .then(() => {\n      const data = this.getChartsGraphData()\n      this.bp.events.emit('data.send', data)\n      this.stats.setLastRun()\n    })\n    .then(() => this.running = false)\n  }\n\n  savePartialData(property, data) {\n    const chartsData = loadDataFromFile(this.chartsDatafile)\n    chartsData[property] = data\n    fs.writeFileSync(this.chartsDatafile, JSON.stringify(chartsData))\n  }\n\n  getChartsGraphData() {\n\n    const chartsData = loadDataFromFile(this.chartsDatafile)\n\n    if(_.isEmpty(chartsData)) {\n      return { loading: true, noData: true }\n    }\n\n    return {\n      loading: false,\n      noData: false,\n      totalUsersChartData: chartsData.totalUsers || [],\n      activeUsersChartData: chartsData.activeUsers || [],\n      genderUsageChartData: chartsData.genderUsage || [],\n      typicalConversationLengthInADay: chartsData.interactionsRange || [],\n      specificMetricsForLastDays: chartsData.fictiveSpecificMetrics || {},\n      retentionHeatMap: chartsData.retentionHeatMap || [],\n      busyHoursHeatMap: chartsData.busyHoursHeatMap || []\n    }\n  }\n}\n\nmodule.exports = Analytics;\n\n\n\n// WEBPACK FOOTER //\n// ./src/analytics.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"eventemitter2\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"eventemitter2\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 8\n// module chunks = 0","import moment from 'moment'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport { DatabaseHelpers as helpers } from 'botpress'\n\nconst oneDayMs = 1000 * 60 * 60 * 24\n\nlet knex = null\n\nfunction rangeDates() {\n  return knex('users').select(knex.raw('max(created_on) as max, min(created_on) as min'))\n  .then().get(0).then((result) => {\n    if(!result.min || !result.max) {\n      return null\n    }\n\n    var range = moment(result.max).diff(moment(result.min), 'days')\n    var ranges = []\n    for(var i = 1; i <= 10; i++) {\n      ranges.push(parseInt(result.min + (range/10*i)))\n    }\n    const ret = { \n      min: result.min, \n      max: result.max, \n      format: null, \n      ranges: ranges\n    }\n    if(range < 360) {\n      ret.format = date => moment(date).format('MMM Do')\n    } else { // > 1year period\n      ret.format = date => moment(date).format('MMM YY')\n    }\n\n    return ret\n  })\n}\n\nfunction getTotalUsers() {\n  return rangeDates()\n  .then(dates => {\n    if (!dates) return\n    return knex('users').select(knex.raw('distinct platform'))\n    .then(platforms => {\n      \n      const statsBase = platforms.reduce((acc, curr) => {\n        acc[curr.platform] = 0\n        return acc\n      }, { total: 0 })\n\n      return knex('users')\n      .select(knex.raw('count(*) as count, max(created_on) as date, max(platform) as platform'))\n      .groupBy(knex.raw(\"date(created_on), platform\"))\n      .orderBy(knex.raw('date(created_on)'))\n      .then(rows => {\n        let total = 0\n        let totalPlatform = {}\n        const result = {}\n        const min = dates.format(moment(new Date(dates.min)).subtract(1, 'day'))\n        result[min] = Object.assign({}, statsBase)\n        rows.map(row => {\n          const date = dates.format(row.date)\n          if(!result[date]) {\n            result[date] = Object.assign({}, statsBase)\n          }\n          if(!totalPlatform[row.platform]) {\n            totalPlatform[row.platform] = 0\n          }\n          const count = parseInt(row.count)\n          totalPlatform[row.platform] += count\n          result[date].total = total += count\n          result[date][row.platform] = totalPlatform[row.platform]\n        })\n        const max = dates.format(moment(new Date(dates.max)).add(1, 'hour'))\n        result[max] = Object.assign({}, statsBase, { total: total }, totalPlatform)\n        return _.toPairs(result).map(([k, v]) => {\n          v.name = k\n          return v\n        })\n      })\n\n    })\n  })\n}\n\nfunction getLastDaysRange(nb) {\n  const nbOfDays = nb || 14\n\n  let ranges = _.times(nbOfDays, Number)\n  return ranges.map((n) => {\n    var date = moment(new Date()).subtract(n, 'days')\n    return {\n      date: date.format('MMM Do'),\n      start: date.startOf('day').toDate(), \n      end: date.endOf('day').toDate(),\n      day: date.format('l')\n    }\n  })\n}\n\nfunction getDailyActiveUsers() {\n  const ranges = _.reverse(getLastDaysRange())\n  return Promise.mapSeries(ranges, range => {\n    return knex('analytics_interactions')\n    .select(knex.raw('count(*) as count, platform'))\n    .join('users', 'users.id', 'analytics_interactions.user')\n    .where(helpers(knex).date.isBetween('ts', range.start, range.end))\n    .andWhere('direction', '=', 'in')\n    .groupBy(['user', 'platform'])\n    .then(results => {\n      return results.reduce(function(acc, curr) {\n        const count = parseInt(curr.count)\n        acc.total += count\n        acc[curr.platform] = count\n        return acc\n      }, { total: 0, name: range.date })\n    })\n  })\n}\n\nfunction getDailyGender() {\n  const ranges = _.reverse(getLastDaysRange())\n  return Promise.mapSeries(ranges, (range) => {\n    return knex('analytics_interactions')\n    .select(knex.raw('count(*) as count, gender'))\n    .join('users', 'users.id', 'analytics_interactions.user')\n    .where(helpers(knex).date.isBetween('ts', range.start, range.end))\n    .andWhere('direction', '=', 'in')\n    .groupBy(['user', 'gender'])\n    .then(results => {\n      return results.reduce(function(acc, curr) {\n        const count = parseInt(curr.count)\n        acc.total += count\n        acc[curr.gender] = count\n        return acc\n      }, { total: 0, name: range.date })\n    })\n  })\n}\n\nfunction getInteractionRanges() {\n  const ranges = getLastDaysRange()\n  return Promise.mapSeries(ranges, range => {\n\n    const inner = knex.from('analytics_interactions')\n      .where(helpers(knex).date.isBetween('ts', range.start, range.end))\n      .andWhere('direction', '=', 'in')\n      .groupBy('user')\n      .select(knex.raw('count(*) as c')).toString()\n\n    return knex.raw(`select\n      sum(r1) as s1,\n      sum(r2) as s2,\n      sum(r3) as s3,\n      sum(r4) as s4,\n      sum(r5) as s5,\n      sum(r6) as s6,\n      sum(r7) as s7,\n      sum(r8) as s8\n    from (select \n      (select count(*) as count where c between 0 and 1) as r1,\n      (select count(*) where c between 2 and 3) as r2,\n      (select count(*) where c between 4 and 5) as r3,\n      (select count(*) where c between 6 and 9) as r4,\n      (select count(*) where c between 10 and 14) as r5,\n      (select count(*) where c between 15 and 29) as r6,\n      (select count(*) where c between 30 and 50) as r7,\n      (select count(*) where c > 50) as r8\n        from (` + inner + `) as q1 ) as q2`)\n  }).then(rows => {\n    if (rows[0].rows) {\n      return rows.map(r => r.rows[0])\n    } else {\n      return rows.map(r => r[0])\n    }\n  })\n  .then(results => {\n    return results.reduce(function(acc, curr) {\n      return _.mapValues(acc, (a, k) => {\n        return a + (parseInt(curr[k]) || 0)\n      })\n    }, { s1: 0, s2: 0, s3: 0, s4: 0, s5: 0, s6: 0, s7: 0, s8: 0 })\n  })\n  .then(results => {\n    return [\n      { name: '[0-2]', count: results.s1 },\n      { name: '[2-4]', count: results.s2 },\n      { name: '[4-6]', count: results.s3 },\n      { name: '[6-10]', count: results.s4 },\n      { name: '[10-15]', count: results.s5 },\n      { name: '[15-30]', count: results.s6 },\n      { name: '[30-50]', count: results.s7 },\n      { name: '50+', count: results.s8 }\n    ]\n  })\n}\n\nfunction getAverageInteractions() {\n  // Average incoming interactions per user per day for the last 7 days\n  const lastWeek = moment(new Date()).subtract(7, 'days').toDate()\n  const now = helpers(knex).date.now()\n\n  return knex.select(knex.raw('avg(c) as count')).from(function() {\n    return this.from('analytics_interactions')\n    .where(helpers(knex).date.isBetween('ts', lastWeek, now))\n    .andWhere('direction', '=', 'in')\n    .groupBy(knex.raw(\"user, date(ts)\"))\n    .select(knex.raw('count(*) as c'))\n    .as('q1')\n  })\n  .then().get(0).then(result => {\n    return parseFloat(result.count) || 0.0\n  })\n}\n\nfunction getNumberOfUsers() {\n  // Get total number of active users for today, yesterday, this week\n\n  const ranges = [\n    {\n      label: 'today', \n      start: moment(new Date()).startOf('day').toDate(),\n      end: new Date() \n    },\n    {\n      label: 'yesterday',\n      start: moment(new Date()).subtract(1, 'days').startOf('day').toDate(),\n      end: moment(new Date()).subtract(1, 'days').endOf('day').toDate()\n    },\n    {\n      label: 'week',\n      start: moment(new Date()).startOf('week').toDate(),\n      end: moment(new Date()).endOf('week').toDate()\n    }\n  ]\n\n  return Promise.mapSeries(ranges, (range) => {\n    return knex.select(knex.raw('count(*) as count')).from(function() {\n      return this.from('analytics_interactions')\n      .where(helpers(knex).date.isBetween('ts', range.start, range.end))\n      .andWhere('direction', '=', 'in')\n      .groupBy('user')\n      .select(knex.raw(1))\n      .as('q1')\n    })\n    .then().get(0)\n    .then(result => ({ label: range.label, count: result.count }))\n  })\n  .then(results => {\n    return results.reduce((acc, curr) => {\n      acc[curr.label] = curr.count\n      return acc\n    }, {})\n  })\n}\n\nfunction usersRetention() {\n  // Get the last 7 days cohort of users along with the retention rate\n\n  let cohorts = _.times(8, n => Number(8 - n))\n  cohorts = cohorts.map(n => {\n    const day = moment().subtract(n, 'days')\n    return {\n      start: day.startOf('day').toDate(),\n      end: day.endOf('day').toDate(),\n      name: day.format('MMM Do'),\n      date: day\n    }\n  })\n\n  const result = {}\n\n  // For each days of the cohort\n  return Promise.mapSeries(cohorts, coo => {\n    // Compute the cohort size [i.e. how many new users on this day?]\n    return knex('users')\n      .where(helpers(knex).date.isBetween('created_on', coo.start, coo.end))\n      .select(knex.raw('count(*) as cohort_size'))\n      .then().get(0).then(({ cohort_size }) => {\n        cohort_size = parseFloat(cohort_size)\n\n        // Compute the next 7 days of the cohort\n        // and check how many users [from this cohort] spoke on or before this date\n        // A user is considered as retentioned if he interacted with the bot any day after he onboarded\n\n        const daysToAdd = _.times(7, n => n) // from 0 to 6\n        return Promise.mapSeries(daysToAdd, dta => {\n          const since = moment(coo.start).add(dta, 'days').endOf('day').toDate() // +x days\n\n          return knex.from(function() {\n            this.from('analytics_interactions')\n            .join('users', 'analytics_interactions.user', 'users.id')\n            // where he is a member a this cohort\n            .where(helpers(knex).date.isBetween('created_on', coo.start, coo.end))\n            // and where he interacted with the bot since onboard+X days\n            .andWhere(helpers(knex).date.isAfter('ts', since))\n            // and where the user spoke, not the bot\n            .andWhere('direction', '=', 'in')\n            .groupBy('users')\n            // returns the number of interactions per user\n            .select(knex.raw('count(*) as interaction_count'))\n            .as('q1')\n          }).select(knex.raw('count(*) as partial_retention')) // return the total number of users\n          .then().get(0).then(({ partial_retention }) => {\n            partial_retention = parseFloat(partial_retention)\n\n            // if the date is out of the cohort sample\n            if (moment(since).startOf('day').isSameOrAfter(moment().startOf('day'))) {\n              return null\n            }\n\n            return (partial_retention / cohort_size) || 0\n          })\n        }).then(retention => {\n          const mean = _.mean(_.filter(retention, v => v !== null))\n          result[coo.name] = [cohort_size, ...retention, mean]\n        })\n      })\n    })\n  .then(() => result)\n}\n\nfunction getBusyHours() {\n  const ranges = getLastDaysRange(7)\n  const result = {}\n\n  return Promise.mapSeries(ranges, range => {\n    // select count(*) as count, ts from interactions\n    // group by strftime('%H', ts/1000, 'unixepoch')\n    return knex('analytics_interactions')\n    .where(helpers(knex).date.isBetween('ts', range.start, range.end))\n    .select(knex.raw('count(*) as count, ' + helpers(knex).date.hourOfDay('ts').sql + ' as ts'))\n    .groupBy(helpers(knex).date.hourOfDay('ts'))\n    .then(rows => {\n      const row = []\n      _.times(24, () => row.push(0))\n      const biggest = rows.reduce((acc, curr) => {\n        return acc = curr.count > acc ? curr.count : acc\n      }, 0)\n      rows.map(x => {\n        row[parseInt(x.ts)] = Math.min(Number((x.count/biggest).toFixed(2)), 0.75)\n      })\n\n      result[range.date] = row\n    })\n  })\n  .then(() => result)\n}\n\nfunction getLastRun() {\n  return knex('analytics_runs').orderBy('ts', 'desc').limit(1)\n  .then().get(0).then(entry => {\n    return entry && moment(entry.ts)\n  })\n}\n\nfunction setLastRun() {\n  return knex('analytics_runs')\n  .insert({ ts: helpers(knex).date.now() })\n  .then(true)\n}\n\nmodule.exports = k => {\n  knex = k\n  return {\n    getTotalUsers: getTotalUsers,\n    getDailyActiveUsers: getDailyActiveUsers,\n    getDailyGender: getDailyGender,\n    getInteractionRanges: getInteractionRanges,\n    getAverageInteractions: getAverageInteractions,\n    getNumberOfUsers: getNumberOfUsers,\n    usersRetention: usersRetention,\n    getBusyHours: getBusyHours,\n    getLastRun: getLastRun,\n    setLastRun: setLastRun\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stats.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"botpress\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botpress\"\n// module id = 11\n// module chunks = 0","import moment from 'moment'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nmodule.exports = ({ bp }) => {\n  const graphs = []\n\n  async function update(name, operation, value, racing = false) {\n    if (!_.isString(name)) {\n      throw new Error('Invalid name, expected a string')\n    }\n\n    const knex = await bp.db.get()\n\n    const today = moment().format('YYYY-MM-DD')\n    name = name.toLowerCase().trim()\n\n    if (!name.includes('~')) {\n      name += '~'\n    }\n\n    const result = await knex('analytics_custom')\n      .where('date', today)\n      .andWhere('name', name)\n      .update('count', operation)\n      .then()\n\n    if (result == 0 && !racing) {\n      await knex('analytics_custom')\n        .insert({\n          name: name,\n          date: today,\n          count: value\n        })\n        .catch(err => {\n          return update(name, operation, value, true)\n        })\n    }\n  }\n\n  async function increment(name, count = 1) {\n    if (!_.isNumber(count)) {\n      throw new Error('Invalid count increment, expected a valid number')\n    }\n\n    const countQuery = count < 0 ? 'count - ' + Math.abs(count) : 'count + ' + Math.abs(count)\n\n    const knex = await bp.db.get()\n\n    return update(name, knex.raw(countQuery), count)\n  }\n\n  async function decrement(name, count = 1) {\n    return increment(name, count * -1)\n  }\n\n  async function set(name, count = 1) {\n    return update(name, count, count)\n  }\n\n  //{ name, type, description, variables }\n  function addGraph(graph) {\n    if (!_.includes(['count', 'percent', 'piechart'], graph.type)) {\n      throw new Error('Unknown graph of type ' + graph.type)\n    }\n\n    graphs.push(graph)\n  }\n\n  const getters = {\n    count: async function(graph, from, to) {\n      const knex = await bp.db.get()\n\n      const variable = _.first(graph.variables)\n\n      const rows = await knex('analytics_custom')\n        .select(['date', knex.raw('sum(count) as count')])\n        .where('date', '>=', from)\n        .andWhere('date', '<=', to)\n        .andWhere('name', 'LIKE', variable + '~%')\n        .groupBy('date')\n        .then(rows => {\n          return rows.map(row => {\n            return Object.assign(row, { count: parseInt(row.count) })\n          })\n        })\n\n      return Object.assign({}, graph, { results: rows })\n    },\n\n    percent: async function(graph, from, to) {\n      const variable1 = _.first(graph.variables)\n      const variable2 = _.last(graph.variables)\n\n      const count1 = await getters.count({ variables: [variable1] }, from, to)\n      const count2 = await getters.count({ variables: [variable2] }, from, to)\n\n      const allDates = _.uniq([..._.map(count1.results, 'date'), ..._.map(count2.results, 'date')])\n\n      const rows = allDates.map(date => {\n        const n1 = _.find(count1.results, { date: date }) || { count: 0 }\n        const n2 = _.find(count2.results, { date: date }) || { count: 1 }\n\n        let percent = n1.count / n2.count\n\n        if (_.isFunction(graph.fn)) {\n          percent = graph.fn(n1.count, n2.count)\n        }\n\n        if (percent > 1) {\n          percent = 1\n        }\n\n        return { date: date, percent: percent }\n      })\n\n      return Object.assign({}, graph, { results: rows })\n    },\n\n    piechart: async function(graph, from, to) {\n      const knex = await bp.db.get()\n\n      const variable = _.first(graph.variables)\n\n      const rows = await knex('analytics_custom')\n        .select(['name', knex.raw('sum(count) as count')])\n        .where('date', '>=', from)\n        .andWhere('date', '<=', to)\n        .andWhere('name', 'LIKE', variable + '~%')\n        .groupBy('name')\n        .then(rows => {\n          return rows.map(row => {\n            const name = _.drop(row.name.split('~')).join('~')\n\n            return Object.assign(row, {\n              name: _.isEmpty(name) ? 'unknown' : name,\n              count: parseInt(row.count)\n            })\n          })\n        })\n\n      return Object.assign({}, graph, { results: rows })\n    }\n  }\n\n  async function getAll(from, to) {\n    return Promise.map(graphs, graph => getters[graph.type](graph, from, to))\n  }\n\n  return { increment, decrement, set, addGraph, getAll }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/custom_analytics.js","import Promise from 'bluebird'\nimport moment from 'moment'\nimport { DatabaseHelpers as helpers } from 'botpress'\nimport _ from 'lodash'\n\nlet knex = null\nlet bp = null\n\nfunction initializeDb() {\n  if (!knex) {\n    throw new Error('you must initialize the database before')\n  }\n\n  return helpers(knex).createTableIfNotExists('analytics_interactions', function (table) {\n    table.increments('id').primary()\n    table.timestamp('ts')\n    table.string('type')\n    table.string('text')\n    table.string('user').references('users.id')\n    table.enu('direction', ['in', 'out'])\n  })\n  .then(function() {\n    return helpers(knex).createTableIfNotExists('analytics_runs', function(table) {\n      table.increments('id').primary()\n      table.timestamp('ts')\n    })\n  })\n  .then(function() {\n    return helpers(knex).createTableIfNotExists('analytics_custom', function(table) {\n      table.string('date')\n      table.string('name')\n      table.integer('count')\n      table.unique(['date', 'name'])\n    })\n  })\n  .then(() => knex)\n}\n\nfunction saveInteractionIn(event) {\n\n  let user = _.get(event, 'user.id')\n    || _.get(event, 'user.userId')\n    || _.get(event, 'raw.from')\n    || _.get(event, 'user')\n\n  if (!user.startsWith(event.platform)) {\n    user = event.platform + ':' + user\n  }\n\n  const interactionRow = {\n    ts: helpers(knex).date.now(),\n    type: event.type,\n    text: event.text,\n    user: user,\n    direction: 'in'\n  }\n\n  return knex('analytics_interactions').insert(interactionRow)\n}\n\nfunction saveInteractionOut(event) {\n\n  let userId = _.get(event, 'user.id')\n    || _.get(event, 'user.userId')\n    || _.get(event, 'raw.to')\n    || _.get(event, 'user')\n\n  if (!userId.startsWith(event.platform)) {\n    userId = event.platform + ':' + userId\n  }\n\n  const interactionRow = {\n    ts: helpers(knex).date.now(),\n    type: event.type,\n    text: event.text,\n    user: userId,\n    direction: 'out'\n  }\n\n  return knex('analytics_interactions').insert(interactionRow)\n  .then(function(result) { return true })\n}\n\nmodule.exports = (k, botpress) => {\n  knex = k\n  bp = botpress\n\n  return {\n    initializeDb: initializeDb,\n    saveIncoming: saveInteractionIn,\n    saveOutgoing: saveInteractionOut\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/db.js"],"sourceRoot":""}