{"version":3,"sources":["webpack:///webpack/bootstrap 5f44cea88d4bb1c1e0a8","webpack:///external \"lodash\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///./src/util.js","webpack:///external \"bluebird\"","webpack:///./src/database/helpers.js","webpack:///./src/stats.js","webpack:///external \"chalk\"","webpack:///external \"moment\"","webpack:///./src/modules.js","webpack:///external \"knex\"","webpack:///./src/listeners.js","webpack:///external \"child_process\"","webpack:///external \"uuid\"","webpack:///external \"ms\"","webpack:///external \"express\"","webpack:///external \"prompt\"","webpack:///external \"crypto\"","webpack:///external \"js-yaml\"","webpack:///./src/cli/migrations ^\\.\\/.*$","webpack:///./src/cli/migrations/0.1.js","webpack:///./src/database/kvs.js","webpack:///./extensions/lite/ServiceLocator.js","webpack:///external \"eventemitter2\"","webpack:///external \"mware\"","webpack:///./src/licensing.js","webpack:///external \"util\"","webpack:///./extensions/lite/api/index.js","webpack:///./index.js","webpack:///external \"babel-polyfill\"","webpack:///./src/cli/index.js","webpack:///external \"commander\"","webpack:///./src/cli/init.js","webpack:///external \"module\"","webpack:///external \"os\"","webpack:///external \"universal-analytics\"","webpack:///external \"node-machine-id\"","webpack:///./src/cli/start.js","webpack:///external \"nodemon\"","webpack:///external \"monitorctrlc\"","webpack:///./src/cli/create.js","webpack:///./src/cli/install.js","webpack:///external \"axios\"","webpack:///./src/configurator.js","webpack:///./src/cli/uninstall.js","webpack:///./src/cli/migrate.js","webpack:///./src/cli/list.js","webpack:///./src/botpress.js","webpack:///external \"source-map-support/register\"","webpack:///external \"cluster\"","webpack:///external \"dotenv\"","webpack:///./extensions/lite/services.js","webpack:///./src/bus.js","webpack:///./src/middlewares.js","webpack:///./extensions/lite/license/index.js","webpack:///./src/logger.js","webpack:///external \"winston\"","webpack:///./src/security/index.js","webpack:///external \"jsonwebtoken\"","webpack:///./extensions/lite/authentication/index.js","webpack:///./src/notifications.js","webpack:///./src/hear.js","webpack:///./src/fallback.js","webpack:///./src/database/index.js","webpack:///./src/database/tables.js","webpack:///./extensions/lite/database/index.js","webpack:///./src/database/users.js","webpack:///./src/database/tags.js","webpack:///./src/database/notifications.js","webpack:///./src/database/content.js","webpack:///./src/about.js","webpack:///./src/umm/index.js","webpack:///./src/umm/engine.js","webpack:///external \"mustache\"","webpack:///./src/umm/proactive.js","webpack:///./src/users.js","webpack:///./src/content/service.js","webpack:///external \"glob\"","webpack:///./src/conversations.js","webpack:///./package.json","webpack:///./extensions/lite/emails/index.js","webpack:///./extensions/lite/mediator/index.js","webpack:///./src/server/index.js","webpack:///external \"http\"","webpack:///./src/server/socket.js","webpack:///external \"socket.io\"","webpack:///external \"socketio-jwt\"","webpack:///./src/server/static.js","webpack:///./src/server/api.js","webpack:///external \"body-parser\"","webpack:///./src/server/anonymous.js","webpack:///./extensions/lite/api/accounts.js","webpack:///./src/server/secured.js","webpack:///external \"multer\""],"names":["IS_DEV","process","env","NODE_ENV","NPM_CMD","test","platform","print","args","mapping","info","white","warn","yellow","arguments","error","red","success","green","level","matched","splice","console","log","black","bgWhite","resolveFromDir","fromDir","moduleId","resolve","fromFile","join","_resolveFilename","id","filename","paths","_nodeModulePaths","err","resolveModuleRootPath","entryPath","current","dirname","lookup","existsSync","resolveProjectFile","file","projectLocation","throwIfNotExist","packagePath","Error","getDataLocation","dataDir","isAbsolute","getBotpressVersion","botpressPackagePath","__dirname","botpressJson","JSON","parse","readFileSync","version","collectArgs","val","memo","push","module","exports","isDeveloping","npmCmd","isLite","knex","client","config","dateParse","raw","exp","dateFormat","iso","date","toDate","toISOString","columnOrDateFormat","lite","colOrDate","sql","createTableIfNotExists","tableName","cb","schema","hasTable","then","exists","format","now","isBefore","d1","d2","isAfter","isBetween","d3","isSameDay","hourOfDay","bool","true","false","value","json","set","obj","stringify","get","botfile","visitor","queued","catch","hash","createHash","update","arch","hostname","type","digest","mid","strictCidFormat","forEach","a","track","category","action","label","optOutStats","event","trackException","message","MODULES_URL","FETCH_TIMEOUT","logger","dataLocation","kvs","apply","fetchAllModules","timeout","data","loadModules","moduleDefinitions","botpress","loadedCount","loadedModules","loader","eval","mod","entry","name","handlers","configuration","options","init","scanModules","botPackage","deps","dependencies","merge","devDependencies","reduce","result","key","root","modulePackage","homepage","settings","getRandomCommunityHero","method","modulesCachePath","listAllCommunityModules","modules","sample","username","github","avatar","contributions","hero","contributors","login","html_url","avatar_url","mapModuleList","installed","listInstalledModules","map","stars","stargazers_count","forks","forks_count","docLink","latest","keywords","fullName","full_name","updated","updated_at","issues","open_issues_count","icon","package","menuIcon","description","includes","license","author","title","featured","popular","official","writeFileSync","diff","props","newModules","length","debug","Date","resolveModuleNames","names","TypeError","basename","prefix","substr","replace","runSpawn","command","reject","stdout","on","toString","stderr","code","installModules","install","cwd","uninstallModules","uninstall","prodDeps","keys","filter","dep","listInstalled","_scan","_load","matches","conditions","isPlainObject","text","pairs","toPairs","every","comparrer","eventValue","isFunction","isRegExp","isString","isNil","captured","tail","exec","m","isEqual","hear","callback","next","isArray","conditionsItem","botfilePath","bot_path","dbLocation","migrate_database_schema","migrate_botfile","updateUsers","connection","useNullAsDefault","table","string","created_on","rows","bootstrap","DELETE_TABLES","dropTableIfExists","has","dropTable","before","indexOf","after","getSetCallback","betweenGetAndSetCallback","upsert","params","keyCol","valueCol","modifiedOnCol","path","where","limit","row","at","setValue","original","Object","assign","primary","timestamp","initPromise","isFulfilled","resolveInit","_services","throwIfNotFound","getService","registerService","fn","db","licensesPath","getLicenses","packageJsonPath","agplContent","botpressContent","agpl","licensedUnder","toLowerCase","changeLicense","licensePath","licenseFileName","licenseContent","pkg","middleware","bp","response","userId","user","sendText","middlewares","sendOutgoing","to","responseTo","guard","start","getLicensing","licenses","currentLicense","find","getStatus","getFeatures","app","anonymous","installAnonymous","secured","installSecured","global","_babelPolyfill","require","DatabaseHelpers","CLI","Botpress","option","defaultWatchExt","alias","argv","help","introductionText","waitingText","nextStepText","bold","assertDoesntExist","exit","getTemplate","templatePath","template","templateContent","generateTemplate","variables","compiled","destination","generate","mkdirSync","write","program","dirName","undefined","chdir","each","currentDirectoryName","properties","pattern","required","default","yes","delimiter","projectPath","stack","getDefaultWatchIgnore","bf","modulesConfigDir","opts","watch","w","argvWithoutWatch","arg","nodemonOptions","ext","watchExt","watchDir","ignore","watchIgnore","stdin","restartable","mon","changedFile","two","emit","setTimeout","bot","MODULE_NAME_CONVENTION_BEGINS","MODULE_NAME_REGEX","RegExp","doneText","documentation","directory","prefixModuleNameWithBotpress","moduleDirectory","modulesManager","validations","validation","defaultValues","amendOption","validTypes","amendOptions","mapValues","validateSet","validateSave","object","objKeys","requiredKeys","validateName","overwriteFromDefaultValues","overwriteFromEnvValues","_v","overwriteFromBotfileValues","config_name","overwriteFromConfigFileValues","configFilePath","fromCallback","safeLoadAll","configFromFile","removeUnusedKeys","final","createConfig","saveAll","loadAll","all","fromVersion","files","sortBy","x","toApply","f","parseFloat","mapSeries","migration","finally","RESTART_EXIT_CODE","mkdirIfNeeded","_setupEnv","stats","interval","setInterval","isFirstRun","sqlite","location","postgres","security","securityConfig","events","notifications","about","licensing","hearMiddleware","fallbackMiddleware","emails","emailConfig","mediator","convo","users","contentManager","umm","register","incomingMiddleware","_loadedModules","scanAndRegisterCategories","_bindEvents","server","values","ready","port","middlewareAutoLoading","load","projectEntry","call","reason","p","isMaster","firstWorkerHasStartedAlready","receiveMessageFromWorker","workerStatus","worker","fork","isWorker","send","_start","envPath","envConfig","k","ENV_OVERLOAD","EventBus","wildcard","maxListeners","createMiddleware","middlewareName","_use","_error","use","dispatch","conformity","conformsTo","run","_promise","middlewaresFilePath","incoming","outgoing","customizations","noopChain","readCustomizations","writeCustomizations","setCustomizations","order","enabled","resetCustomizations","handler","some","list","orderBy","customization","licenseMiddleware","sendToMiddleware","mw","sendIncoming","getCustomizations","licensed","status","logConfig","Logger","transports","Console","prettyPrint","colorize","enableFileTransport","logFile","add","File","maxsize","maxSize","archiveToFile","disableFileLogs","authentication","tokenExpiry","password","ip","attempt","canAttempt","authenticate","loginUser","getSecret","secret","token","sign","expiresIn","decoded","verify","verifyUser","verified","_authentication","secretPath","createNewSecret","randomBytes","adminPassword","BOTPRESS_ADMIN_PASSWORD","attempts","lastCleanTimestamp","maxAttempts","resetAfter","email","first_name","last_name","roles","resetSecret","redirectUrl","enableSound","callingFile","getOriginatingModule","callingModuleRoot","url","menuText","notification","v4","sound","read","insert","toDatabase","logMessage","loggerLevel","create","archived","fromDatabase","getArchived","getInbox","notificationId","archive","archiveAll","markAsRead","markAllAsRead","origPrepareStackTrace","prepareStackTrace","_","shift","getFileName","module_id","module_icon","module_name","redirect_url","chain","condition","fallbackHandler","initializeCoreDatabase","createKnex","_knex","host","database","ssl","pool","afterCreate","conn","getDb","saveUser","gender","timezone","locale","picture_url","userRow","query","select","from","kvs_instance","createKvs","_kvs","getKvs","kvsGet","instance","kvsSet","concat","table_factories","enu","integer","unique","boolean","getBotInformation","packageJson","fs","promisifyAll","statAsync","storagePath","isDirectory","readdirAsync","contents","endsWith","extname","readFileAsync","getDocument","incomingEvent","blocName","additionalData","initialData","startsWith","itemName","getItem","contentItem","itemCategoryId","categoryId","getCategorySchema","itemCategory","itemBloc","ummBloc","split","fileName","markdown","fullContext","originalEvent","isObject","blocs","context","outputPlatform","bloc","doSendBloc","sendBloc","processors","templates","getStoragePath","registerConnector","processOutgoing","verbose","throwIfNoPlatform","currentPlatform","getTemplates","ummPath","single","folder","saveDocument","content","filePath","writeFileAsync","__internal","delay","wait","processIncoming","reply","proactiveMethods","ParsingError","instructionIndex","internalMessage","captureStackTrace","mapBlocs","rawBlocs","mapBloc","premapInstruction","instruction","index","instructions","detectedPlatforms","evaluate","isArrayLike","isEmpty","if","unless","i","platforms","trim","mapKeys","__","trimmed","mapInstruction","messages","ret","parseInt","typing","omit","processor","msg","mustached","render","rawBloc","getUser","inspect","forgedEvent","forged","sendToUser","tag","toUpper","hasTag","tagged_on","del","untag","getTag","tags","v","getTags","selectTags","subQuery","groupBy","leftJoin","offset","t","toUpperCase","filterByTag","listWithTags","count","categories","formDir","formsDir","searchOptions","requiredFields","field","listAvailableCategories","jsonSchema","ui","uiSchema","itemId","formData","computeFormData","computeMetadata","metadata","computePreviewText","previewText","randomId","body","created_by","createOrUpdateCategoryItem","searchTerm","items","andWhere","orWhere","transformCategoryItem","listCategoryItems","ids","whereIn","deleteCategoryItems","item","getItemsByMetadata","exportContent","documents","doc","importContent","createdBy","createdOn","INTERVAL_MSGS","formatMessage","initialEvent","formatBloc","isBloc","isBlocCall","validateHandlers","Thread","queue","waiting","_last","last","enqueue","match","defaultHandler","Conversation","messageTypes","clockSpeed","_threads","currentThread","defaultThread","createThread","_get","_set","_cache","intervalBetweenMessages","_timeoutHandle","_timeoutInterval","_useTimeout","_clock","tick","_clockSpeed","_processing","_sendLock","_outgoing","endWhenDone","sendNext","setImmediate","clearInterval","clearTimeout","thread","getCurrentThread","restart","emitAsync","peek","stop","dequeue","say","resetTimeout","repeat","teardown","convos","belongsToConvo","initial","c","validateEvent","activate","destroy","api","serveApi","socket","serveSocket","staticStuff","serveStatic","createServer","Promise","listen","io","admin","of","guest","handshake","authorize","visitorId","socketId","onAny","__socketId","__room","serveModule","req","res","appName","contentType","serveCustomTheme","static","headers","accept","sendFile","shortName","iconRequestPath","iconPath","liteDir","liteViews","readdirSync","b","settingsKey","webBundle","bundlePath","subview","sendStatus","customTheme","themeLocation","routersConditions","routers","maybeSendRequireLogin","authorization","end","_authenticationMiddleware","installRouter","installProtector","installMaybeUse","maybeUse","urlencoded","extended","maybeApply","getRouter","router","Router","secure","operation","ressource","wrap","authorizeApi","authorized","post","put","delete","originalUrl","apis","logsSecret","noInterface","plugins","getContributor","unlink","until","fields","results","download","archivePath","search","setHeader","contentUploadMulter","limits","fileSize","fileFilter","mimetype","array","buffer"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/slvn/Desktop/botpress\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5f44cea88d4bb1c1e0a8","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 2\n// module chunks = 0","import chalk from 'chalk'\nimport path from 'path'\nimport Module from 'module'\nimport fs from 'fs'\n\nconst IS_DEV = process.env.NODE_ENV !== 'production'\n\nconst NPM_CMD = /^win/.test(process.platform) ? 'npm.cmd' : 'npm'\n\nconst print = function(...args) {\n  const mapping = {\n    info: chalk.white,\n    warn: function() { return chalk.yellow('WARN', ...arguments) },\n    error: function() { return chalk.red('ERR', ...arguments) },\n    success: function() { return chalk.green('OK', ...arguments) }\n  }\n\n  let level = mapping[args[0]]\n  const matched = !!level\n\n  if (!matched) {\n    level = mapping.info\n  } else {\n    args.splice(0, 1)\n  }\n\n  console.log(chalk.black.bgWhite('[botpress]'), '\\t', level(...args))\n}\n\nconst resolveFromDir = function (fromDir, moduleId) {\n  fromDir = path.resolve(fromDir)\n  const fromFile = path.join(fromDir, 'noop.js')\n  try {\n    return Module._resolveFilename(moduleId, {\n      id: fromFile,\n      filename: fromFile,\n      paths: Module._nodeModulePaths(fromDir)\n    })\n  } catch (err) {\n    return null\n  }\n}\n\nconst resolveModuleRootPath = function(entryPath) {\n  let current = path.dirname(entryPath)\n  while (current !== '/') {\n    const lookup = path.join(current, 'package.json')\n    if (fs.existsSync(lookup)) {\n      return current\n    }\n    current = path.resolve(path.join(current, '..'))\n  }\n  return null\n}\n\nconst resolveProjectFile = (file, projectLocation, throwIfNotExist) => {\n  const packagePath = path.resolve(projectLocation || './', file)\n\n  if (!fs.existsSync(packagePath)) {\n    if (throwIfNotExist) {\n      throw new Error('Could not find bot\\'s package.json file')\n    }\n    return null\n  }\n\n  return packagePath\n}\n\nconst getDataLocation = (dataDir, projectLocation) => (\n  dataDir && path.isAbsolute(dataDir)\n    ? path.resolve(dataDir)\n    : path.resolve(projectLocation, dataDir || 'data')\n)\n\nconst getBotpressVersion = () => {\n  const botpressPackagePath = path.join(__dirname, '../package.json')\n  const botpressJson = JSON.parse(fs.readFileSync(botpressPackagePath))\n  return botpressJson.version\n}\n\nconst collectArgs = (val, memo) => {\n  memo.push(val)\n  return memo\n}\n\n\nmodule.exports = {\n  print,\n  resolveFromDir,\n  isDeveloping: IS_DEV,\n  resolveModuleRootPath,\n  resolveProjectFile,\n  getDataLocation,\n  npmCmd: NPM_CMD,\n  getBotpressVersion,\n  collectArgs\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 4\n// module chunks = 0","/*\n  The goal of these helpers is to generate SQL queries\n  that are valid for both SQLite and Postgres\n*/\n\nimport moment from 'moment'\n\nconst isLite = knex => {\n  return knex.client.config.client === 'sqlite3'\n}\n\nmodule.exports = knex => {\n\n  const dateParse = exp => {\n    return isLite(knex)\n      ? knex.raw(`strftime('%Y-%m-%dT%H:%M:%fZ', ${exp})`)\n      : knex.raw(exp)\n  }\n\n  const dateFormat = date => {\n    const iso = moment(date).toDate().toISOString()\n    return dateParse(`'${iso}'`)\n  }\n\n  const columnOrDateFormat = colOrDate => {\n    const lite = isLite(knex)\n\n    if (colOrDate.sql) {\n      return colOrDate.sql\n    }\n\n    if (typeof colOrDate === 'string') {\n      return lite ? dateParse(colOrDate) : `\"${colOrDate}\"`\n    }\n\n    return dateFormat(colOrDate)\n  }\n\n  return {\n    isLite: () => isLite(knex),\n\n    // knex's createTableIfNotExists doesn't work with postgres\n    // https://github.com/tgriesser/knex/issues/1303\n    createTableIfNotExists: (tableName, cb) => {\n      return knex.schema.hasTable(tableName)\n        .then(exists => {\n          if (exists) { return }\n          return knex.schema.createTableIfNotExists(tableName, cb)\n        })\n    },\n\n    date: {\n      format: dateFormat,\n\n      now: () => isLite(knex) ? knex.raw(\"strftime('%Y-%m-%dT%H:%M:%fZ', 'now')\") : knex.raw('now()'),\n\n      isBefore: (d1, d2) => {\n        d1 = columnOrDateFormat(d1)\n        d2 = columnOrDateFormat(d2)\n\n        return knex.raw(d1 + ' < ' + d2)\n      },\n\n      isAfter: (d1, d2) => {\n        d1 = columnOrDateFormat(d1)\n        d2 = columnOrDateFormat(d2)\n\n        return knex.raw(d1 + ' > ' + d2)\n      },\n\n      isBetween: (d1, d2, d3) => {\n        d1 = columnOrDateFormat(d1)\n        d2 = columnOrDateFormat(d2)\n        d3 = columnOrDateFormat(d3)\n\n        return knex.raw(`${d1} BETWEEN ${d2} AND ${d3}`)\n      },\n\n      isSameDay: (d1, d2) => {\n        d1 = columnOrDateFormat(d1)\n        d2 = columnOrDateFormat(d2)\n\n        return knex.raw(`date(${d1}) = date(${d2})`)\n      },\n\n      hourOfDay: date => {\n        date = columnOrDateFormat(date)\n        return isLite(knex)\n          ? knex.raw(`strftime('%H', ${date})`)\n          : knex.raw(`to_char(${date}, 'HH24')`)\n      }\n    },\n\n    bool: {\n\n      true: () => isLite(knex) ? 1 : true,\n      false: () => isLite(knex) ? 0 : false,\n      parse: value => isLite(knex) ? !!value : value\n\n    },\n\n    json: {\n      set: obj => {\n        return isLite(knex) ? obj && JSON.stringify(obj) : obj\n      },\n      get: obj => {\n        return isLite(knex) ? obj && JSON.parse(obj) : obj\n      }\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/helpers.js","import os from 'os'\nimport crypto from 'crypto'\nimport ua from 'universal-analytics'\nimport { machineId } from 'node-machine-id'\n\nmodule.exports = (botfile) => {\n\n  let visitor = null\n  let queued = []\n\n  machineId()\n    .catch(() => {\n      const hash = crypto.createHash('sha256')\n      hash.update(os.arch() + os.hostname() + os.platform() + os.type())\n      return hash.digest('hex')\n    })\n    .then(mid => {\n      visitor = ua('UA-90044826-1', mid, { strictCidFormat: false })\n      queued.forEach(a => a())\n      queued = []\n    })\n\n  const track = (category, action, label = null, value = null) => {\n    if (!!botfile.optOutStats) {\n      return // Don't track if bot explicitly opted out from stats collection\n    }\n\n    if (!visitor) {\n      queued.push(() => track(category, action, label, value))\n      return\n    }\n\n    visitor.event(category, action, label, value, () => { /* ignore errors */ })\n  }\n\n  const trackException = message => {\n    if (!!botfile.optOutStats) {\n      return // Don't track if bot explicitly opted out from stats collection\n    }\n\n    if (!visitor) {\n      queued.push(() => trackException(message))\n      return\n    }\n\n    visitor.event(message, () => { /* ignore errors */ })\n  }\n\n  return { track, trackException }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stats.js","module.exports = require(\"chalk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chalk\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 8\n// module chunks = 0","import { spawn } from 'child_process'\nimport path from 'path'\nimport fs from 'fs'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport axios from 'axios'\nimport { createConfig } from './configurator'\n\nimport {\n  print,\n  isDeveloping,\n  npmCmd,\n  resolveModuleRootPath,\n  resolveFromDir,\n  resolveProjectFile\n} from './util'\n\nconst MODULES_URL = 'https://s3.amazonaws.com/botpress-io/all-modules.json'\nconst FETCH_TIMEOUT = 5000\n\nmodule.exports = (logger, projectLocation, dataLocation, kvs) => {\n\n  const log = (level, ...args) => {\n    if (logger && logger[level]) {\n      logger[level].apply(this, args)\n    } else {\n      print.apply(this, [level, ...args])\n    }\n  }\n\n  const fetchAllModules = () => {\n    return axios.get(MODULES_URL, { timeout: FETCH_TIMEOUT })\n      .then(({ data }) => data)\n      .catch(() => logger.error('Could not fetch modules'))\n  }\n\n  const loadModules = (moduleDefinitions, botpress) => {\n    let loadedCount = 0\n    const loadedModules = {}\n\n    moduleDefinitions.forEach(mod => {\n      // eslint-disable-next-line no-eval\n      const loader = eval('require')(mod.entry)\n\n      if (typeof loader !== 'object') {\n        return logger.warn(`Ignoring module ${mod.name}. Invalid entry point signature.`)\n      }\n\n      mod.handlers = loader\n\n      try {\n        mod.configuration = createConfig({\n          kvs: kvs,\n          name: mod.name,\n          botfile: botpress.botfile,\n          projectLocation,\n          options: loader.config || {}\n        })\n      } catch (err) {\n        logger.error(`Invalid module configuration in module ${mod.name}:`, err)\n      }\n\n      try {\n        loader.init && loader.init(botpress, mod.configuration)\n      } catch (err) {\n        logger.warn('Error during module initialization: ', err)\n      }\n\n      loadedModules[mod.name] = mod\n      logger.info(`Loaded ${mod.name}, version ${mod.version}`)\n      loadedCount++\n    })\n\n    if (loadedCount > 0) {\n      logger.info(`Loaded ${loadedCount} modules`)\n    }\n\n    return loadedModules\n  }\n\n  const scanModules = () => {\n    const packagePath = path.join(projectLocation, 'package.json')\n\n    if (!fs.existsSync(packagePath)) {\n      return logger.warn('No package.json found at project root, ' +\n        'which means botpress can\\'t load any module for the bot.')\n    }\n\n    // eslint-disable-next-line no-eval\n    const botPackage = eval('require')(packagePath)\n\n    let deps = botPackage.dependencies || {}\n    if (isDeveloping) {\n      deps = _.merge(deps, botPackage.devDependencies || {})\n    }\n\n    return _.reduce(deps, (result, value, key) => {\n      if (!/^botpress-/i.test(key)) {\n        return result\n      }\n      const entry = resolveFromDir(projectLocation, key)\n      if (!entry) {\n        return result\n      }\n      const root = resolveModuleRootPath(entry)\n      if (!root) {\n        return result\n      }\n\n      // eslint-disable-next-line no-eval\n      const modulePackage = eval('require')(path.join(root, 'package.json'))\n      if (!modulePackage.botpress) {\n        return result\n      }\n\n      return result.push({\n        name: key,\n        root: root,\n        homepage: modulePackage.homepage,\n        settings: modulePackage.botpress,\n        version: modulePackage.version,\n        entry: entry\n      }) && result\n    }, [])\n  }\n\n  const getRandomCommunityHero = Promise.method(() => {\n    const modulesCachePath = path.join(dataLocation, './modules-cache.json')\n\n    return listAllCommunityModules()\n      .then(() => {\n        const { modules } = JSON.parse(fs.readFileSync(modulesCachePath))\n\n        const module = _.sample(modules)\n\n        if (!module) {\n          return {\n            username: 'danyfs',\n            github: 'https://github.com/danyfs',\n            avatar: 'https://avatars1.githubusercontent.com/u/5629987?v=3',\n            contributions: 'many',\n            module: 'botpress'\n          }\n        }\n\n        const hero = _.sample(module.contributors)\n\n        return {\n          username: hero.login,\n          github: hero.html_url,\n          avatar: hero.avatar_url,\n          contributions: hero.contributions,\n          module: module.name\n        }\n      })\n  })\n\n  const mapModuleList = (modules) => {\n    const installed = listInstalledModules()\n    return modules.map(mod => ({\n      name: mod.name,\n      stars: mod.github.stargazers_count,\n      forks: mod.github.forks_count,\n      docLink: mod.homepage,\n      version: mod['dist-tags'].latest,\n      keywords: mod.keywords,\n      fullName: mod.github.full_name,\n      updated: mod.github.updated_at,\n      issues: mod.github.open_issues_count,\n      icon: mod.package.botpress.menuIcon,\n      description: mod.description,\n      installed: _.includes(installed, mod.name),\n      license: mod.license,\n      author: !mod.author.name ? mod.author : mod.author.name,\n      title: mod.title,\n      category: mod.category,\n      featured: mod.featured,\n      popular: mod.popular,\n      official: mod.official\n    }))\n  }\n\n  const listAllCommunityModules = Promise.method(() => {\n\n    if (!fs) {\n      return [] // TODO Fetch & return\n    }\n\n    const modulesCachePath = path.join(dataLocation, './modules-cache.json')\n    if (!fs.existsSync(modulesCachePath)) {\n      fs.writeFileSync(modulesCachePath, JSON.stringify({\n        modules: [],\n        updated: null\n      }))\n    }\n\n    const { modules, updated } = JSON.parse(fs.readFileSync(modulesCachePath))\n\n    if (updated && moment().diff(moment(updated), 'minutes') <= 30) {\n      return mapModuleList(modules)\n    }\n\n    return Promise.props({\n      newModules: fetchAllModules()\n    })\n      .then(({ newModules }) => {\n\n        if (!newModules || !newModules.length) {\n          if (modules.length > 0) {\n            logger.debug('Fetched invalid modules. Report this to the Botpress Team.')\n            return mapModuleList(modules)\n          } else {\n            newModules = newModules || []\n          }\n        }\n\n        fs.writeFileSync(modulesCachePath, JSON.stringify({\n          modules: newModules,\n          updated: new Date()\n        }))\n\n        return mapModuleList(newModules)\n      })\n  })\n\n  const resolveModuleNames = (names) => {\n    return names.map(name => {\n      if (!name || typeof(name) !== 'string') {\n        throw new TypeError('Expected module name to be a string')\n      }\n\n      let basename = path.basename(name)\n      let prefix = ''\n\n      if (basename !== name) {\n        prefix = name.substr(0, name.length - basename.length - 1)\n      }\n\n      if (basename.replace(/botpress-?/i, '').length === 0) {\n        throw new Error(`Invalid module name: ${basename}`)\n      }\n\n      if (!/^botpress-/i.test(basename)) {\n        basename = `botpress-${basename}`\n      }\n\n      return prefix + basename\n    })\n  }\n\n  const runSpawn = (command) => {\n    return new Promise((resolve, reject) => {\n      command.stdout.on('data', (data) => {\n        log('info', data.toString())\n      })\n\n      command.stderr.on('data', (data) => {\n        log('error', data.toString())\n      })\n\n      command.on('close', (code) => {\n        if (code > 0) {\n          reject()\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  const installModules = Promise.method((...names) => {\n    let modules = resolveModuleNames(names)\n\n    const install = spawn(npmCmd, ['install', '--save', ...modules], {\n      cwd: projectLocation\n    })\n\n    log('info', 'Installing modules: ' + modules.join(', '))\n\n    return runSpawn(install)\n      .then(() => log('success', 'Modules successfully installed'))\n      .catch(err => {\n        log('error', 'An error occurred during modules installation.')\n        throw err\n      })\n  })\n\n  const uninstallModules = Promise.method((...names) => {\n    let modules = resolveModuleNames(names)\n    const uninstall = spawn(npmCmd, ['uninstall', '--save', ...modules], {\n      cwd: projectLocation\n    })\n\n    log('info', `Uninstalling modules: ${modules.join(', ')}`)\n\n    return runSpawn(uninstall)\n      .then(() => log('success', 'Modules successfully removed'))\n      .catch(err => {\n        log('error', 'An error occurred during modules removal.')\n        throw err\n      })\n  })\n\n\n  const listInstalledModules = () => {\n    const packagePath = resolveProjectFile('package.json', projectLocation, true)\n    const { dependencies } = JSON.parse(fs.readFileSync(packagePath))\n    const prodDeps = _.keys(dependencies)\n\n    return _.filter(prodDeps, dep => /botpress-.+/i.test(dep))\n  }\n\n  return {\n    listAllCommunityModules,\n    getRandomCommunityHero,\n    install: installModules,\n    uninstall: uninstallModules,\n    listInstalled: listInstalledModules,\n    _scan: scanModules,\n    _load: loadModules\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules.js","module.exports = require(\"knex\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"knex\"\n// module id = 10\n// module chunks = 0","import _ from 'lodash'\n\nconst matches = function(conditions, event) {\n  if (!_.isPlainObject(conditions)) {\n    conditions = { text: conditions }\n  }\n\n  const pairs = _.toPairs(conditions)\n  return _.every(pairs, ([key, comparrer]) => {\n    const eventValue = _.get(event, key, null)\n\n    if (_.isFunction(comparrer)) {\n      return comparrer(eventValue, event) === true\n    } else if (_.isRegExp(comparrer)) {\n      const matches = comparrer.test(eventValue)\n      \n      if (matches && _.isString(eventValue)) {\n        if (_.isNil(event.captured)) {\n          event.captured = []\n        }\n        \n        const a = _.tail(comparrer.exec(eventValue))\n        a.forEach(m => event.captured.push(m))\n      }\n\n      return matches\n    } else {\n      return _.isEqual(comparrer, eventValue)\n    }\n  })\n}\n\nconst hear = function(conditions, callback) {\n  return (event, next) => {\n    let result = false\n    if (_.isArray(conditions)) {\n      for (let conditionsItem of conditions) {\n        if (matches(conditionsItem, event)) {\n          result = true\n          break\n        }\n      }\n    } else {\n      result = matches(conditions, event)\n    }\n\n    if (result && _.isFunction(callback)) {\n      if (callback.length <= 1) {\n        if (_.isFunction(next)) { \n          next()\n        }\n        callback(event)\n      } else {\n        callback(event, next)\n      }\n    } else {\n      if (_.isFunction(next)) { \n        next()\n      }\n    }\n  }\n}\n\nmodule.exports = { hear, matches }\n\n\n\n// WEBPACK FOOTER //\n// ./src/listeners.js","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"uuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"ms\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ms\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"prompt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prompt\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"js-yaml\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"js-yaml\"\n// module id = 18\n// module chunks = 0","var map = {\n\t\"./0.1\": 20,\n\t\"./0.1.js\": 20\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/cli/migrations ^\\.\\/.*$\n// module id = 19\n// module chunks = 0","import Knex from 'knex'\nimport path from 'path'\nimport fs from 'fs'\n\nimport kvs from '../../database/kvs'\nimport util from '../../util'\n\nmodule.exports = bot_path => {\n  const botfilePath = path.join(bot_path, 'botfile.js')\n  // eslint-disable-next-line no-eval\n  const botfile = eval('require')(botfilePath)\n  const dbLocation = path.resolve(path.join(bot_path, botfile.dataDir, 'db.sqlite'))\n\n  return migrate_database_schema(dbLocation)\n    .then(() => migrate_botfile(botfilePath))\n}\n\n\nfunction migrate_database_schema(dbLocation) {\n\n  const updateUsers = `strftime('%Y-%m-%dT%H:%M:%fZ', created_on/1000, 'unixepoch')`\n\n  const knex = Knex({\n    client: 'sqlite3',\n    connection: { filename: dbLocation },\n    useNullAsDefault: true\n  })\n\n  return knex.schema.table('users', function (table) {\n    table.string('picture_url')\n    table.string('first_name')\n    table.string('last_name')\n  })\n    .then(() => knex('users').update({ created_on: knex.raw(updateUsers) }))\n    .then(rows => {\n      util.print('info', 'Updated ' + rows + ' users')\n      util.print('warn', 'Users table was migrated to new schema but existing '\n      + 'users will miss the following fields: `picture_url`, `first_name`, '\n      + '`last_name`. They have been left to `null`.')\n    })\n    .catch(() => {\n      util.print('warn', 'Did not migrate table `users` as schema was already up to date')\n    })\n    .then(() => kvs(knex).bootstrap())\n    .catch(() => {\n      util.print('warn', 'Did not create table `kvs` as schema was already up to date')\n    })\n    .then(() => {\n\n      if (!process.env.DELETE_TABLES) {\n        util.print('warn', \"This migration must delete the tables of \"\n        + \"the following modules: `botpress-scheduler`, `botpress-analytics`, \"\n        + \"`botpress-hitl` and `botpress-subscription`.\")\n\n        util.print('warn', \"This step has been skipped because you didn't provide \"\n        + \"the DELETE_TABLES=true environement variable.\")\n\n        util.print('warn', \"Please backup your data if necessary then re-run with DELETE_TABLES=true\")\n        return false\n      }\n\n      return dropTableIfExists(knex, 'analytics_interactions')\n        .then(() => dropTableIfExists(knex, 'analytics_runs'))\n        .then(() => dropTableIfExists(knex, 'broadcast_outbox'))\n        .then(() => dropTableIfExists(knex, 'broadcast_schedules'))\n        .then(() => dropTableIfExists(knex, 'hitl_messages'))\n        .then(() => dropTableIfExists(knex, 'hitl_sessions'))\n        .then(() => dropTableIfExists(knex, 'subscription_users'))\n        .then(() => dropTableIfExists(knex, 'subscriptions'))\n        .then(() => dropTableIfExists(knex, 'scheduler_schedules'))\n        .then(() => dropTableIfExists(knex, 'scheduler_tasks'))\n        .then(() => util.print('info', 'Dropped module tables'))\n    })\n}\n\nfunction dropTableIfExists(knex, tableName) {\n  return knex.schema.hasTable(tableName)\n    .then(has => {\n      if (has) {\n        return knex.schema.dropTable(tableName)\n      }\n    })\n}\n\nfunction migrate_botfile(botfilePath) {\n  const before = fs.readFileSync(botfilePath).toString()\n\n  if (before.indexOf('postgres:') >= 0) {\n    util.print('warn', 'Did not migrate botfile as it seemed like `postgres`'\n      + ' was already present. Please migrate manually if this is a mistake.')\n    return false\n  }\n\n  const after = before.replace(/module\\.exports.*?=.*?{/i, `module.exports = {\n\n  /**\n  * Postgres configuration\n  */\n  postgres: {\n    enabled: process.env.DATABASE === 'postgres',\n    host: process.env.PG_HOST || '127.0.0.1',\n    port: process.env.PG_PORT || 5432,\n    user: process.env.PG_USER || '',\n    password: process.env.PG_PASSWORD || '',\n    database: process.env.PG_DB || ''\n  },`)\n\n  fs.writeFileSync(botfilePath, after)\n\n  util.print('info', 'Updated botfile')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/migrations/0.1.js","import Promise from 'bluebird'\nimport _ from 'lodash'\n\nimport helpers from './helpers'\n\n/*\n  Possible options:\n    - betweenGetAndSetCallback: will be called between the get and the set\n    and wait for promise to resolve\n    - tableName: overrides the KVS table's name\n*/\nmodule.exports = (knex, options = {}) => {\n  const getSetCallback = options.betweenGetAndSetCallback || (() => Promise.resolve())\n  const tableName = options.tableName || 'kvs'\n\n  const upsert = (key, value) => {\n    let sql\n\n    const params = {\n      tableName,\n      keyCol: 'key',\n      valueCol: 'value',\n      modifiedOnCol: 'modified_on',\n      key,\n      value: JSON.stringify(value),\n      now: helpers(knex).date.now()\n    }\n\n    if (helpers(knex).isLite()) {\n      sql = `\n        INSERT OR REPLACE INTO :tableName: (:keyCol:, :valueCol:, :modifiedOnCol:)\n        VALUES (:key, :value, :now)\n      `\n    } else {\n      sql = `\n        INSERT INTO :tableName: (:keyCol:, :valueCol:, :modifiedOnCol:)\n        VALUES (:key, :value, :now)\n        ON CONFLICT (:keyCol:) DO UPDATE\n          SET :valueCol: = :value, :modifiedOnCol: = :now\n      `\n    }\n\n    return knex.raw(sql, params)\n  }\n\n  const get = (key, path) => {\n    return knex(tableName).where({ key }).limit(1).then().get(0).then(row => {\n      if (!row) {\n        return null\n      }\n\n      const obj = JSON.parse(row.value)\n      if (!path) {\n        return obj\n      }\n\n      return _.at(obj, [path])[0]\n    })\n  }\n\n  const set = (key, value, path) => {\n    if (!path) {\n      return upsert(key, value)\n    }\n\n    const setValue = obj => {\n      if (path) {\n        _.set(obj, path, value)\n        return obj\n      } else {\n        return value\n      }\n    }\n\n    return get(key)\n      .then(original => {\n        return getSetCallback()\n          .then(() => {\n            if (!_.isNil(original)) {\n              return upsert(key, setValue(Object.assign({}, original)))\n            } else {\n              return upsert(key, setValue({}))\n            }\n          })\n      })\n  }\n\n  const bootstrap = () => {\n    return helpers(knex).createTableIfNotExists(tableName, function(table) {\n      table.string('key').primary()\n      table.text('value')\n      table.timestamp('modified_on')\n    })\n  }\n\n  return { get, set, bootstrap }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/kvs.js","import Promise from 'bluebird'\nimport services from '+/services'\n\nconst _services = {}\nlet resolveInit = false\n\nlet initPromise = new Promise(resolve => {\n  resolveInit = resolve\n})\n\nasync function init(obj) {\n  if (!initPromise.isFulfilled()) {\n    resolveInit()\n    Object.assign(_services, await services(obj))\n  }\n}\n\nfunction registerService(name, fn) {\n  if (!!_services[name]) {\n    throw new Error(`Service '${name}' has already been set`)\n  }\n\n  _services[name] = fn\n}\n\nasync function getService(name, throwIfNotFound = true) {\n  await initPromise\n    .timeout(5000)\n    .catch(err => {\n      throw new Error('ServiceLocator was not initialized')\n    })\n  \n  if (throwIfNotFound && !_services[name]) {\n    throw new Error(`Service '${name}' not registered`)\n  }\n\n  return _services[name]\n}\n\nmodule.exports = { init, registerService, getService }\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/ServiceLocator.js","module.exports = require(\"eventemitter2\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"eventemitter2\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"mware\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mware\"\n// module id = 24\n// module chunks = 0","import path from 'path'\nimport fs from 'fs'\nimport Promise from 'bluebird'\n\nimport _ from 'lodash'\n\nimport listeners from './listeners'\nimport { resolveProjectFile, isDeveloping } from './util'\nimport LicenseGuard from '+/license'\n\nmodule.exports = ({ logger, version, projectLocation, db, botfile }) => {\n\n  const licensesPath = path.join(__dirname, '../licenses')\n\n  const getLicenses = () => {\n    const packageJsonPath = resolveProjectFile('package.json', projectLocation, true)\n    const { license } = JSON.parse(fs.readFileSync(packageJsonPath))\n\n    const agplContent = fs.readFileSync(path.join(licensesPath, 'LICENSE_AGPL3')).toString()\n    const botpressContent = fs.readFileSync(path.join(licensesPath, 'LICENSE_BOTPRESS')).toString()\n\n    return {\n      agpl: {\n        name: 'AGPL-3.0',\n        licensedUnder: license === 'AGPL-3.0',\n        text: agplContent\n      },\n      botpress: {\n        name: 'Botpress',\n        licensedUnder: license.toLowerCase().indexOf('botpress') >= 0,\n        text: botpressContent\n      }\n    }\n  }\n\n  const changeLicense = Promise.method((license) => {\n    const packageJsonPath = resolveProjectFile('package.json', projectLocation, true)\n\n    const licensePath = resolveProjectFile('LICENSE', projectLocation, true)\n    const licenseFileName = (license === 'AGPL-3.0') ? 'LICENSE_AGPL3' : 'LICENSE_BOTPRESS'\n    const licenseContent = fs.readFileSync(path.join(licensesPath, licenseFileName))\n\n    const pkg = JSON.parse(fs.readFileSync(packageJsonPath))\n    pkg.license = license\n\n    fs.writeFileSync(licensePath, licenseContent)\n    fs.writeFileSync(packageJsonPath, JSON.stringify(pkg, null, 2))\n  })\n\n  const middleware = listeners.hear(/^BOT_LICENSE$/, (event, next) => {\n    const packageJsonPath = resolveProjectFile('package.json', projectLocation, true)\n    const { license, name, author } = JSON.parse(fs.readFileSync(packageJsonPath))\n    const bp = event.bp\n\n    const response = `Bot:  ${name}\nCreated by: ${author}\nLicense: ${license}\nBotpress: ${bp.version}`\n\n    const userId = event.user && event.user.id\n\n    if (bp[event.platform] && bp[event.platform].sendText) {\n      bp[event.platform].sendText(userId, response)\n    } else {\n      bp.middlewares.sendOutgoing({\n        platform: event.platform,\n        type: 'text',\n        text: response,\n        raw: {\n          to: userId,\n          message: response,\n          responseTo: event\n        }\n      })\n    }\n  })\n\n  const guard = LicenseGuard(logger, db, botfile)\n  guard.start()\n\n  return {\n    getLicensing: async () => {\n      const licenses = getLicenses()\n      let currentLicense = _.find(licenses, { licensedUnder: true })\n      currentLicense = currentLicense || licenses.botpress\n\n      return Object.assign(await guard.getStatus(), {\n        text: currentLicense.text\n      })\n    },\n    changeLicense,\n    middleware,\n    getFeatures: guard.getFeatures\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/licensing.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 26\n// module chunks = 0","import accounts from '+/api/accounts'\n\nmodule.exports = (bp, app) => ({\n  anonymous: [accounts(bp, app).installAnonymous],\n  secured: [accounts(bp, app).installSecured]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/api/index.js","if (!global._babelPolyfill) {\n  require('babel-polyfill')\n}\n\nvar path = require('path')\n\nvar DatabaseHelpers = require('./src/database/helpers.js')\n\nvar CLI = () => require('./src/cli')\nvar Botpress = () => require('./src/botpress.js')\n\nmodule.exports = { Botpress, DatabaseHelpers, CLI }\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 30\n// module chunks = 0","import program from 'commander'\n\nimport init from './init'\nimport start from './start'\nimport create from './create'\nimport install from './install'\nimport uninstall from './uninstall'\nimport migrate from './migrate'\nimport list from './list'\n\nimport { getBotpressVersion, collectArgs } from '../util'\n\nprogram\n  .command('init')\n  .description('Create a new bot in current directory')\n  .option('-y, --yes', 'Say yes to every prompt and use default values')\n  .action(init)\n\nconst defaultWatchExt = '.js,.jsx,.json,.yml'\nprogram\n  .command('start [path]')\n  .alias('s')\n  .description('Starts running a bot')\n  .option('-w, --watch', 'Watch bot for changes, and restart automatically')\n  .option(\n    '--watchExt <extensions>',\n    `When watching, which file extensions to watch. Default: \"${defaultWatchExt}\"`,\n    defaultWatchExt\n  )\n  .option(\n    '--watchDir <dir>',\n    `When watching, what to watch. Can be repeated. Default: Directory of botfile.js`,\n    collectArgs,\n    []\n  )\n  .option(\n    '--watchIgnore <file|dir>',\n    `When watching, what to ignore. Can be repeated. Default: dataDir, watchExt from botfile.js, and node_modules`,\n    collectArgs,\n    []\n  )\n  .action(start)\n\nprogram\n  .command('install <module> [modules...]')\n  .alias('i')\n  .description('Add modules to the current bot')\n  .action(install)\n\nprogram\n  .command('uninstall <module> [modules...]')\n  .alias('u')\n  .description('Remove modules from the current bot')\n  .action(uninstall)\n\nprogram\n  .command('list')\n  .alias('ls')\n  .description('List installed modules')\n  .action(list)\n\nprogram\n  .command('create')\n  .alias('c')\n  .description('Create a new module for development or distribution')\n  .action(create)\n\nprogram\n  .command('migrate <fromVersion>')\n  .description('Migrates the current bot from version X')\n  .action(migrate)\n\nprogram\n  .version(getBotpressVersion())\n  .description('Easily create, manage and extend chatbots.')\n  .parse(process.argv)\n\nif (!program.args.length) {\n  program.help()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/index.js","module.exports = require(\"commander\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"commander\"\n// module id = 32\n// module chunks = 0","import { spawn } from 'child_process'\nimport prompt from 'prompt'\nimport chalk from 'chalk'\nimport path from 'path'\nimport _ from 'lodash'\nimport fs from 'fs'\nimport util from '../util'\nimport stats from '../stats'\n\nconst introductionText =\n  '\\nHey there, thanks for using botpress!' +\n  \"\\nWe'll walk you through the creation of your new bot.\" +\n  '\\nFor more information or help, please visit http://github.com/botpress/botpress' +\n  '\\n---------------'\n\nconst waitingText = 'please wait, we are installing everything for you...'\nconst nextStepText = 'now run ' + chalk.bold('`bp start`') + ' in your terminal'\n\nconst assertDoesntExist = file => {\n  if (fs.existsSync(file)) {\n    util.print(\n      'error',\n      'package.json or botfile.js are already in repository, ' + 'remove them before running this command again.'\n    )\n    process.exit(1)\n  }\n}\n\nconst getTemplate = template => {\n  const templatePath = path.join(__dirname, 'cli/templates/init', template)\n  const templateContent = fs.readFileSync(templatePath)\n  return _.template(templateContent)\n}\n\nconst generateTemplate = (filename, variables = {}) => {\n  const template = getTemplate(filename)\n  const compiled = template(variables)\n  const destination = path.join(filename.replace(/_\\._/, '.'))\n  fs.writeFileSync(destination, compiled)\n}\n\nconst generate = result => {\n  generateTemplate('package.json', result)\n  generateTemplate('LICENSE')\n  generateTemplate('botfile.js')\n  generateTemplate('index.js')\n  generateTemplate('content.yml')\n  generateTemplate('_._gitignore')\n  generateTemplate('_._welcome')\n\n  fs.mkdirSync('data')\n  fs.writeFileSync('data/bot.log', '')\n  fs.writeFileSync('data/notification.json', '[]')\n\n  fs.mkdirSync('modules_config')\n\n  util.print(waitingText)\n  const install = spawn(util.npmCmd, ['install'])\n\n  install.stdout.on('data', data => {\n    process.stdout.write(data.toString())\n  })\n\n  install.stderr.on('data', data => {\n    process.stdout.write(data.toString())\n  })\n\n  install.on('close', code => {\n    if (code > 0) {\n      util.print('error', 'an error occurred during installation')\n    } else {\n      util.print('success', 'installation has completed successfully')\n      util.print(nextStepText)\n    }\n  })\n}\n\nmodule.exports = function(program) {\n  var dirName = process.argv[3]\n  if (dirName != undefined) {\n    if (!fs.existsSync(dirName)) {\n      fs.mkdirSync(dirName)\n      process.chdir(dirName)\n    } else {\n      util.print('error', dirName + ' directory already exists')\n      return\n    }\n  }\n  stats({}).track('cli', 'bot', 'init')\n\n  util.print(introductionText)\n\n  _.each(['package.json', 'botfile.js', 'index.js'], assertDoesntExist)\n\n  const currentDirectoryName = path.basename(path.resolve('./'))\n\n  var schema = {\n    properties: {\n      name: {\n        description: chalk.white('name:'),\n        pattern: /^[a-z0-9][a-z0-9-_\\.]+$/,\n        message: 'name must be only lowercase letters, ' + 'digits, dashes, underscores and dots.',\n        required: true,\n        default: currentDirectoryName\n      },\n      description: {\n        required: false,\n        description: chalk.white('description:')\n      },\n      author: {\n        required: false,\n        description: chalk.white('author:')\n      },\n      version: {\n        required: false,\n        description: chalk.white('version:'),\n        default: '0.0.1'\n      }\n    }\n  }\n\n  if (program.yes) {\n    generate({\n      name: currentDirectoryName,\n      description: '',\n      author: '',\n      version: '0.0.1'\n    })\n  } else {\n    prompt.message = ''\n    prompt.delimiter = ''\n    prompt.start()\n    prompt.get(schema, function(err, result) {\n      generate(result)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/init.js","module.exports = require(\"module\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"module\"\n// module id = 34\n// module chunks = 0","module.exports = require(\"os\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"os\"\n// module id = 35\n// module chunks = 0","module.exports = require(\"universal-analytics\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"universal-analytics\"\n// module id = 36\n// module chunks = 0","module.exports = require(\"node-machine-id\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-machine-id\"\n// module id = 37\n// module chunks = 0","import path from 'path'\nimport fs from 'fs'\nimport util from '../util'\nimport chalk from 'chalk'\nimport nodemon from 'nodemon'\nimport { monitorCtrlC } from 'monitorctrlc'\n\n/**\n * Entry point of botpress\n *\n * It will do the following things:\n *\n * 1. Find botpress instance creator in `node_modules` folder in current project.\n * 2. Find the `botfile.js` which will be injected into the creator to create the instance.\n * 3. Start the botpress instance.\n */\nmodule.exports = function(projectPath, options) {\n  let Botpress = null\n\n  if (!projectPath || typeof(projectPath) !== 'string') {\n    projectPath = '.'\n  }\n\n  projectPath = path.resolve(projectPath)\n\n  try {\n    // eslint-disable-next-line no-eval\n    Botpress = eval('require')(path.join(projectPath, 'node_modules', 'botpress')).Botpress()\n  } catch (err) {\n    util.print('error', err.message)\n    util.print('error', err.stack)\n    util.print('error', '(fatal) Could not load the local version of botpress')\n    util.print('Hint: 1) have you used `botpress init` to create a new bot the proper way?')\n    util.print('Hint: 2) Do you have read and write permissions on the current directory?')\n    util.print('-------------')\n    util.print('If none of the above works, this might be a bug in botpress. ' +\n      'Please contact the Botpress Team on gitter and provide the printed error above.')\n    process.exit(1)\n  }\n\n  const botfile = path.join(projectPath, 'botfile.js')\n  if (!fs.existsSync(botfile)) {\n    util.print('error', `(fatal) No ${chalk.bold('botfile.js')} file found at: ` + botfile)\n    process.exit(1)\n  }\n\n  const getDefaultWatchIgnore = () => {\n    // eslint-disable-next-line no-eval\n    const bf = eval('require')(botfile)\n    const dataDir = util.getDataLocation(bf.dataDir, projectPath)\n    const modulesConfigDir = util.getDataLocation(bf.modulesConfigDir, projectPath)\n    return [\n      dataDir,\n      modulesConfigDir,\n      'node_modules'\n    ]\n  }\n\n  const opts = options.opts()\n  if (opts.watch || opts.w) {\n    util.print('info', '*** watching files for changes ***')\n\n    const argvWithoutWatch = process.argv.filter(arg => !/^(--watch|-w)$/.test(arg))\n    const nodemonOptions = {\n      cwd: process.cwd(),\n      exec: argvWithoutWatch.join(' '),\n      ext: opts.watchExt,\n      watch: (opts.watchDir && opts.watchDir.length) ? opts.watchDir : undefined,\n      ignore: (opts.watchIgnore && opts.watchIgnore.length) ? opts.watchIgnore : getDefaultWatchIgnore(),\n      stdin: false,\n      restartable: false\n    }\n\n    const mon = nodemon(nodemonOptions)\n    mon.on(\n      'restart',\n      (changedFile, two) =>\n        util.print('info', '*** restarting botpress because of file change: ', changedFile)\n    )\n\n    monitorCtrlC(() => {\n      mon.emit('quit')\n      setTimeout(() => process.exit(), 100)\n    })\n\n  } else {\n    const bot = new Botpress({ botfile })\n    bot.start()\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/start.js","module.exports = require(\"nodemon\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nodemon\"\n// module id = 39\n// module chunks = 0","module.exports = require(\"monitorctrlc\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"monitorctrlc\"\n// module id = 40\n// module chunks = 0","import { spawn } from 'child_process'\nimport prompt from 'prompt'\nimport chalk from 'chalk'\nimport path from 'path'\nimport fs from 'fs'\nimport _ from 'lodash'\nimport util from '../util'\nimport stats from '../stats'\n\nconst MODULE_NAME_CONVENTION_BEGINS = 'botpress-'\nconst MODULE_NAME_REGEX = new RegExp(/^botpress-.*/g)\n\nconst introductionText = \"This program will bootstrap a new Botpress module\"\nconst doneText = \"You're all set! The module is boostrapped and ready to be developed.\"\nconst documentation = \"Tip: when coding your bot, use the command `npm run watch` to recompile\" +\n  \" your module automatically. Also, we strongly recommend that you install your module using \" +\n  \"`npm link ../path/to/botpress-module` so that your bot always points to the most recent version.\"\n\nconst getTemplate = (template) => {\n  const templatePath = path.join(__dirname, 'cli/templates/create' , template)\n  const templateContent = fs.readFileSync(templatePath)\n  return _.template(templateContent)\n}\n\nconst generateTemplate = (directory, filename, variables = {}) => {\n  const template = getTemplate(filename)\n  const compiled = template(variables)\n  const destination = path.join(directory, filename.replace(/_\\._/, '.'))\n  fs.writeFileSync(destination, compiled)\n}\n\nconst prefixModuleNameWithBotpress = name => {\n\n  if (!MODULE_NAME_REGEX.test(name)) {\n    util.print('warn','the name of your module needs to begin by \"botpress-\"')\n    util.print('warn','we renamed your module to '+ chalk.bold(MODULE_NAME_CONVENTION_BEGINS + name))\n    name = MODULE_NAME_CONVENTION_BEGINS + name\n  }\n\n  return name\n}\n\n\nmodule.exports = function() {\n  const moduleDirectory = path.resolve('.')\n  const dirname = path.basename(moduleDirectory)\n\n  stats({}).track('cli', 'modules', 'create')\n\n  util.print(introductionText)\n\n  var schema = {\n    properties: {\n      name: {\n        description: chalk.white('module name:'),\n        pattern: /^[a-z0-9][a-z0-9-_\\.]+$/,\n        message: 'name must be only lowercase letters, ' +\n          'digits, dashes, underscores and dots.',\n        required: true,\n        default: dirname\n      },\n      description: {\n        required: false,\n        description: chalk.white('description:')\n      },\n      author: {\n        required: false,\n        description: chalk.white('author:')\n      },\n      version: {\n        required: false,\n        description: chalk.white('version:'),\n        default: '1.0.0'\n      }\n    }\n  }\n\n  prompt.message = ''\n  prompt.delimiter = ''\n\n  prompt.start()\n\n  prompt.get(schema, function (err, result) {\n    result.name = prefixModuleNameWithBotpress(result.name)\n    \n    \n    if (dirname !== result.name) {\n      util.print('warn', 'We usually recommend that the name of the module directory'\n        + ` (${dirname}) be the same as the module name (${result.name})`)\n    }\n\n    if (fs.existsSync(path.join(moduleDirectory, 'package.json'))) {\n      util.print('error', \"Expected module directory to be empty / uninitialized\")\n      process.exit(1)\n    } else {\n      generateTemplate(moduleDirectory, 'package.json', result)\n      generateTemplate(moduleDirectory, 'LICENSE')\n      generateTemplate(moduleDirectory, 'webpack.js')\n      generateTemplate(moduleDirectory, '_._gitignore')\n      generateTemplate(moduleDirectory, '_._npmignore')\n\n      fs.mkdirSync(moduleDirectory + '/src')\n      generateTemplate(moduleDirectory, 'src/index.js')\n\n      fs.mkdirSync(moduleDirectory + '/src/views')\n      generateTemplate(moduleDirectory, 'src/views/index.jsx')\n      generateTemplate(moduleDirectory, 'src/views/style.scss')\n\n      util.print('Installing dependencies, please wait...')\n\n      const install = spawn(util.npmCmd, ['install'])\n\n      install.stdout.on('data', (data) => {\n        process.stdout.write(data.toString())\n      })\n\n      install.stderr.on('data', (data) => {\n        process.stdout.write(data.toString())\n      })\n\n      install.on('close', (code) => {\n        if (code > 0) {\n          util.print('error', 'An error occurred during the dependencies installation of your module')\n        } else {\n          util.print('success', 'Module dependencies installed')\n          util.print(doneText)\n          util.print(documentation)\n        }\n      })\n    }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/create.js","import util from '../util'\n\nimport createModules from '../modules'\n\nimport stats from '../stats'\n\nconst waitingText = 'please wait, we are trying to install your new modules...'\n\nmodule.exports = function(module, modules) {\n  stats({}).track('cli', 'modules', 'install')\n  util.print('info', waitingText)\n  let modulesManager = createModules(null, './', null)\n  modulesManager.install(module, ...modules)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/install.js","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 43\n// module chunks = 0","import _ from 'lodash'\nimport fs from 'fs'\nimport path from 'path'\nimport yaml from 'js-yaml'\nimport Promise from 'bluebird'\n\nconst validations = {\n  'any': (value, validation) => validation(value),\n  'string': (value, validation) => typeof(value) === 'string' && validation(value),\n  'choice': (value, validation) => _.includes(validation, value),\n  'bool': (value, validation) => (value === true || value === false) && validation(value)\n}\n\nconst defaultValues = {\n  'any': null,\n  'string': '',\n  'bool': false\n}\n\nconst amendOption = (option, name) => {\n\n  const validTypes = _.keys(validations)\n  if (!option.type || !_.includes(validTypes, option.type)) {\n    throw new Error(`Invalid type (${option.type || ''}) for config key (${name})`)\n  }\n\n  const validation = option.validation || (() => true)\n\n  if (typeof(option.default) !== 'undefined' && !validations[option.type](option.default, validation)) {\n    throw new Error(`Invalid default value (${option.default}) for (${name})`)\n  }\n\n  if (!option.default && !_.includes(_.keys(defaultValues), option.type)) {\n    throw new Error(`Default value is mandatory for type ${option.type} (${name})`)\n  }\n\n  return {\n    type: option.type,\n    required: option.required || false,\n    env: option.env || null,\n    default: option.default || defaultValues[option.type],\n    validation: validation\n  }\n}\n\nconst amendOptions = options => {\n  return _.mapValues(options, amendOption)\n}\n\nconst validateSet = (options, name, value) => {\n\n  // if name is not in options, throw\n  if (!_.includes(_.keys(options), name)) {\n    throw new Error(`Unrecognized configuration key: ${name}`)\n  }\n\n  if (!validations[options[name].type](value, options[name].validation)) {\n    throw new Error(`Invalid value for key: ${name}`)\n  }\n}\n\nconst validateSave = (options, object) => {\n  const objKeys = _.keys(object)\n  const requiredKeys = _.filter(_.keys(options), key => options[key].required)\n\n  _.each(requiredKeys, required => {\n    if (!_.includes(objKeys, required)) {\n      throw new Error(`Missing required configuration: '${required}'`)\n    }\n  })\n\n  _.each(objKeys, name => {\n    validateSet(options, name, object[name])\n  })\n}\n\nconst validateName = name => {\n  if (!name || !/^[A-Z0-9._-]+$/i.test(name)) {\n    throw new Error(`Invalid configuration name: ${name}. The name must only contain letters, _ and -`)\n  }\n}\n\nconst overwriteFromDefaultValues = (options, object) => {\n  _.each(_.keys(options), name => {\n    if (typeof object[name] === 'undefined') {\n      object[name] = options[name].default\n    }\n  })\n\n  return object\n}\n\nconst overwriteFromEnvValues = (options, object) => {\n  return _.mapValues(object, (_v, name) => {\n    if (options[name] && options[name].env && process.env[options[name].env]) {\n      return process.env[options[name].env]\n    }\n\n    return _v\n  })\n}\n\nconst overwriteFromBotfileValues = (config_name, options, botfile, object) => {\n  return _.mapValues(object, (_v, name) => {\n    if (botfile \n      && botfile.config \n      && botfile.config[config_name] \n      && typeof botfile.config[config_name][name] !== 'undefined') {\n      return botfile.config[config_name][name]\n    }\n\n    return _v\n  })\n}\n\nconst overwriteFromConfigFileValues = async (config_name, options, projectLocation, object) => {\n  if (!projectLocation) {\n    return object\n  }\n\n  const configFilePath = path.resolve(projectLocation, `${config_name}.config.yml`)\n\n  if (!fs.existsSync(configFilePath)) {\n    return object\n  }\n\n  const configFromFile = await Promise.fromCallback(callback => {\n    yaml.safeLoadAll(fs.readFileSync(configFilePath), value => callback(null, value))\n  })\n\n  return _.mapValues(object, (_v, name) => {\n    if (typeof configFromFile[name] !== 'undefined') {\n      return configFromFile[name]\n    }\n    return _v\n  })\n}\n\nconst removeUnusedKeys = (options, object) => {\n  const final = {}\n\n  _.each(_.keys(options), name => {\n    if (typeof object[name] !== 'undefined') {\n      final[name] = object[name]\n    }\n  })\n\n  return final\n}\n\nconst createConfig = ({ kvs, name, botfile = {}, options = {}, projectLocation = null }) => {\n\n  if (!kvs || !kvs.get || !kvs.set) {\n    throw new Error('A valid \\'kvs\\' is mandatory to createConfig')\n  }\n\n  validateName(name)\n  options = amendOptions(options)\n\n  const saveAll = obj => {\n    validateSave(options, obj)\n    return kvs.set('__config', obj, name)\n  }\n\n  const loadAll = () => {\n    return kvs.get('__config', name)\n      .then(all => overwriteFromDefaultValues(options, all || {}))\n      .then(all => overwriteFromBotfileValues(name, options, botfile, all))\n      .then(all => overwriteFromConfigFileValues(name, options, projectLocation, all))\n      .then(all => overwriteFromEnvValues(options, all))\n      .then(all => removeUnusedKeys(options, all))\n  }\n\n  const get = name => {\n    return kvs.get('__config', name + '.' + name)\n      .then(value => overwriteFromDefaultValues(options, { [name]: value }))\n      .then(all => overwriteFromBotfileValues(name, options, botfile, all))\n      .then(all => overwriteFromConfigFileValues(name, options, projectLocation, all))\n      .then(all => overwriteFromEnvValues(options, all))\n      .then(obj => obj[name])\n  }\n\n  const set = (name, value) => {\n    validateSet(options, name, value)\n    return kvs.set('__config', value, name + '.' + name)\n  }\n  \n  return { saveAll, loadAll, get, set, options }\n}\n\nmodule.exports = { createConfig }\n\n\n\n// WEBPACK FOOTER //\n// ./src/configurator.js","import util from '../util'\n\nimport createModules from '../modules'\n\nimport stats from '../stats'\n\nconst waitingText = 'please wait, we are trying to uninstall the modules...'\n\nmodule.exports = function(module, modules) {\n  stats({}).track('cli', 'modules', 'install')\n  util.print('info', waitingText)\n  let modulesManager = createModules(null, './', null)\n  modulesManager.uninstall(module, ...modules)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/uninstall.js","import util from '../util'\nimport stats from '../stats'\nimport fs from 'fs'\nimport path from 'path'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nmodule.exports = function(fromVersion) {\n  stats({}).track('cli', 'migration', fromVersion)\n\n  if (!fs.existsSync('./botfile.js')) {\n    throw new Error('You must be inside a bot directory to run a migration')\n  }\n\n  let files = _.sortBy(require.context('./migrations/').keys(), x => x)\n\n  const toApply = _.filter(files, f => {\n    if (!/.js$/i.test(f)) {\n      return false\n    }\n\n    return parseFloat(fromVersion) < parseFloat(f.replace(/\\.js/i, ''))\n  })\n\n  return Promise.mapSeries(toApply, file => {\n    const migration = require('./migrations/' + file)\n    return migration(path.resolve('.'))\n      .then(() => {\n        util.print('success', `Migration ${file.replace('.js', '')} applied successfully`)\n      })\n  })\n    .finally(() => {\n      util.print('success', 'Migration completed.')\n      process.exit(0)\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/migrate.js","import { print } from '../util'\n\nimport createModules from '../modules'\n\nmodule.exports = function() {\n  let modulesManager = createModules(null, './', null)\n  let modules = modulesManager.listInstalled()\n\n  if (!modules || modules.length === 0) {\n    print('info', \"There are no module installed.\")\n    print('------------------')\n    print('info', \"To install modules, use `botpress install <module-name>`\")\n    print('info', \"You can discover modules in the Modules section of your bot UI\" +\n      \". You can also search npm with the botpress keyword.\")\n  } else {\n    print('info', \"There are \" + modules.length + \" modules installed:\")\n    modules.forEach(mod => print('>> ' + mod))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cli/list.js","import 'source-map-support/register'\n\nimport chalk from 'chalk'\nimport path from 'path'\nimport fs from 'fs'\nimport _ from 'lodash'\nimport cluster from 'cluster'\nimport dotenv from 'dotenv'\n\nimport ServiceLocator from '+/ServiceLocator'\nimport EventBus from './bus'\n\nimport createMiddlewares from './middlewares'\nimport createLogger from './logger'\nimport createSecurity from './security'\nimport createNotifications from './notifications'\nimport createHearMiddleware from './hear'\nimport createFallbackMiddleware from './fallback'\nimport createDatabase from './database'\nimport createLicensing from './licensing'\nimport createAbout from './about'\nimport createModules from './modules'\nimport createUMM from './umm'\nimport createUsers from './users'\nimport createContentManager from './content/service'\nimport createConversations from './conversations'\nimport stats from './stats'\nimport packageJson from '../package.json'\nimport createEmails from '+/emails'\nimport createMediator from '+/mediator'\n\nimport createServer from './server'\n\nimport { getDataLocation, getBotpressVersion } from './util'\n\nimport { isDeveloping, print } from './util'\n\nconst RESTART_EXIT_CODE = 107\n\nconst mkdirIfNeeded = (path, logger) => {\n  if (!fs.existsSync(path)) {\n    logger.info(`Creating data directory: ${path}`)\n\n    try {\n      fs.mkdirSync(path)\n    } catch (err) {\n      logger.error(`[FATAL] Error creating directory: ${err.message}`)\n      process.exit(1)\n    }\n  }\n}\n\n/**\n * Global context botpress\n*/\nclass botpress {\n  /**\n   * Create botpress\n   *\n   * @param {string} obj.botfile - the config path\n   */\n  constructor({ botfile }) {\n    this.version = getBotpressVersion()\n    /**\n     * The project location, which is the folder where botfile.js located\n     */\n    this.projectLocation = path.dirname(botfile)\n\n    /**\n     * Setup env with dotenv *before* requiring the botfile config\n     */\n    this._setupEnv()\n\n    /**\n     * The botfile config object\n     */\n    // eslint-disable-next-line no-eval\n    this.botfile = eval('require')(botfile)\n\n    this.stats = stats(this.botfile)\n\n    this.interval = null\n  }\n\n  /**\n   * Start the bot instance\n   *\n   * It will do the following initiation steps:\n   *\n   * 1. setup logger\n   * 2. resolve paths (dataLocation)\n   * 3. inject security functions\n   * 4. load modules\n   */\n  async _start() {\n    this.stats.track('bot', 'started')\n\n    if (!this.interval) {\n      this.interval = setInterval(() => {\n        this.stats.track('bot', 'running')\n      }, 30 * 1000)\n    }\n\n    // change the current working directory to botpress's installation path\n    // the bot's location is kept in this.projectLocation\n    process.chdir(path.join(__dirname, '../'))\n\n    const { projectLocation, botfile } = this\n\n    const isFirstRun = fs.existsSync(path.join(projectLocation, '.welcome'))\n    const dataLocation = getDataLocation(botfile.dataDir, projectLocation)\n    const modulesConfigDir = getDataLocation(botfile.modulesConfigDir, projectLocation)\n    const dbLocation = path.join(dataLocation, 'db.sqlite')\n    const version = packageJson.version\n\n    const logger = createLogger(dataLocation, botfile.log)\n    mkdirIfNeeded(dataLocation, logger)\n    mkdirIfNeeded(modulesConfigDir, logger)\n\n    logger.info(`Starting botpress version ${version}`)\n\n    const db = createDatabase({\n      sqlite: { location: dbLocation },\n      postgres: botfile.postgres\n    })\n\n    const security = createSecurity({\n      dataLocation,\n      securityConfig: botfile.login,\n      db\n    })\n\n    const modules = createModules(logger, projectLocation, dataLocation, db.kvs)\n\n    const moduleDefinitions = modules._scan()\n\n    const events = new EventBus()\n\n    const notifications = createNotifications({ knex: await db.get(), modules: moduleDefinitions, logger, events })\n    const about = createAbout(projectLocation)\n    const licensing = createLicensing({ logger, projectLocation, version, db, botfile })\n    const middlewares = createMiddlewares(this, dataLocation, projectLocation, logger)\n    const { hear, middleware: hearMiddleware } = createHearMiddleware()\n    const { middleware: fallbackMiddleware } = createFallbackMiddleware(this)\n    const emails = createEmails({ emailConfig: botfile.emails })\n    const mediator = createMediator(this)\n    const convo = createConversations({ logger, middleware: middlewares })\n    const users = createUsers({ db })\n    const contentManager = createContentManager({ db, logger, projectLocation, botfile })\n    const umm = createUMM({ logger, middlewares, projectLocation, botfile, db, contentManager })\n\n    middlewares.register(umm.incomingMiddleware)\n    middlewares.register(hearMiddleware)\n    middlewares.register(fallbackMiddleware)\n\n    _.assign(this, {\n      dataLocation,\n      isFirstRun,\n      version,\n      logger,\n      security, // login, authenticate, getSecret\n      events,\n      notifications, // load, save, send\n      about,\n      middlewares,\n      hear,\n      licensing,\n      modules,\n      db,\n      emails,\n      mediator,\n      convo,\n      umm,\n      users,\n      contentManager\n    })\n\n    ServiceLocator.init({ bp: this })\n\n    const loadedModules = modules._load(moduleDefinitions, this)\n\n    this.stats.track('bot', 'modules', 'loaded', loadedModules.length)\n\n    _.assign(this, {\n      _loadedModules: loadedModules\n    })\n\n    contentManager.scanAndRegisterCategories()\n\n    mediator.install()\n    notifications._bindEvents()\n\n    const server = createServer(this)\n    server.start().then(() => {\n      events.emit('ready')\n      for (let mod of _.values(loadedModules)) {\n        mod.handlers.ready && mod.handlers.ready(this, mod.configuration)\n      }\n\n      const { port } = botfile\n      logger.info(chalk.green.bold('Bot launched. Visit: http://localhost:' + port))\n    })\n\n    const middlewareAutoLoading = _.get(botfile, 'middleware.autoLoading')\n    if (!_.isNil(middlewareAutoLoading) && middlewareAutoLoading === false) {\n      logger.debug('Middleware Auto Loading was disabled. Call bp.middlewares.load() manually.')\n    } else {\n      middlewares.load()\n    }\n\n    // eslint-disable-next-line no-eval\n    const projectEntry = eval('require')(projectLocation)\n    if (typeof projectEntry === 'function') {\n      projectEntry.call(projectEntry, this)\n    } else {\n      logger.error('[FATAL] The bot entry point must be a function that takes an instance of bp')\n      process.exit(1)\n    }\n\n    process.on('uncaughtException', err => {\n      logger.error('[FATAL] An unhandled exception occurred in your bot', err)\n      if (isDeveloping) {\n        logger.error(err.stack)\n      }\n\n      this.stats.trackException(err.message)\n      process.exit(1)\n    })\n\n    process.on('unhandledRejection', (reason, p) => {\n      logger.error('Unhandled Rejection in Promise: ', p, 'Reason:', reason)\n\n      this.stats.trackException(reason)\n      if (isDeveloping && reason && reason.stack) {\n        logger.error(reason.stack)\n      }\n    })\n  }\n\n  start() {\n    if (cluster.isMaster) {\n\n      let firstWorkerHasStartedAlready = false\n      const receiveMessageFromWorker = message => {\n        if (message && message.workerStatus === 'starting') {\n          if (!firstWorkerHasStartedAlready) {\n            firstWorkerHasStartedAlready = true\n          } else {\n            print('info', '*** restarted worker process ***')\n            this.stats.track('bot', 'restarted')\n          }\n        }\n      }\n\n      cluster.on('exit', (worker, code /* , signal */) => {\n        if (code === RESTART_EXIT_CODE) {\n          cluster.fork().on('message', receiveMessageFromWorker)\n        } else {\n          process.exit(code)\n        }\n      })\n\n      cluster.fork().on('message', receiveMessageFromWorker)\n    }\n\n    if (cluster.isWorker) {\n      process.send({ workerStatus: 'starting' })\n      this._start()\n    }\n  }\n\n  restart(interval = 0) {\n    setTimeout(() => {\n      process.exit(RESTART_EXIT_CODE)\n    }, interval)\n  }\n\n  _setupEnv() {\n    const envPath = path.resolve(this.projectLocation, '.env')\n    if (fs.existsSync(envPath)) {\n      const envConfig = dotenv.parse(fs.readFileSync(envPath))\n      for (var k in envConfig) {\n        if (_.isNil(process.env[k]) || process.env.ENV_OVERLOAD) {\n          process.env[k] = envConfig[k]\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = botpress\n\n\n\n// WEBPACK FOOTER //\n// ./src/botpress.js","module.exports = require(\"source-map-support/register\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"source-map-support/register\"\n// module id = 49\n// module chunks = 0","module.exports = require(\"cluster\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cluster\"\n// module id = 50\n// module chunks = 0","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 51\n// module chunks = 0","module.exports = async ({ bp }) => {}\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/services.js","import EventEmitter2 from 'eventemitter2'\n\nclass EventBus extends EventEmitter2 {\n  constructor() {\n    super({\n      wildcard: true,\n      maxListeners: 100\n    })\n  }\n}\n\nmodule.exports = EventBus\n\n\n\n// WEBPACK FOOTER //\n// ./src/bus.js","import _ from 'lodash'\nimport mware from 'mware'\nimport path from 'path'\nimport fs from 'fs'\nimport Promise from 'bluebird'\n\nimport licensing from './licensing'\n\nconst createMiddleware = function(bp, middlewareName) {\n  const _use = mware()\n  const _error = mware()\n\n  const use = function(middleware) {\n    if (typeof(middleware) !== 'function') {\n      throw new TypeError('Expected all middleware arguments to be functions')\n    }\n\n    if (middleware.length === 2) {\n      _use(middleware)\n    } else if (middleware.length === 3) {\n      _error(middleware)\n    }\n  }\n\n  const dispatch = function(event) {\n    if (!_.isPlainObject(event)) {\n      throw new TypeError('Expected all dispatch arguments to be plain event objects')\n    }\n\n    const conformity = {\n      type: function(value) { return typeof(value) === 'string' },\n      platform: function(value) { return typeof(value) === 'string' },\n      text: function(value) { return typeof(value) === 'string' },\n      raw: function() { return true }\n    }\n\n    if (!_.conformsTo(event, conformity)) {\n      throw new TypeError('Expected event to contain (type: string), ' +\n        '(platform: string), (text: string), (raw: any)')\n    }\n\n    // Provide botpress to the event handlers\n    event.bp = bp\n\n    _use.run(event, function(err) {\n      if (err) {\n        _error.run(err, event, () => {\n          bp.logger.error(`[BOTPRESS] Unhandled error in middleware (${middlewareName}). Error: ${err.message}`)\n        })\n      }\n    })\n\n    return event._promise || Promise.resolve()\n  }\n\n  return { use, dispatch }\n}\n\nmodule.exports = function(bp, dataLocation, projectLocation, logger) {\n  const middlewaresFilePath = path.join(dataLocation, 'middlewares.json')\n  let incoming, outgoing, middlewares, customizations\n\n  const noopChain = function() {\n    let message = 'Middleware called before middlewares have been loaded. This is a no-op.'\n     + ' Have you forgotten to call `bp.loadMiddlewares()` in your bot?'\n\n    if (arguments && typeof(arguments[0]) === 'object') {\n      message += '\\nCalled with: ' + JSON.stringify(arguments[0], null, 2)\n    }\n\n    logger.warn(message)\n  }\n\n  const readCustomizations = () => {\n    if (!fs.existsSync(middlewaresFilePath)) {\n      fs.writeFileSync(middlewaresFilePath, '{}')\n    }\n    return JSON.parse(fs.readFileSync(middlewaresFilePath))\n  }\n\n  const writeCustomizations = () => {\n    fs.writeFileSync(middlewaresFilePath, JSON.stringify(customizations))\n  }\n\n  const setCustomizations = middlewares => {\n    _.each(middlewares, (middleware => {\n      const { name, order, enabled } = middleware\n      customizations[name] = { order, enabled }\n    }))\n    writeCustomizations()\n  }\n\n  const resetCustomizations = () => {\n    customizations = {}\n    writeCustomizations()\n  }\n\n  const register = (middleware) => {\n    if (!middleware || !middleware.name) {\n      logger.error('A unique middleware name is mandatory')\n      return false\n    }\n\n    if (!middleware.handler) {\n      logger.error('A middleware handler is mandatory')\n      return false\n    }\n\n    if (!middleware.type || (middleware.type !== 'incoming' && middleware.type !== 'outgoing')) {\n      logger.error('A middleware type (incoming or outgoing) is required')\n      return false\n    }\n\n    middleware.order = middleware.order || 0\n    middleware.enabled = typeof middleware.enabled === 'undefined' ? true: !!middleware.enabled\n\n    if (_.some(middlewares, m => m.name === middleware.name)) {\n      logger.error('Another middleware with the same name has already been registered')\n      return false\n    }\n\n    middlewares.push(middleware)\n  }\n\n  const list = () => {\n    return _.orderBy(middlewares.map(middleware => {\n      const customization = customizations[middleware.name]\n      if (customization) {\n        return Object.assign({}, middleware, customization)\n      }\n      return middleware\n    }), 'order')\n  }\n\n  const load = () => {\n    incoming = createMiddleware(bp, 'incoming')\n    outgoing = createMiddleware(bp, 'outgoing')\n\n    const { middleware: licenseMiddleware } = bp.licensing\n    incoming.use(licenseMiddleware)\n\n    _.each(list(), (m => {\n      if (!m.enabled) {\n        return logger.debug('SKIPPING middleware:', m.name, ' [Reason=disabled]')\n      }\n\n      logger.debug('Loading middleware:', m.name)\n\n      if (m.type === 'incoming') {\n        incoming.use(m.handler)\n      } else {\n        outgoing.use(m.handler)\n      }\n    }))\n  }\n\n  const sendToMiddleware = type => event => {\n    let mw = type === 'incoming' ? incoming : outgoing\n    return mw.dispatch ? mw.dispatch(event) : mw(event)\n  }\n\n  const sendIncoming = sendToMiddleware('incoming')\n  const sendOutgoing = sendToMiddleware('outgoing')\n\n  incoming = outgoing = noopChain\n  middlewares = []\n  customizations = readCustomizations()\n\n  return {\n    load,\n    list,\n    register,\n    sendIncoming,\n    sendOutgoing,\n    getCustomizations: () => customizations,\n    setCustomizations,\n    resetCustomizations\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/middlewares.js","module.exports = (logger, db, botfile) => ({\n  // There is no License Guard in the Open-Source / Free version\n  start: () => {},\n  getStatus: async () => {\n    return {\n      licensed: true,\n      name: 'Botpress Community',\n      text: null,\n      status: 'Active'\n    }\n  },\n  getFeatures: () => ({})\n})\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/license/index.js","import winston from 'winston'\nimport path from 'path'\nimport Promise from 'bluebird'\nimport moment from 'moment'\n\nimport { isDeveloping } from './util'\n\nmodule.exports = (dataLocation, logConfig) => {\n  const logger = new winston.Logger({\n    level: isDeveloping ? 'debug' : 'info',\n    transports: [\n      new (winston.transports.Console)({\n        prettyPrint: true,\n        colorize: true,\n        timestamp: () => moment().format('HH:mm:ss')\n      })\n    ]\n  })\n\n  logger.enableFileTransport = () => {\n    const logFile = path.join(dataLocation, logConfig.file)\n    logger.add(winston.transports.File, {\n      filename: logFile,\n      maxsize: logConfig.maxSize\n    })\n  }\n\n  logger.archiveToFile = () => {\n    const logFile = path.join(dataLocation, logConfig.file)\n\n    return Promise.resolve(logFile)\n  }\n\n  if (!logConfig.disableFileLogs) {\n    logger.enableFileTransport()\n  }\n\n  return logger\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logger.js","module.exports = require(\"winston\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston\"\n// module id = 57\n// module chunks = 0","import jwt from 'jsonwebtoken'\nimport _ from 'lodash'\n\nimport Authentication from '+/authentication'\n\n/**\n * Security helper for botpress\n *\n * Constructor of following functions\n *\n *   - login(user, password, ip)\n *   - authenticate(token)\n *   - getSecret()\n *\n * It will find or create a secret.key in `dataLocation`, then setup the adminPassword for user login.\n *\n */\n\nmodule.exports = ({ dataLocation, securityConfig, db }) => {\n\n  const authentication = Authentication({ dataLocation, securityConfig, db })\n  const { tokenExpiry } = securityConfig\n\n  // login function that returns a {success, reason, token} object\n  // accounts for number of bad attempts\n  const login = async function(user, password, ip = 'all') {\n    const canAttempt = await authentication.attempt(ip)\n    if (!canAttempt) {\n      return { success: false, reason: 'Too many login attempts. Try again later.' }\n    }\n\n    const loginUser = await authentication.authenticate(user, password, ip)\n\n    if (loginUser) {\n      const secret = await authentication.getSecret()\n\n      return {\n        success: true,\n        token: jwt.sign({ user: loginUser }, secret, { expiresIn: tokenExpiry })\n      }\n    } else {\n      return {\n        success: false,\n        reason: 'Bad username / password'\n      }\n    }\n  }\n\n  /**\n   * @param {string} token\n   * @return {boolean} whether the token is valid\n   */\n  const authenticate = async function(token) {\n    try {\n      const secret = await authentication.getSecret()\n      const decoded = jwt.verify(token, secret)\n      const verified = authentication.verifyUser\n        ? await authentication.verifyUser(decoded)\n        : true\n      return verified && decoded.user\n    } catch (err) {\n      return false\n    }\n  }\n\n  return {\n    login,\n    authenticate,\n    getSecret: authentication.getSecret,\n    _authentication: authentication\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/security/index.js","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 59\n// module chunks = 0","import fs from 'fs'\nimport path from 'path'\nimport crypto from 'crypto'\nimport Promise from 'bluebird'\n\nmodule.exports = ({ dataLocation, securityConfig }) => {\n\n  // reading secret from data or creating new secret\n  let secret = ''\n  const secretPath = path.join(dataLocation, 'secret.key')\n\n  const createNewSecret = () => {\n    secret = crypto.randomBytes(256).toString()\n    fs.writeFileSync(secretPath, secret)\n    return secret\n  }\n\n  if (fs.existsSync(secretPath)) {\n    secret = fs.readFileSync(secretPath)\n  }\n\n  if (!secret || secret.length < 15) {\n    secret = createNewSecret()\n  }\n\n  const adminPassword = process.env.BOTPRESS_ADMIN_PASSWORD || securityConfig.password\n\n  // a per-ip cache that logs login attempts\n  let attempts = {}\n  let lastCleanTimestamp = new Date()\n  const { maxAttempts, resetAfter } = securityConfig\n\n  function attempt(ip) {\n    // reset the cache if time elapsed\n    if (new Date() - lastCleanTimestamp >= resetAfter) {\n      attempts = {}\n      lastCleanTimestamp = new Date()\n    }\n\n    return (attempts[ip] || 0) < maxAttempts\n  }\n\n  function authenticate(user, password, ip) {\n    if (typeof(user) === 'string' && user.toLowerCase() === 'admin' &&\n      typeof(password) === 'string' && password === adminPassword) {\n      attempts[ip] = 0\n      return {\n        id: 0,\n        email: 'admin@botpress.io',\n        first_name: 'Admin',\n        last_name: 'Admin',\n        avatar_url: null,\n        roles: ['admin']\n      }\n    } else {\n      attempts[ip] = (attempts[ip] || 0) + 1\n      return null\n    }\n  }\n\n  function getSecret() {\n    return secret\n  }\n\n  function resetSecret() {\n    return createNewSecret()\n  }\n\n  // Public API\n  return {\n    attempt: Promise.method(attempt),\n    authenticate: Promise.method(authenticate),\n    getSecret: Promise.method(getSecret),\n    resetSecret: Promise.method(resetSecret)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/authentication/index.js","import _ from 'lodash'\nimport uuid from 'uuid'\n\nimport helpers from './database/helpers'\n\nimport { resolveModuleRootPath } from './util'\n\nconst notifications = ({ knex, modules, logger, events }) => {\n  // Internal use only\n  // Binds events to actions\n  function _bindEvents() {\n    events.on('notifications.getAll', async () => {\n      events.emit('notifications.all', await getInbox())\n    })\n\n    events.on('notifications.read', async id => {\n      await markAsRead(id)\n      events.emit('notifications.all', await getInbox())\n    })\n\n    events.on('notifications.allRead', async () => {\n      await markAllAsRead()\n      events.emit('notifications.all', await getInbox())\n    })\n\n    events.on('notifications.trashAll', async () => {\n      await archiveAll()\n      events.emit('notifications.all', await getInbox())\n    })\n  }\n\n  /**\n   * Create and append a new Notification in the Hub. Emits a `notifications.new` event.\n   * @param  {string} options.message     (required) The body message of the notification\n   * @param  {string} options.redirectUrl (optional) The URL the users will be redirected to \n   *                                      when clicking on the notification\n   * @param  {string} options.level       (optional) The level (info, success, error, warning). Defaults to `info`.\n   * @param  {bool} options.enableSound (optional) Whether the notification will trigger a buzzing sound \n   *                                    if a user is currently logged on the dashboard. (defaults to `false`)\n   * @return {Promise}\n   */\n  async function create({ message, redirectUrl, level, enableSound }) {\n    if (!message || typeof message !== 'string') {\n      throw new Error(\"'message' is mandatory and should be a string\")\n    }\n\n    if (!level || typeof level !== 'string' || !_.includes(['info', 'error', 'success'], level.toLowerCase())) {\n      level = 'info'\n    } else {\n      level = level.toLowerCase()\n    }\n\n    const callingFile = getOriginatingModule()\n    const callingModuleRoot = callingFile && resolveModuleRootPath(callingFile)\n\n    const module = _.find(modules, mod => {\n      return mod.root === callingModuleRoot\n    })\n\n    let options = {\n      moduleId: 'botpress',\n      icon: 'view_module',\n      name: 'botpress',\n      url: _.isString(redirectUrl) ? redirectUrl : '/'\n    }\n\n    if (module) {\n      // because the bot itself can send notifications\n      options = {\n        moduleId: module.name,\n        icon: module.settings.menuIcon,\n        name: module.settings.menuText,\n        url: redirectUrl\n      }\n\n      if (!redirectUrl || typeof url !== 'string') {\n        options.url = `/modules/${module.name}`\n      }\n    }\n\n    const notification = {\n      id: uuid.v4(),\n      message: message,\n      level: level,\n      moduleId: options.moduleId,\n      icon: options.icon,\n      name: options.name,\n      url: options.url,\n      date: new Date(),\n      sound: enableSound || false,\n      read: false\n    }\n\n    await knex('notifications')\n      .insert(toDatabase(knex, notification))\n      .then()\n\n    if (logger) {\n      const logMessage = `[notification::${notification.moduleId}] ${notification.message}`\n      const loggerLevel = logger[level] || logger.info\n      loggerLevel(logMessage)\n    }\n\n    if (events) {\n      events.emit('notifications.new', notification)\n    }\n  }\n\n  /**\n   * Returns all archived notifications\n   * @return {Promise<Array<Notification>>} The list of all archived notifications\n   */\n  async function getArchived() {\n    return knex('notifications')\n      .where({ archived: helpers(knex).bool.true() })\n      .orderBy('created_on', 'DESC')\n      .limit(100)\n      .then(rows => rows.map(row => fromDatabase(knex, row)))\n  }\n\n  /**\n   * Get the top 100 (unseen) notifications\n   * @return {Promise<Array<Notification>>} The list of all unseen notifications\n   */\n  async function getInbox() {\n    return knex('notifications')\n      .where({ archived: helpers(knex).bool.false() })\n      .orderBy('created_on', 'DESC')\n      .limit(100)\n      .then(rows => rows.map(row => fromDatabase(knex, row)))\n  }\n\n  /**\n   * Archives a single notification\n   * @param  {string} notificationId The id of the notification to archive\n   * @return {Promise}\n   */\n  async function archive(notificationId) {\n    return knex('notifications')\n      .where({ id: notificationId })\n      .update({ archived: helpers(knex).bool.true() })\n      .then()\n  }\n\n  /**\n   * Archives all notifications\n   * @return {Promise}\n   */\n  async function archiveAll() {\n    return knex('notifications')\n      .update({ archived: helpers(knex).bool.true() })\n      .then()\n  }\n\n  /**\n   * Marks a single notification as read (but doesn't archive it)\n   * @param  {string} notificationId The id of the notification to mark as read\n   * @return {Promise}\n   */\n  async function markAsRead(notificationId) {\n    return knex('notifications')\n      .where({ id: notificationId })\n      .update({ read: helpers(knex).bool.true() })\n      .then()\n  }\n\n  /**\n   * Marks all notifications as read (but doesn't archive them)\n   * @return {Promise}\n   */\n  async function markAllAsRead() {\n    return knex('notifications')\n      .update({ read: helpers(knex).bool.true() })\n      .then()\n  }\n\n  return {\n    // ----> Start of legacy API (DEPRECATED as of Botpress 1.1)\n    load: getInbox,\n    send: ({ message, url, level, sound }) => {\n      return create({ message, redirectUrl: url, level, enableSound: sound })\n    },\n    // End of legacy API <---\n    markAsRead,\n    markAllAsRead,\n    archiveAll,\n    archive,\n    getInbox,\n    getArchived,\n    create,\n    // internal API\n    _bindEvents\n  }\n}\n\nmodule.exports = notifications\n\nfunction getOriginatingModule() {\n  var origPrepareStackTrace = Error.prepareStackTrace\n  Error.prepareStackTrace = function(_, stack) {\n    return stack\n  }\n  var err = new Error()\n  var stack = err.stack\n  Error.prepareStackTrace = origPrepareStackTrace\n  stack.shift()\n\n  return stack[1].getFileName()\n}\n\nfunction toDatabase(knex, notification) {\n  return {\n    id: notification.id,\n    message: notification.message,\n    level: notification.level,\n    module_id: notification.moduleId,\n    module_icon: notification.icon,\n    module_name: notification.name,\n    redirect_url: notification.url,\n    created_on: helpers(knex).date.now(),\n    read: helpers(knex).bool.false(),\n    archived: helpers(knex).bool.false()\n  }\n}\n\nfunction fromDatabase(knex, row) {\n  return {\n    id: row.id,\n    message: row.message,\n    level: row.level,\n    moduleId: row.module_id,\n    icon: row.module_icon,\n    name: row.module_name,\n    url: row.redirect_url,\n    date: new Date(row.created_on),\n    sound: false,\n    read: helpers(knex).bool.parse(row.read)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notifications.js","import mware from 'mware'\nimport listeners from './listeners'\n\nmodule.exports = () => {\n\n  const chain = mware()\n  const handler = (event, next) => {\n    chain.run(event, function() {\n      next.apply(this, arguments)\n    })\n  }\n\n  const middleware = {\n    name: 'hear',\n    type: 'incoming',\n    order: 20,\n    module: 'botpress',\n    description: 'The built-in hear convenience middleware',\n    handler: handler\n  }\n\n  const hear = (condition, callback) => {\n    chain(listeners.hear(condition, callback))\n  }\n\n  return { hear, middleware }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hear.js","import _ from 'lodash'\nimport listeners from './listeners'\n\nmodule.exports = bp => {\n\n  const middleware = {\n    name: 'fallback',\n    type: 'incoming',\n    order: 200,\n    module: 'botpress',\n    description: 'The built-in fallback handler. You may override this by implementing bp.fallbackHandler',\n    handler: (event, next) => {\n      if (_.isFunction(bp.fallbackHandler)) {\n        bp.fallbackHandler(event, next)\n      }\n    }\n  }\n\n  return { middleware }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fallback.js","import Promise from 'bluebird'\nimport moment from 'moment'\n\nimport tables from './tables'\nimport kvs from './kvs'\n\nconst initializeCoreDatabase = knex => {\n  if (!knex) {\n    throw new Error('You must initialize the database before')\n  }\n\n  return Promise.mapSeries(tables, fn => fn(knex))\n}\n\nconst createKnex = async ({ sqlite, postgres }) => {\n  let _knex = null\n\n  if (postgres.enabled) {\n\n    // If we're passing in a postgres connection string, \n    // use that instead of the other params\n    if (postgres.connection) {\n      _knex = require('knex')({\n        client: 'pg',\n        connection: postgres.connection,\n        useNullAsDefault: true\n      })\n    } else {\n      _knex = require('knex')({\n        client: 'pg',\n        connection: {\n          host: postgres.host,\n          port: postgres.port,\n          user: postgres.user,\n          password: postgres.password,\n          database: postgres.database,\n          ssl: postgres.ssl\n        },\n        useNullAsDefault: true\n      })\n    }\n    \n  } else {\n    _knex = require('knex')({\n      client: 'sqlite3',\n      connection: { filename: sqlite.location },\n      useNullAsDefault: true,\n      pool: { \n        afterCreate: (conn, cb) => {\n          conn.run('PRAGMA foreign_keys = ON', cb)\n        }\n      }\n    })\n  }\n\n  await initializeCoreDatabase(_knex)\n  return _knex\n}\n\nmodule.exports = ({ sqlite, postgres }) => {\n\n  let knex = null\n\n  const getDb = async () => {\n    if (!knex) {\n      knex = createKnex({ sqlite, postgres })\n    }\n\n    return await knex\n  }\n\n  const saveUser = ({ id, platform, gender, timezone, locale, picture_url, first_name, last_name }) => {\n    const userId = platform + ':' + id\n    const userRow = {\n      id: userId,\n      userId: id,\n      platform: platform,\n      gender: gender || 'unknown',\n      timezone: timezone || null,\n      locale: locale || null,\n      created_on: moment(new Date()).toISOString(),\n      picture_url: picture_url,\n      last_name: last_name,\n      first_name: first_name\n    }\n\n    return getDb()\n      .then(knex => {\n        var query = knex('users').insert(userRow)\n          .where(function() {\n            return this\n              .select(knex.raw(1))\n              .from('users')\n              .where('id', '=', userId)\n          })\n\n        if (postgres.enabled) {\n          query = `${query} on conflict (id) do nothing`\n        } else { // SQLite\n          query = query.toString().replace(/^insert/i, 'insert or ignore')\n        }\n\n        return knex.raw(query)\n      })\n  }\n\n  let kvs_instance = null\n\n  const createKvs = async () => {\n    const knex = await getDb()\n    let _kvs = new kvs(knex)\n    await _kvs.bootstrap()\n    return _kvs\n  }\n\n  const getKvs = async () => {\n    if (!kvs_instance) {\n      kvs_instance = createKvs()\n    }\n\n    return await kvs_instance\n  }\n\n  const kvsGet = function() {\n    const args = arguments\n    return getKvs()\n      .then(instance => instance.get.apply(null, args))\n  }\n\n  const kvsSet = function() {\n    const args = arguments\n    return getKvs()\n      .then(instance => instance.set.apply(null, args))\n  }\n\n  return {\n    get: getDb,\n    saveUser,\n    location: postgres.enabled ? 'postgres' : sqlite.location,\n    kvs: { get: kvsGet, set: kvsSet }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","import { table_factories } from '+/database'\n\nmodule.exports = [\n  require('./users.js'),\n  require('./tags.js'),\n  require('./notifications.js'),\n  require('./content.js')\n].concat(table_factories)\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/tables.js","module.exports = {\n  table_factories: []\n}\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/database/index.js","/*\n  A table storing all the interlocutors (users) and their information\n*/\n\nimport helpers from './helpers'\n\nmodule.exports = knex => {\n  return helpers(knex).createTableIfNotExists('users', function (table) {\n    table.string('id').primary()\n    table.string('userId')\n    table.string('platform')\n    table.enu('gender', ['unknown', 'male', 'female'])\n    table.integer('timezone')\n    table.string('picture_url')\n    table.string('first_name')\n    table.string('last_name')\n    table.string('locale')\n    table.timestamp('created_on')\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/users.js","/*\n  A table storing all the user tags\n*/\n\nimport helpers from './helpers'\n\nmodule.exports = knex => {\n  return helpers(knex).createTableIfNotExists('users_tags', function (table) {\n    table.string('userId')\n    table.string('tag')\n    table.string('value')\n    table.timestamp('tagged_on')\n    table.unique(['userId', 'tag'])\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/tags.js","/*\n  A table storing all notifications\n*/\n\nimport helpers from './helpers'\n\nmodule.exports = knex => {\n  return helpers(knex).createTableIfNotExists('notifications', function(table) {\n    table.string('id').unique()\n    table.string('message')\n    table.string('level')\n    table.string('module_id')\n    table.string('module_icon')\n    table.string('module_name')\n    table.string('redirect_url')\n\n    table.timestamp('created_on')\n\n    table.boolean('read')\n    table.boolean('archived')\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/notifications.js","/*\n  Table storing the created content\n*/\n\nimport helpers from './helpers'\n\nmodule.exports = knex => {\n  return helpers(knex).createTableIfNotExists('content_items', function (table) {\n    table.string('id').primary()\n    table.text('data')\n    table.text('formData')\n    table.text('metadata')\n    table.string('categoryId')\n    table.text('previewText')\n    table.string('created_by')\n    table.timestamp('created_on')\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/content.js","import fs from 'fs'\nimport { resolveProjectFile } from './util'\n\nmodule.exports = (projectLocation) => {\n\n  const getBotInformation = () => {\n    const packageJsonPath = resolveProjectFile('package.json', projectLocation, true)\n    const packageJson = JSON.parse(fs.readFileSync(packageJsonPath))\n\n    return {\n      name: packageJson.name,\n      version: packageJson.version,\n      description: packageJson.description || '<no description>',\n      author: packageJson.author || '<no author>',\n      license: packageJson.license || 'AGPL-v3.0'\n    }\n  }\n\n  return { getBotInformation }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/about.js","import path from 'path'\nimport util from 'util'\n\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport Engine from './engine'\nimport Proactive from './proactive'\n\nconst fs = Promise.promisifyAll(require('fs'))\n\nmodule.exports = ({ logger, middlewares, botfile, projectLocation, db, contentManager }) => {\n\n  const processors = {} // A map of all the platforms that can process outgoing messages\n  const templates = {} // A map of all the platforms templates\n  const storagePath = getStoragePath()\n\n  function registerConnector({ platform, processOutgoing, templates }) {\n\n    // TODO throw if templates not array\n    // TODO throw if platform not string\n    // TODO throw if processOutgoing not a function\n    // TODO throw if platform already registered\n\n    logger.verbose(`[UMM] Enabled for ${platform}`) // TODO remove that\n\n    processors[platform] = processOutgoing\n    templates[platform] = templates\n  }\n\n  function parse({ context, outputPlatform, markdown = null, incomingEvent = null }) {\n    // TODO throw if context empty\n\n    // TODO throw if markdown nil <<<==== Pick default markdown\n    // TODO throw if incomingEvents null <<<==== MOCK IT\n\n    const options = {\n      throwIfNoPlatform: true,\n      currentPlatform: outputPlatform\n    }\n\n    return Engine({ markdown, context, options, processors, incomingEvent })\n  }\n\n  function getTemplates() {\n    return _.merge({}, templates) // Return a deep copy\n  }\n\n  function getStoragePath() {\n    const resolve = file => path.resolve(projectLocation, file)\n    let ummPath = _.get(botfile, 'umm.contentPath')\n\n    if (!ummPath) {\n      const single = resolve('content.yml')\n      const folder = resolve('content')\n\n      if (fs.existsSync(single)) {\n        ummPath = single\n      } else if (fs.existsSync(folder)) {\n        ummPath = folder\n      } else {\n        throw new Error('UMM content location not found')\n      }\n    }\n\n    if (path.isAbsolute(ummPath)) {\n      return ummPath\n    } else {\n      return path.resolve(projectLocation, ummPath)\n    }\n  }\n\n  function saveDocument(content) {\n    if (_.isObject(content)) {\n      return Promise.map(Object.keys(content), fileName => {\n        const filePath = path.join(storagePath, fileName + '.yml')\n        return fs.writeFileAsync(filePath, content[fileName], 'utf8')\n      })\n    }\n\n    return fs.writeFileAsync(storagePath, content, 'utf8')\n  }\n\n  async function getDocument() {\n    const stats = await fs.statAsync(storagePath)\n\n    if (stats.isDirectory()) {\n      const files = await fs.readdirAsync(storagePath)\n      const contents = {}\n\n      files.forEach(file => {\n        if (!file.endsWith('.yml')) {\n          return\n        }\n\n        const filename = path.basename(file, path.extname(file))\n        contents[filename] = fs.readFileAsync(path.join(storagePath, file), 'utf8')\n      })\n\n      return Promise.props(contents)\n    }\n\n    return fs.readFileAsync(storagePath, 'utf8')\n  }\n\n  function doSendBloc(bloc) {\n    return Promise.mapSeries(bloc, message => {\n      if (message.__internal) {\n        if (message.type === 'wait') {\n          return Promise.delay(message.wait)\n        }\n      } else {\n        return middlewares.sendOutgoing(message)\n      }\n    })\n  }\n\n  async function sendBloc(incomingEvent, blocName, additionalData = {}) {\n    blocName = blocName[0] === '#' ? blocName.substr(1) : blocName\n\n    let initialData = {}\n\n    if (blocName.startsWith('!')) {\n      const itemName = blocName.substr(1)\n      const contentItem = await contentManager.getItem(itemName)\n\n      if (!contentItem) {\n        throw new Error(`Could not find content item with ID \"${itemName}\" in the Content Manager`)\n      }\n\n      const { categoryId: itemCategoryId } = contentItem\n\n      const itemCategory = await contentManager.getCategorySchema(itemCategoryId)\n\n      if (!itemCategory) {\n        throw new Error(`Could not find category \"${itemCategoryId}\" in the Content Manager` \n          + ` for item with ID \"${itemName}\"`)\n      }\n\n      const itemBloc = itemCategory.ummBloc\n      if (!_.isString(itemBloc) || !itemBloc.startsWith('#') || itemBloc.length <= 1) {\n        throw new Error(`Invalid UMM bloc \"${itemBloc}\" in category ${itemCategoryId} of Content Manager`)\n      }\n\n      blocName = itemBloc.substr(1)\n      initialData = Object.assign(initialData, contentItem.data)\n    }\n\n    const split = blocName.split('.')\n    let fileName = null\n\n    if (split.length === 2) {\n      fileName = split[0]\n      blocName = split[1]\n    }\n\n    let markdown = await getDocument()\n\n    // TODO Add more context\n    const fullContext = Object.assign({}, initialData, {\n      user: incomingEvent.user,\n      originalEvent: incomingEvent\n    }, additionalData)\n\n    if (_.isObject(markdown)) {\n      if (!fileName) {\n        throw new Error(`Unknown UMM bloc filename: ${blocName}`)\n      }\n\n      if (!markdown[fileName]) {\n        throw new Error(`UMM content ${fileName}.yml not found`)\n      }\n\n      markdown = markdown[fileName]\n    }\n\n    let blocs = parse({\n      context: fullContext,\n      outputPlatform: incomingEvent.platform,\n      markdown: markdown,\n      incomingEvent: incomingEvent\n    })\n\n    // TODO check if message OK and catch errors\n    // TODO throw if bloc does not exist\n\n    const bloc = blocs[blocName]\n\n    if (_.isNil(bloc)) {\n      const error = `[UMM] Bloc not defined (#${blocName})`\n      logger.error(error)\n      throw new Error(error)\n    }\n\n    return doSendBloc(bloc)\n  }\n\n  function processIncoming(event, next) {\n    event.reply = (blocName, additionalData = {}) => {\n      return sendBloc(event, blocName, additionalData)\n    }\n\n    next()\n  }\n\n  const incomingMiddleware = {\n    name: 'UMM.instrumentation',\n    type: 'incoming',\n    order: 2, // Should really be first\n    module: 'botpress',\n    description: 'Built-in Botpress middleware that adds a `.reply` to events. Works with UMM.',\n    handler: processIncoming\n  }\n\n  const proactiveMethods = Proactive({ sendBloc, db })\n\n  return { registerConnector, parse, getTemplates, incomingMiddleware, getDocument, saveDocument, ...proactiveMethods }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm/index.js","import Mustache from 'mustache'\nimport yaml from 'js-yaml'\nimport ms from 'ms'\nimport _ from 'lodash'\n\nclass ParsingError extends Error {\n  constructor(bloc, instructionIndex, error) {\n    super(`Error parsing bloc '${bloc}' at instruction ${instructionIndex + 1}: ${error}`)\n    this.bloc = bloc\n    this.instructionIndex = instructionIndex\n    this.internalMessage = error\n    Error.captureStackTrace(this, ParsingError)\n  }\n}\n\nconst mapBlocs = (rawBlocs, options, processors, incomingEvent) => {\n\n  const {\n    currentPlatform,\n    throwIfNoPlatform = false\n  } = options\n\n  if (!currentPlatform && throwIfNoPlatform) {\n    throw new Error('You need to supply `currentplatform`')\n  }\n\n  return _.mapValues(rawBlocs, mapBloc)\n\n  function premapInstruction({ instruction, index, instructions, detectedPlatforms, bloc }) {\n\n    if (typeof instruction === 'string' || _.isArray(instruction)) {\n      return [{\n        text: instruction\n      }]\n    }\n\n    // Parsing conditionals\n    const evaluate = (val, exp) => {\n\n      if (typeof exp === 'boolean') {\n        return val === exp\n      } if (_.isArrayLike(exp)) {\n        return val ? !_.isEmpty(exp) : _.isEmpty(exp)\n      } else {\n        return val ? !!exp : !exp\n      }\n    }\n    \n    if (!_.isNil(instruction.if) && !_.isNil(instruction.unless)) {\n      throw new ParsingError(bloc, index, \"Message can't be both 'if' and 'else'.\")\n    }\n\n    if (!_.isNil(instruction.unless) && !evaluate(false, instruction.unless)) {\n      return []\n    }\n\n    if (!_.isNil(instruction.if) && !evaluate(true, instruction.if)) {\n      return []\n    }\n\n    // Parsing \".on\"\n    let i = Object.assign({}, instruction)\n    if (instruction.on) {\n      if (typeof instruction.on === 'string') {\n        const platforms = instruction.on.toLowerCase().split('+').map(_.trim)\n        if (!_.includes(platforms, currentPlatform.toLowerCase())) {\n          return []\n        } else {\n          i['__platformSpecific'] = true\n        }\n      } else if (_.isPlainObject(instruction.on)) {\n        const on = _.mapKeys(instruction.on, (__, key) => key.toLowerCase())\n\n        // This allows multiple platforms to be specified\n        // e.g. \"messenger+slack+web\"\n        _.keys(on).forEach(key => {\n          if (key.indexOf('+') >= 0) {\n            _.split(key, '+').forEach(alias => {\n              const trimmed = _.trim(alias)\n              on[trimmed] = _.merge({}, on[trimmed] || {}, on[key])\n            })\n          }\n        })\n\n        i = Object.assign(i, on[currentPlatform.toLowerCase()], { on: currentPlatform })\n      } else {\n        throw new ParsingError(bloc, index, '\"on\" must be a string or a plain object but was a ' \n          + typeof(instruction.on))\n      }\n    }\n\n    return [i]\n  }\n\n  function mapInstruction({ instruction, messages, bloc }) {\n    const ret = []\n\n    if (!_.isNil(instruction.wait)) {\n      ret.push({\n        __internal: true,\n        type: 'wait',\n        wait: _.isString(instruction.wait)\n          ? ms(instruction.wait || 1000 )\n          : (parseInt(instruction.wait) || 1000)\n      })\n    }\n\n    if (!_.isNil(instruction.typing)) {\n      instruction.typing = _.isString(instruction.typing)\n        ? ms(instruction.typing || 1000)\n        : (parseInt(instruction.typing) || 1000)\n    }\n\n    const raw = _.omit(instruction, ['unless', 'if', 'on', 'wait'])\n\n    if (!_.keys(raw).length) {\n      return ret\n    }\n\n    if (_.isArray(instruction.text)) {\n      instruction.text = _.sample(instruction.text)\n    }\n\n    const processor = currentPlatform && processors[currentPlatform]\n    if (processor) {\n      const msg = processor({ instruction, messages, blocName: bloc, event: incomingEvent })\n      if (msg) {\n        ret.push(msg)\n      }\n\n      return ret\n    }\n\n    throw new Error('Unsupported platform: ' + currentPlatform)\n  }\n\n  function mapBloc(bloc, name) {\n    // if the bloc isn't an array, error\n\n    const messages = []\n    const detectedPlatforms = []\n    const instructions = []\n\n    // Premapping allows for modifications, drop and addition of instructions\n    _.forEach(bloc, (instruction, index) => {\n      const add = premapInstruction({ \n        instruction, \n        index, \n        instructions: bloc, \n        detectedPlatforms, \n        bloc: name\n      })\n\n      add && _.forEach(add, i => instructions.push(i))\n    })\n\n    _.forEach(instructions, instruction => {\n      const m = mapInstruction({ instruction, messages, bloc: name })\n\n      if (!_.isNil(m)) {\n        // Messages can be null when the instruction only modified existing messages\n        m.forEach(message => messages.push(message))\n      }\n    })\n\n    return messages\n  }\n\n} // mapBlocs\n\nmodule.exports = ({ markdown, context, options, processors, incomingEvent }) => {\n  Mustache.parse(markdown)\n  const mustached = Mustache.render(markdown, context)\n\n  // The reason we support multi-doc is that people might want to separate documents\n  // Both visually and practically when the file gets large\n  const rawBlocs = {}\n  yaml.safeLoadAll(mustached, rawBloc => Object.assign(rawBlocs, rawBloc))\n\n  return mapBlocs(rawBlocs, options, processors, incomingEvent)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm/engine.js","module.exports = require(\"mustache\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mustache\"\n// module id = 74\n// module chunks = 0","import util from 'util'\n\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nmodule.exports = ({ sendBloc, db }) => {\n\n  async function getUser(id) {\n    const knex = await db.get()\n    const users = await knex('users')\n      .where(function() {\n        if (id.indexOf(':') > 0) {\n          this.where({ id: id })\n        } else {\n          this.where('userId', id)\n        }\n      })\n      .limit(1).select('*')\n\n    if (!users || users.length <= 0) {\n      throw new Error(`User \"${id}\" not found in the database`)\n    }\n\n    return users[0]\n  }\n\n  /**\n   * Sends a proactive UMM message to a user\n   * @param  {string|object} user UserId or a full user object\n   * @param  {string} bloc The bloc name to send\n   * @param  {object} data Additional data to provide to the bloc\n   * @return {Promise}      A promise that the bloc is sent\n   */\n  async function sendToUser(user, bloc, data) {\n    if (!_.isString(bloc)) {\n      throw new Error('Invalid bloc id: ' + bloc)  \n    }\n\n    if (_.isString(user)) {\n      user = await getUser(user)\n    }\n\n    if (!user || !user.id) {\n      throw new Error('Invalid user object: ' + util.inspect(user))\n    }\n\n    const text = 'This is not a real event, it has been forged by UMM.'\n    const forgedEvent = {\n      platform: user.platform,\n      user: user,\n      type: 'proactive',\n      text: text,\n      raw: { forged: true, message: text, to: user && user.id }\n    }\n\n    return sendBloc(forgedEvent, bloc, data)\n  }\n\n  return { sendToUser }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/umm/proactive.js","import _ from 'lodash'\nimport helpers from './database/helpers'\n\nmodule.exports = ({ db }) => {\n  async function tag(userId, tag, value = true) {\n    const knex = await db.get()\n\n    tag = _.toUpper(tag)\n\n    if (await hasTag(userId, tag)) {\n      await knex('users_tags')\n        .where({ userId, tag })\n        .update({\n          userId,\n          tag,\n          value,\n          tagged_on: helpers(knex).date.now()\n        })\n        .then()\n    } else {\n      await knex('users_tags')\n        .insert({\n          userId,\n          tag,\n          value,\n          tagged_on: helpers(knex).date.now()\n        })\n        .then()\n    }\n\n    return true\n  }\n\n  async function untag(userId, tag) {\n    const knex = await db.get()\n\n    return knex('users_tags')\n      .where({ userId, tag: _.toUpper(tag) })\n      .del()\n      .then()\n  }\n\n  async function hasTag(userId, tag) {\n    const knex = await db.get()\n\n    return knex('users_tags')\n      .select('userId')\n      .where({ userId, tag: _.toUpper(tag) })\n      .limit(1)\n      .then(ret => ret.length > 0)\n  }\n\n  async function getTag(userId, tag) {\n    const knex = await db.get()\n\n    return knex('users_tags')\n      .select('value')\n      .where({ userId, tag: _.toUpper(tag) })\n      .limit(1)\n      .then()\n      .get(0)\n      .then(ret => ret && ret.value)\n  }\n\n  async function getTags(userId) {\n    const knex = await db.get()\n\n    return knex('users_tags')\n      .where({ userId })\n      .select('tag', 'value')\n      .then(tags => {\n        return _.map(tags, v => {\n          return { tag: v.tag, value: v.value }\n        })\n      })\n  }\n  \n  // TODO: Fix this, list of tags is always empty\n  async function list(limit = 50, from = 0) {\n    const knex = await db.get()\n\n    const isLite = helpers(knex).isLite()\n\n    const selectTags = isLite ? 'group_concat(tag) as tags' : \"string_agg(tag, ',') as tags\"\n\n    const subQuery = knex('users_tags')\n      .select('userId', knex.raw(selectTags))\n      .groupBy('userId')\n\n    return knex('users')\n      .leftJoin(knex.raw('(' + subQuery.toString() + ') AS t2'), 'users.id', '=', 't2.userId')\n      .select(\n        'users.userId',\n        'users.platform',\n        'users.gender',\n        'users.timezone',\n        'users.locale',\n        'users.picture_url',\n        'users.first_name',\n        'users.last_name',\n        'users.created_on',\n        't2.tags'\n      )\n      .orderBy('users.created_on', 'asc')\n      .offset(from)\n      .limit(limit)\n      .then(users =>\n        users.map(x =>\n          Object.assign(x, {\n            tags: (x.tags && x.tags.split(',')) || []\n          })\n        )\n      )\n  }\n  \n  // TODO: Fix this, just doesn't work\n  async function listWithTags(tags, limit = 50, from = 0) {\n    const knex = await db.get()\n\n    tags = _.filter(tags, t => _.isString(t)).map(t => t.toUpperCase())\n    const filterByTag = tag =>\n      knex('users_tags')\n        .select('userId')\n        .where('tag', tag)\n\n    const isLite = helpers(knex).isLite()\n    const selectTags = isLite ? 'group_concat(tag) as tags' : \"string_agg(tag, ',') as tags\"\n\n    let query = knex('users')\n    let i = 0\n\n    const subQuery = knex('users_tags')\n      .select('userId', knex.raw(selectTags))\n      .groupBy('userId')\n\n    tags.forEach(tag => {\n      const name = 't' + ++i\n      query = query.join(\n        knex.raw('(' + filterByTag(tag).toString() + ') AS ' + name),\n        'users.id',\n        '=',\n        name + '.userId'\n      )\n    })\n\n    return query\n      .leftJoin(knex.raw('(' + subQuery.toString() + ') AS tt'), 'users.id', '=', 'tt.userId')\n      .select(\n        'users.userId as userId',\n        'users.platform as platform',\n        'users.gender as gender',\n        'users.timezone as timezone',\n        'users.locale as locale',\n        'users.picture_url as picture_url',\n        'users.first_name as first_name',\n        'users.last_name as last_name',\n        'users.created_on as created_on',\n        'tt.tags as tags'\n      )\n      .orderBy('users.created_on', 'asc')\n      .offset(from)\n      .limit(limit)\n      .then(users =>\n        users.map(x =>\n          Object.assign(x, {\n            tags: (x.tags && x.tags.split(',')) || []\n          })\n        )\n      )\n  }\n\n  async function count() {\n    const knex = await db.get()\n\n    return knex('users')\n      .count('* as count')\n      .then()\n      .get(0)\n      .then(ret => parseInt(ret && ret.count))\n  }\n\n  return { tag, untag, hasTag, getTag, getTags, list, count, listWithTags }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/users.js","import path from 'path'\nimport fs from 'fs'\n\nimport _ from 'lodash'\nimport Promise from 'bluebird'\nimport glob from 'glob'\nimport uuid from 'uuid'\n\nimport helpers from '../database/helpers'\n\nmodule.exports = ({ db, botfile, projectLocation, logger }) => {\n  let categories = []\n\n  async function scanAndRegisterCategories() {\n    categories = []\n\n    const formDir = path.resolve(projectLocation, botfile.formsDir || './content/forms')\n\n    if (!fs.existsSync(formDir)) {\n      return categories\n    }\n\n    const searchOptions = { cwd: formDir }\n\n    const files = await Promise.fromCallback(callback => glob('**/*.form.js', searchOptions, callback))\n\n    files.forEach(file => {\n      try {\n        const filePath = path.resolve(formDir, './' + file)\n        // eslint-disable-next-line no-eval\n        const category = eval('require')(filePath) // Dynamic loading require eval for Webpack\n        const requiredFields = ['id', 'title', 'jsonSchema']\n\n        requiredFields.forEach(field => {\n          if (_.isNil(category[field])) {\n            throw new Error(field + ' is required but missing in Content Form file: ' + file)\n          }\n        })\n\n        category.id = category.id.toLowerCase()\n\n        if (_.find(categories, { id: category.id })) {\n          throw new Error('There is already a form with id=' + category.id)\n        }\n\n        categories.push(category)\n      } catch (err) {\n        logger.warn('[Content Manager] Could not load Form: ' + file, err)\n      }\n    })\n\n    return categories\n  }\n\n  async function listAvailableCategories() {\n    const knex = await db.get()\n\n    return await Promise.map(categories, async category => {\n      const count = await knex('content_items')\n        .where({ categoryId: category.id })\n        .select(knex.raw('count(*) as count'))\n        .then()\n        .get(0)\n        .then(row => (row && row.count) || 0)\n\n      return {\n        id: category.id,\n        title: category.title,\n        description: category.description,\n        count: count\n      }\n    })\n  }\n\n  async function getCategorySchema(categoryId) {\n    const category = _.find(categories, { id: categoryId })\n    if (_.isNil(category)) {\n      return null\n    }\n\n    return {\n      json: category.jsonSchema,\n      ui: category.uiSchema,\n      title: category.title,\n      description: category.description,\n      ummBloc: category.ummBloc\n    }\n  }\n\n  async function createOrUpdateCategoryItem({ itemId, categoryId, formData }) {\n    categoryId = categoryId && categoryId.toLowerCase()\n    const category = _.find(categories, { id: categoryId })\n\n    if (_.isNil(category)) {\n      throw new Error(`Category \"${categoryId}\" is not a valid registered categoryId`)\n    }\n\n    if (_.isNil(formData) || !_.isObject(formData)) {\n      throw new Error('\"formData\" must be a valid object')\n    }\n\n    let data = (category.computeFormData && (await category.computeFormData(formData))) || formData\n    const metadata = (category.computeMetadata && (await category.computeMetadata(formData))) || []\n    const previewText = (category.computePreviewText && (await category.computePreviewText(formData))) || 'No preview'\n\n    if (!_.isArray(metadata)) {\n      throw new Error('computeMetadata must return an array of string')\n    }\n\n    if (!_.isString(previewText)) {\n      throw new Error('computePreviewText must return a string')\n    }\n\n    if (_.isNil(data) || !_.isObject(data)) {\n      throw new Error('computeFormData must return a valid object')\n    }\n\n    let prefix = category.ummBloc || categoryId\n\n    if (prefix.startsWith('#')) {\n      prefix = prefix.substr(1)\n    }\n\n    const randomId = `${prefix}-${uuid\n      .v4()\n      .split('-')\n      .join('')\n      .substr(0, 6)}`\n\n    const knex = await db.get()\n\n    const body = {\n      data: JSON.stringify(data),\n      formData: JSON.stringify(formData),\n      metadata: '|' + metadata.join('|') + '|',\n      previewText: previewText,\n      created_by: 'admin',\n      created_on: helpers(knex).date.now()\n    }\n\n    if (itemId) {\n      return await knex('content_items')\n        .update(body)\n        .where({ id: itemId })\n    }\n\n    return await knex('content_items').insert(\n      Object.assign(\n        {\n          id: randomId,\n          categoryId: categoryId\n        },\n        body\n      )\n    )\n  }\n\n  async function listCategoryItems(categoryId, from = 0, count = 50, searchTerm) {\n    const knex = await db.get()\n\n    let items = null\n    let query = knex('content_items')\n\n    if (categoryId) {\n      query = query.where({\n        categoryId: categoryId\n      })\n    }\n\n    if (searchTerm) {\n      query = query.andWhere('metadata', 'like', `%${searchTerm}%`).orWhere('formData', 'like', `%${searchTerm}%`)\n    }\n\n    items = await query\n      .orderBy('created_on')\n      .offset(from)\n      .limit(count)\n      .then()\n\n    return items.map(transformCategoryItem)\n  }\n\n  function transformCategoryItem(item) {\n    if (!item) {\n      return item\n    }\n\n    let metadata = item.metadata || ''\n    metadata = _.filter(metadata.split('|'), i => i.length > 0)\n\n    return {\n      id: item.id,\n      data: JSON.parse(item.data),\n      formData: JSON.parse(item.formData),\n      categoryId: item.categoryId,\n      previewText: item.previewText,\n      metadata: metadata,\n      createdBy: item.created_by,\n      createdOn: item.created_on\n    }\n  }\n\n  async function deleteCategoryItems(ids) {\n    if (!_.isArray(ids) || _.some(ids, id => !_.isString(id))) {\n      throw new Error('Expected an array of Ids to delete')\n    }\n\n    const knex = await db.get()\n\n    return knex('content_items')\n      .whereIn('id', ids)\n      .del()\n  }\n\n  async function getItem(itemId) {\n    const knex = await db.get()\n\n    const item = await knex('content_items')\n      .where({ id: itemId })\n      .then()\n      .get(0)\n      .then()\n\n    return transformCategoryItem(item)\n  }\n\n  async function getItemsByMetadata(metadata) {\n    const knex = await db.get()\n\n    const items = await knex('content_items')\n      .where('metadata', 'like', '%|' + metadata + '|%')\n      .then()\n\n    return transformCategoryItem(items)\n  }\n\n  async function exportContent(ids = null) {\n    const knex = await db.get()\n\n    let query = knex('content_items').select('*')\n\n    if (ids) {\n      query = query.whereIn('id', ids)\n    }\n\n    const items = query.then()\n\n    return items.map(item => transformCategoryItem(item))\n  }\n\n  async function importContent(documents) {\n    const knex = await db.get()\n\n    return Promise.mapSeries(documents, doc => {\n      if (!doc.id || !doc.formData || !doc.categoryId) {\n        throw new Error('Invalid data')\n      }\n\n      const row = {\n        data: JSON.stringify(doc.data),\n        formData: JSON.stringify(doc.formData),\n        metadata: '|' + doc.metadata.join('|') + '|',\n        previewText: doc.previewText,\n        created_by: 'admin',\n        created_on: helpers(knex).date.now(),\n        id: doc.id,\n        categoryId: doc.categoryId\n      }\n\n      return knex('content_items')\n        .insert(row)\n        .then()\n        .catch(err => {\n          return knex('content_items')\n            .where({ id: doc.id })\n            .update(row)\n            .then()\n        })\n    })\n  }\n\n  return {\n    scanAndRegisterCategories,\n    listAvailableCategories,\n    getCategorySchema,\n\n    createOrUpdateCategoryItem,\n    listCategoryItems,\n    deleteCategoryItems,\n\n    getItem,\n    getItemsByMetadata,\n\n    exportContent,\n    importContent\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content/service.js","module.exports = require(\"glob\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"glob\"\n// module id = 78\n// module chunks = 0","import EventEmmiter from 'eventemitter2'\nimport ms from 'ms'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport { matches } from './listeners'\n\nconst INTERVAL_MSGS = 5000\n\nconst formatMessage = (msg, initialEvent) => {\n  if (typeof msg === 'string') {\n    return {\n      platform: initialEvent.platform,\n      user: initialEvent.user,\n      type: 'text',\n      text: msg,\n      raw: {\n        user: initialEvent.user,\n        message: msg\n      }\n    }\n  } else if (typeof msg === 'function') {\n    // This is a 'wrapped' or 'delayed' execution message\n    // It is going to be evaluated at send time, this this has a risk of failing\n    // If the function execution fails\n    return msg\n  } else {\n    if (msg && msg.type && msg.platform && msg.text) {\n      return msg\n    } else {\n      throw new Error('Invalid message: ', msg)\n    }\n  }\n}\n\nconst formatBloc = (blocName, data = {}) => {\n  if (!_.isString(blocName)) {\n    throw new Error('Invalid bloc name, espected string')\n  }\n\n  return {\n    isBloc: true,\n    bloc: blocName,\n    data: data\n  }\n}\n\nconst isBlocCall = args => {\n  return _.isString(args[0]) && args[0].startsWith('#')\n}\n\nconst validateHandlers = handlers => {\n  if (_.isFunction(handlers)) {\n    return [{\n      default: true,\n      callback: handlers\n    }]\n  }\n\n  if (!_.isArray(handlers)) {\n    throw new Error('Invalid handler(s) for question, expected a function or an array of handlers (see doc).')\n  }\n\n  return handlers\n}\n\nclass Thread extends EventEmmiter {\n\n  constructor(name, bp, convo) {\n    super()\n    this.initialEvent = convo.initialEvent\n    this.name = name\n    this.bp = bp\n    this.convo = convo\n    this.queue = [] // Queue of messages and questions to say / ask next\n    this.archive = [] // Archive of unqueued questions. We store them so we can re-create (restart) the thread.\n    this.waiting = false // Thread is waiting when it asked for a question\n    this._last = null\n  }\n\n  enqueue(message) {\n    this.queue.push(message)\n    this.archive.push(message)\n  }\n\n  addMessage(msg) {\n    return this.add({ \n      content: arguments[0],\n      data: arguments[1],\n      handler: null,\n      condition: null\n    })\n  }\n\n  // Two signatures possible:\n  // msg, handlers\n  // bloc, data, handlers\n  addQuestion(msg) {\n    const handlers = validateHandlers(_.last(arguments))\n    const content = arguments[0]\n    const data = arguments.length >= 3 ? arguments[1] : null\n\n    return this.add({ \n      content, \n      handler: handlers, \n      condition: null, \n      data \n    })\n  }\n\n  /* { \n    content: 'string or #umm'\n    handler?: function(response) // If no handler = message + next()\n    condition?: function() // return bool|Promise<bool> to execute it or not\n    data?: object|func<object>|func<Promise<object>> to feed data to the UMM\n  } */\n  add({ content, handler, condition, data }) {\n    const handlers = handler ? validateHandlers(handler) : null\n    const type = handlers ? 'question' : 'message'\n\n    const isBloc = _.isString(content) && content.startsWith('#')\n\n    if (isBloc) {\n      return this.enqueue({\n        type: type,\n        message: formatBloc(content, data),\n        handlers: handlers,\n        condition: condition\n      })\n    }\n    \n    // Add raw message question\n    const message = formatMessage(content, this.initialEvent)\n\n    this.enqueue({\n      type: type,\n      message: message,\n      handlers: handlers,\n      condition: condition\n    })\n  }\n\n  peek() {\n    return this.queue.length > 0 ? this.queue[0] : null\n  }\n\n  async dequeue() {\n    let msg = null\n\n    while(true) {\n      msg = this.queue.shift()\n\n      if (msg && msg.condition && _.isFunction(msg.condition)) {\n        const exec = await msg.condition()\n        if (!exec) {\n          continue\n        }\n      }\n\n      break\n    }\n\n    this._last = msg\n    this.waiting = msg && msg.type === 'question'\n\n    if (!msg) {\n      this.emit('done')\n    }\n\n    return msg\n  }\n\n  process(event) {\n    const handlers = (this.waiting && this._last && this._last.handlers) || []\n\n    for (let handler of handlers) {\n      if (handler.pattern && matches(handler.pattern, event)) {\n        if (_.isRegExp(handler.pattern)) {\n          const match = handler.pattern.exec(event.text)\n          if (match) {\n            event.match = match[1]\n          }\n        }\n\n        handler.callback && handler.callback(event)\n        return // Interrupt further processing\n      }\n    }\n\n    const defaultHandler = _.find(handlers, { default: true })\n\n    defaultHandler && defaultHandler.callback && defaultHandler.callback(event)\n  }\n\n  repeat() {\n    return this._last && this._last.message\n  }\n\n  restart() {\n    this.queue = this.archive.map(i => i)\n    this._last = null\n    this.waiting = false\n  }\n}\n\nclass Conversation extends EventEmmiter {\n\n  constructor({ initialEvent, middleware, logger, messageTypes, clockSpeed = 500 }) {\n    super()\n    this.logger = logger\n    this.middleware = middleware\n    this.initialEvent = initialEvent\n    this._threads = {}\n    this.currentThread = null\n    this.defaultThread = this.createThread('default')\n    this.status = 'new'\n    this.get = this._get\n    this.set = this._set\n    this._cache = {}\n    this.intervalBetweenMessages = INTERVAL_MSGS\n    this._timeoutHandle = null\n    this._timeoutInterval = ms('5 minutes')\n    this._useTimeout = false\n    this._clock = setInterval(::this.tick, clockSpeed)\n    this._clockSpeed = clockSpeed\n    this._processing = false\n    this._sendLock = false\n    this.messageTypes = messageTypes || ['message', 'text', 'quick_reply']\n    this._outgoing = []\n    this.endWhenDone = true\n\n    this.sendNext() // Infinite loop. Must be called only once.\n  }\n\n  get threads() {\n    return Object.assign({}, this._threads)\n  }\n\n  async sendNext() {\n    if (this._sendLock) {\n      return\n    } else {\n      this._sendLock = true\n    }\n\n    try {\n      const msg = this._outgoing.shift()\n\n      if (msg) {\n\n        if (msg.isBloc === true) {\n          // Send bloc\n          if (!this.initialEvent || !this.initialEvent.reply) {\n            throw new Error(\"Convo doesn't have default event or does not support UMM\")\n          }\n\n          let data = msg.data\n\n          if (_.isFunction(data)) {\n            data = await Promise.resolve(data())\n          }\n\n          await Promise.resolve(this.initialEvent.reply(msg.bloc, data))\n        } else {\n          // Raw message\n          await Promise.resolve(this.middleware\n          && this.middleware.sendOutgoing \n          && this.middleware.sendOutgoing(msg))\n        }\n      }\n\n      await Promise.delay(this._clockSpeed)\n      \n      if (this.status === 'active' || this._outgoing.length > 0) {\n        setImmediate(::this.sendNext)\n      }\n    } finally {\n      this._sendLock = false\n    }\n  }\n\n  teardown() {\n    // Dispose of timeouts and intervals\n    clearInterval(this._clock)\n    this.clearTimeout()\n    this.status = 'destroyed'\n  }\n\n  getCurrentThread() {\n    return this._threads[this.currentThread]\n  }\n\n  tick() {\n    const thread = this.getCurrentThread()\n    if (this.status === 'active' && !thread.waiting) {\n      this.next()\n    }\n  }\n\n  clearTimeout() {\n    if (this._timeoutHandle) {\n      this.clearTimeout(this._timeoutHandle)\n    }\n  }\n\n  resetTimeout() {\n    this.clearTimeout()\n\n    this._timeoutHandle = this._useTimeout && setTimeout(() => {\n      // TODO If there's a timeout thread, switch to it\n      this.emit('timeout')\n    }, this._timeoutInterval)\n  }\n\n  createThread(name) {\n    const thread = new Thread(name, this.bp, this)\n    this._threads[name] = thread\n\n    if (!this.currentThread) {\n      this.currentThread = name\n    }\n\n    return thread\n  }\n\n  async switchTo(name, restart = true) {\n    if (this.currentThread === name) {\n      return // Don't switch if it's already the current thread\n    }\n\n    if (!this._threads[name]) {\n      throw new Error(`Thread \"${name}\" doesn't exist`)\n    }\n\n    const before = await this.emitAsync('beforeSwitch', name)\n    if (_.some(before, a => a === false)) {\n      return // Aborted thread switch\n    }\n\n    this.currentThread = name\n\n    if (restart) {\n      const thread = this.getCurrentThread()\n      thread && thread.restart()\n    }\n\n    this.emit('switched', name)\n  }\n\n  async next() {\n    const thread = this.getCurrentThread()\n\n    if (!thread.peek()) {\n      return this.endWhenDone && this.stop('done')\n    }\n\n    const msg = await thread.dequeue()\n    if (msg) {\n      let message = msg.message\n\n      if (typeof message === 'function') {\n        // Executes (unwrap) the message on the fly\n        message = msg.message()\n      }\n\n      this.say(message, this.initialEvent)\n    }\n  }\n\n  async processIncoming(event) {\n\n    if (!_.includes(this.messageTypes, event.type)) {\n      return\n    }\n\n    this._timeoutHandle && this.resetTimeout()\n    const before = await this.emitAsync('beforeProcessing', event)\n    if (_.some(before, a => a === false)) {\n      return\n    }\n\n    const thread = this.getCurrentThread()\n    thread && thread.waiting && thread.process(event)\n  }\n\n  setTimeout(timeout) {\n    this._useTimeout = true\n    this._timeoutInterval = typeof timeout === 'number' ? timeout : ms(timeout)\n    this.resetTimeout()\n  }\n\n  async say(msg) {\n    let message = null\n\n    if (msg && msg.isBloc === true) {\n      message = msg\n    } else {\n      message = isBlocCall(arguments)\n        ? formatBloc(...arguments)\n        : formatMessage(msg, this.initialEvent)\n    }\n\n    this._outgoing.push(message)\n\n    if (this.status !== 'active') {\n      this.sendNext() // restart sending process once\n    }\n  }\n\n  activate() {\n    if (this.status === 'new') {\n      this.status = 'active'\n      this.emit('activated')\n    } else {\n      throw new Error('Conversation was already activated')\n    }\n  }\n\n  getStatus() {\n    return this.status\n  }\n\n  _get(name) {\n    return this._cache[name]\n  }\n\n  _set(name, value) {\n    this._cache[name] = value\n  }\n\n  async repeat() {\n    const thread = this._threads[this.currentThread]\n    const msg = thread && thread.repeat()\n\n    if (msg) {\n      return this.say(msg)\n    }\n  }\n\n  stop(reason) {\n    this.status = reason\n    this.emit(reason)\n\n    if (reason !== 'stop') {\n      this.emit('stop', reason)\n    }\n    this.teardown()\n  }\n}\n\nmodule.exports = ({ logger, middleware, clockSpeed = 500 }) => {\n  let convos = []\n\n  const belongsToConvo = (convo, event) => {\n    const initial = convo.initialEvent\n\n    return convo.initialEvent.platform === event.platform\n      && _.get(initial, 'user.id', '') === _.get(event, 'user.id', '')\n  }\n\n  middleware.register({\n    name: 'conversations',\n    type: 'incoming',\n    order: 25,\n    module: 'botpress',\n    description: 'Built-in conversation flow manager',\n    handler: function(event, next) {\n\n      // Clean up and free from memory ended conversations\n      convos = _.filter(convos, c => {\n        return _.includes(['new', 'active'], c.status)\n      })\n\n      for (let convo of convos) {\n        if (belongsToConvo(convo, event) && convo.status === 'active') {\n          convo.processIncoming(event)\n          return // Stop the processing, only one convo per event. Swallow the event\n        }\n      }\n\n      next && next() // Don't swallow the event\n    }\n  })\n\n  const validateEvent = event => {\n    if (!event || !event.type || !event.platform) {\n      throw new Error('You need to pass an original incoming event to start a conversation')\n    }\n  }\n\n  function start(event, callback) {\n    const convo = create(event)\n    callback && callback(convo)\n\n    convo.activate()\n    return convo\n  }\n\n  function create(event) {\n    validateEvent(event)\n    const convo = new Conversation({\n      logger,\n      middleware,\n      clockSpeed,\n      initialEvent: event\n    })\n    convos.push(convo)\n    return convo\n  }\n\n  function find(event) {\n    for (let convo of convos) {\n      if (belongsToConvo(convo, event) && convo.status === 'active') {\n        return convo\n      }\n    }\n  }\n\n  function destroy() {\n    for (let convo of convos) {\n      convo.teardown()\n    }\n\n    convos = []\n  }\n\n  return { start, create, find, destroy }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/conversations.js","module.exports = {\n\t\"name\": \"botpress\",\n\t\"description\": \"The world's first CMS for bots. Easily create, manage and extend chatbots.\",\n\t\"version\": \"1.1.10\",\n\t\"author\": \"Botpress\",\n\t\"bin\": {\n\t\t\"bp\": \"./bin/botpress\",\n\t\t\"botpress\": \"./bin/botpress\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/botpress/botpress/issues\"\n\t},\n\t\"dependencies\": {\n\t\t\"axios\": \"^0.15.2\",\n\t\t\"babel-polyfill\": \"^6.23.0\",\n\t\t\"bluebird\": \"^3.4.6\",\n\t\t\"body-parser\": \"^1.15.2\",\n\t\t\"chalk\": \"^1.1.3\",\n\t\t\"commander\": \"^2.9.0\",\n\t\t\"dotenv\": \"^4.0.0\",\n\t\t\"email-templates\": \"^2.5.4\",\n\t\t\"eventemitter2\": \"^2.1.3\",\n\t\t\"express\": \"^4.14.0\",\n\t\t\"formidable\": \"^1.1.1\",\n\t\t\"glob\": \"^7.1.2\",\n\t\t\"handlebars\": \"^4.0.6\",\n\t\t\"howler\": \"^2.0.3\",\n\t\t\"js-yaml\": \"^3.8.4\",\n\t\t\"jsonwebtoken\": \"^7.1.9\",\n\t\t\"knex\": \"^0.12.6\",\n\t\t\"lodash\": \"^4.16.4\",\n\t\t\"moment\": \"^2.15.1\",\n\t\t\"monitorctrlc\": \"^2.0.1\",\n\t\t\"ms\": \"^0.7.1\",\n\t\t\"multer\": \"^1.3.0\",\n\t\t\"mustache\": \"^2.3.0\",\n\t\t\"mware\": \"0.0.3\",\n\t\t\"node-machine-id\": \"^1.1.3\",\n\t\t\"nodemailer\": \"^2.7.2\",\n\t\t\"nodemon\": \"^1.12.1\",\n\t\t\"pg\": \"^6.1.2\",\n\t\t\"prompt\": \"^1.0.0\",\n\t\t\"react-codemirror\": \"^1.0.0\",\n\t\t\"react-jsonschema-form\": \"^0.49.0\",\n\t\t\"socket.io\": \"^1.5.0\",\n\t\t\"socket.io-client\": \"^2.0.3\",\n\t\t\"socketio-jwt\": \"^4.5.0\",\n\t\t\"source-map-support\": \"^0.4.6\",\n\t\t\"sqlite3\": \"3.1.8\",\n\t\t\"universal-analytics\": \"^0.4.8\",\n\t\t\"uuid\": \"^3.0.0\",\n\t\t\"winston\": \"^2.2.0\"\n\t},\n\t\"devDependencies\": {\n\t\t\"autoprefixer\": \"^6.5.3\",\n\t\t\"babel-cli\": \"^6.16.0\",\n\t\t\"babel-core\": \"^6.18.0\",\n\t\t\"babel-loader\": \"^7.1.2\",\n\t\t\"babel-plugin-root-import\": \"^5.1.0\",\n\t\t\"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n\t\t\"babel-plugin-transform-object-rest-spread\": \"^6.16.0\",\n\t\t\"babel-preset-latest\": \"^6.16.0\",\n\t\t\"babel-preset-react\": \"^6.11.1\",\n\t\t\"babel-preset-stage-0\": \"^6.16.0\",\n\t\t\"babel-register\": \"^6.16.3\",\n\t\t\"bootstrap\": \"^3.3.7\",\n\t\t\"chai\": \"^3.5.0\",\n\t\t\"classnames\": \"^2.2.5\",\n\t\t\"copy-webpack-plugin\": \"^4.2.0\",\n\t\t\"css-loader\": \"^0.25.0\",\n\t\t\"exports-loader\": \"^0.6.3\",\n\t\t\"expose-loader\": \"^0.7.1\",\n\t\t\"extract-text-webpack-plugin\": \"^3.0.1\",\n\t\t\"file-loader\": \"^0.9.0\",\n\t\t\"hard-source-webpack-plugin\": \"^0.4.9\",\n\t\t\"history\": \"^2.1.2\",\n\t\t\"husky\": \"0.14.3\",\n\t\t\"json-loader\": \"^0.5.4\",\n\t\t\"keymirror\": \"^0.1.1\",\n\t\t\"lint-staged\": \"4.3.0\",\n\t\t\"mocha\": \"^3.1.2\",\n\t\t\"node-sass\": \"^4.5.3\",\n\t\t\"npm-watch\": \"^0.1.6\",\n\t\t\"nuclear-js\": \"^1.4.0\",\n\t\t\"nuclear-js-react-addons\": \"^0.4.1\",\n\t\t\"postcss-loader\": \"^2.0.8\",\n\t\t\"prettier\": \"1.7.4\",\n\t\t\"prop-types\": \"^15.5.8\",\n\t\t\"react\": \"^15.3.1\",\n\t\t\"react-addons-css-transition-group\": \"^15.3.1\",\n\t\t\"react-addons-update\": \"^15.4.2\",\n\t\t\"react-bootstrap\": \"^0.30.3\",\n\t\t\"react-bootstrap-button-loader\": \"^1.0.7\",\n\t\t\"react-dom\": \"^15.3.1\",\n\t\t\"react-dropzone\": \"^4.1.3\",\n\t\t\"react-emoji\": \"^0.4.4\",\n\t\t\"react-fontawesome\": \"^1.2.0\",\n\t\t\"react-ga\": \"^2.1.2\",\n\t\t\"react-markdown\": \"^2.4.5\",\n\t\t\"react-router\": \"^2.8.1\",\n\t\t\"react-sidebar\": \"^2.2.1\",\n\t\t\"react-sortable\": \"^1.2.0\",\n\t\t\"sass-loader\": \"^6.0.6\",\n\t\t\"script-loader\": \"^0.7.0\",\n\t\t\"simple-line-icons\": \"^2.4.1\",\n\t\t\"sinon\": \"^1.17.7\",\n\t\t\"style-loader\": \"^0.13.1\",\n\t\t\"tmp\": \"0.0.31\",\n\t\t\"uglifyjs-webpack-plugin\": \"^1.0.1\",\n\t\t\"webpack\": \"^3.8.1\",\n\t\t\"webpack-node-externals\": \"^1.6.0\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=4.6.0\"\n\t},\n\t\"homepage\": \"https://github.com/botpress/botpress#readme\",\n\t\"keywords\": [\n\t\t\"bots\",\n\t\t\"chatbots\",\n\t\t\"bot framework\",\n\t\t\"messenger\",\n\t\t\"facebook\",\n\t\t\"slack\",\n\t\t\"botkit\",\n\t\t\"microsoft bot framework\",\n\t\t\"bot builder\",\n\t\t\"bot\",\n\t\t\"chatbot\",\n\t\t\"api\"\n\t],\n\t\"license\": \"AGPL-3.0\",\n\t\"main\": \"lib/node.bundle.js\",\n\t\"repository\": \"git+https://github.com/botpress/botpress.git\",\n\t\"os\": [\n\t\t\"darwin\",\n\t\t\"linux\",\n\t\t\"win32\"\n\t],\n\t\"scripts\": {\n\t\t\"prepare\": \"npm run compile-prod\",\n\t\t\"compile\": \"./build.sh\",\n\t\t\"compile-prod\": \"NODE_ENV=production ./build.sh && ls -lh ./lib/web/js && echo \\\"DONE\\\"\",\n\t\t\"test\": \"BABEL_ENV=tests mocha --compilers js:babel-core/register --require tests/index.js tests/** extensions/**/tests/**\",\n\t\t\"watch\": \"npm-watch\",\n\t\t\"precommit\": \"lint-staged\"\n\t},\n\t\"watch\": {\n\t\t\"compile\": {\n\t\t\t\"patterns\": [\n\t\t\t\t\"src\",\n\t\t\t\t\"extensions\"\n\t\t\t],\n\t\t\t\"extensions\": \"js,jsx,scss,json,html\"\n\t\t}\n\t},\n\t\"lint-staged\": {\n\t\t\"*.{js,jsx,json,css}\": [\n\t\t\t\"prettier --write\",\n\t\t\t\"git add\"\n\t\t]\n\t},\n\t\"pre-commit\": {\n\t\t\"run\": \"precommit\",\n\t\t\"silent\": true\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 80\n// module chunks = 0","module.exports = () => {}\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/emails/index.js","module.exports = bp => ({\n  install: () => {},\n  uninstall: () => {}\n})\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/mediator/index.js","import express from 'express'\nimport http from 'http'\n\nimport Socket from './socket'\nimport Static from './static'\nimport Api from './api'\n\nmodule.exports = bp => {\n\n  async function serveApi(app) {\n    const api = Api(bp)\n    return api.install(app)\n  }\n\n  async function serveSocket(server) {\n    const socket = Socket(bp)\n    return socket.install(server)\n  }\n\n  async function serveStatic(app) {\n    const staticStuff = Static(bp)\n    return staticStuff.install(app)\n  }\n\n  async function start() {\n    const app = express()\n    const server = http.createServer(app)\n    const port = bp.botfile.port\n\n    await serveApi(app)\n    await serveSocket(server)\n    await serveStatic(app)\n\n    return new Promise(resolve => {\n      server.listen(port, () => resolve())\n    })\n  }\n\n  return { start }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/index.js","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 84\n// module chunks = 0","import _ from 'lodash'\nimport socketio from 'socket.io'\nimport socketioJwt from 'socketio-jwt'\n\nmodule.exports = bp => {\n\n  async function install(server) {\n    const io = socketio(server)\n\n    const admin = io.of('/admin')\n    const guest = io.of('/guest')\n\n    if (bp.botfile.login.enabled) {\n      admin.use(socketioJwt.authorize({\n        secret: await bp.security.getSecret(),\n        handshake: true\n      }))\n    }\n\n    admin.on('connection', function(socket) {\n      const visitorId = _.get(socket, 'handshake.query.visitorId')\n      bp.stats.track('socket', 'connected')\n\n      socket.on('event', function(event) {\n        bp.events.emit(event.name, event.data, 'client', {\n          visitorId: visitorId,\n          socketId: socket.id,\n          guest: false,\n          admin: true\n        })\n      })\n    })\n\n    guest.on('connection', function(socket) {\n      const visitorId = _.get(socket, 'handshake.query.visitorId')\n      bp.stats.track('socket', 'connected')\n\n      if (visitorId && visitorId.length > 0) {\n        socket.join('visitor:' + visitorId)\n      }\n\n      socket.on('event', function(event) {\n        bp.events.emit(event.name, event.data, 'client', {\n          socketId: socket.id,\n          visitorId: visitorId,\n          guest: true,\n          admin: false\n        })\n      })\n    })\n\n    bp.events.onAny(function(event, data, from) {\n      if (from === 'client') {\n        return // we sent this ourselves\n      }\n\n      let c = event.startsWith('guest.') ? guest : admin\n\n      if (data && (data.__socketId || data.__room)) {\n        // Send only to this socketId or room\n        return c.to(data.__socketId || data.__room).emit('event', {\n          name: event,\n          data: data\n        })\n      }\n\n      // broadcast event to the front-end clients\n      c.emit('event', {\n        name: event,\n        data: data\n      })\n    })\n  }\n\n  return { install }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/socket.js","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 86\n// module chunks = 0","module.exports = require(\"socketio-jwt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socketio-jwt\"\n// module id = 87\n// module chunks = 0","/* global BP_EDITION */\n\nimport Promise from 'bluebird'\nimport express from 'express'\nimport path from 'path'\nimport fs from 'fs'\nimport ms from 'ms'\nimport util from '../util'\n\nmodule.exports = bp => {\n  function serveModule(app, module) {\n    const name = module.name\n    const shortName = module.name.replace(/botpress-/i, '')\n\n    if (module.settings.menuIcon === 'custom') {\n      const iconRequestPath = `/img/modules/${name}.png`\n      const iconPath = path.join(module.root, 'icon.png')\n\n      app.get(iconRequestPath, (req, res) => {\n        try {\n          const content = fs.readFileSync(iconPath)\n          res.contentType('image/png')\n          res.send(content)\n        } catch (err) {\n          bp.logger.warn(`Could not serve module icon [${name}] at: ${iconPath}`)\n        }\n      })\n    }\n\n    const liteDir = path.join(module.root, module.settings.liteDir || 'bin/lite')\n    const liteViews = fs.existsSync(liteDir) ? fs.readdirSync(liteDir).filter(b => b.endsWith('.js')) : []\n\n    app.get(\n      [\n        `/js/modules/${shortName}`, // The full module view\n        `/js/modules/${name}.js`, // <<-- DEPRECATED: Will be removed shortly. Only use shortNames\n        `/js/modules/${shortName}/:subview` // Lite view\n      ],\n      (req, res) => {\n        const settingsKey = module.settings.webBundle\n        let bundlePath = path.join(module.root, settingsKey || 'bin/web.bundle.js')\n\n        if (req.params && req.params.subview) {\n          // Render lite view\n          bundlePath = path.join(liteDir, req.params.subview + '.bundle.js')\n        }\n\n        try {\n          const content = fs.readFileSync(bundlePath)\n          res.contentType('text/javascript')\n          res.send(content)\n        } catch (err) {\n          bp.logger.warn(`Could not serve module [${name}] at: ${bundlePath}`)\n          res.sendStatus(404)\n        }\n      }\n    )\n  }\n\n  function serveCustomTheme(app) {\n    let customTheme = ''\n\n    if (BP_EDITION !== 'lite' && bp.licensing.getFeatures().whitelabel === true) {\n      const themeLocation = path.join(bp.projectLocation, 'theme.css')\n      if (fs.existsSync(themeLocation)) {\n        customTheme = fs.readFileSync(themeLocation)\n      }\n    }\n\n    app.use('/style/custom-theme.css', (req, res) => {\n      res.contentType('text/css')\n      res.send(customTheme)\n    })\n  }\n\n  async function install(app) {\n    for (let name in bp._loadedModules) {\n      const module = bp._loadedModules[name]\n      serveModule(app, module)\n    }\n\n    app.use('/js/env.js', (req, res) => {\n      const { tokenExpiry, enabled } = bp.botfile.login\n      const optOutStats = !!bp.botfile.optOutStats\n      const appName = bp.botfile.appName || 'Botpress'\n\n      const { isFirstRun, version } = bp\n      res.contentType('text/javascript')\n      res.send(`(function(window) {\n        window.NODE_ENV = \"${process.env.NODE_ENV || 'development'}\";\n        window.DEV_MODE = ${util.isDeveloping};\n        window.AUTH_ENABLED = ${enabled};\n        window.AUTH_TOKEN_DURATION = ${ms(tokenExpiry)};\n        window.OPT_OUT_STATS = ${optOutStats};\n        window.SHOW_GUIDED_TOUR = ${isFirstRun};\n        window.BOTPRESS_VERSION = \"${version}\";\n        window.APP_NAME = \"${appName}\";\n      })(window || {})`)\n    })\n\n    serveCustomTheme(app)\n\n    app.use(express.static(path.join(bp.projectLocation, 'static')))\n\n    app.use(express.static(path.join(__dirname, '../lib/web')))\n\n    app.get('*', (req, res, next) => {\n      // If browser requests HTML and request isn't an API request\n      if (/html/i.test(req.headers.accept) && !/^\\/api\\//i.test(req.url)) {\n        if (req.url && /^\\/lite\\//i.test(req.url)) {\n          return res.sendFile(path.join(__dirname, '../lib/web/lite.html'))\n        }\n\n        return res.sendFile(path.join(__dirname, '../lib/web/index.html'))\n      }\n      next()\n    })\n\n    return Promise.resolve(true)\n  }\n\n  return { install }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/static.js","import _ from 'lodash'\nimport bodyParser from 'body-parser'\nimport express from 'express'\n\nimport ServiceLocator from '+/ServiceLocator'\nimport anonymousApis from './anonymous'\nimport securedApis from './secured'\n\nconst routersConditions = {}\nconst routers = {}\n\nmodule.exports = bp => {\n  async function _authenticationMiddleware(req, res, next) {\n    res.maybeSendRequireLogin = () => {\n      if (!bp.botfile.login.enabled) {\n        res.status(400).send({\n          message: 'Login must be turned on for this API method'\n        })\n\n        return true\n      } else {\n        return false\n      }\n    }\n\n    if (!bp.botfile.login.enabled) {\n      return next()\n    }\n\n    const user = await bp.security.authenticate(req.headers.authorization)\n    if (!!user) {\n      req.user = user\n      next()\n    } else {\n      res\n        .status(401)\n        .location('/login')\n        .end()\n    }\n  }\n\n  function installRouter(app) {\n    bp.getRouter = function(name, conditions) {\n      if (!/^botpress-/.test(name)) {\n        throw new Error(`The name of a router must start with 'botpress-'. Received: ${name}`)\n      }\n\n      if (!routers[name]) {\n        const router = express.Router()\n        routers[name] = router\n        app.use(`/api/${name}/`, router)\n      }\n\n      if (conditions) {\n        routersConditions[name] = Object.assign(routersConditions[name] || {}, conditions)\n      }\n\n      installProtector(routers[name])\n      return routers[name]\n    }\n  }\n\n  function installProtector(app) {\n    app.secure = function(operation, ressource) {\n      const wrap = method =>\n        function(name, ...handlers) {\n          const secure = async function(req, res, next) {\n            try {\n              if (!req.user) {\n                return next()\n              }\n\n              const authorizeApi = await ServiceLocator.getService('authorizeApi', false)\n\n              if (!authorizeApi) {\n                return next()\n              }\n\n              const authorized = await authorizeApi({ userId: req.user.id, operation, ressource })\n\n              if (authorized) {\n                return next()\n              }\n\n              return res.sendStatus(403) // HTTP Forbidden\n            } catch (err) {\n              return res.status(500).send({ message: err.message })\n            }\n          }\n\n          return app[method].call(app, name, secure, ...handlers)\n        }\n\n      return {\n        get: wrap('get'),\n        post: wrap('post'),\n        put: wrap('put'),\n        delete: wrap('delete')\n      }\n    }\n  }\n\n  function installMaybeUse(app) {\n    app.maybeUse = function() {\n      if (arguments.length === 3) {\n        app.use(arguments[0], maybeApply(arguments[1], arguments[2]))\n      } else if (arguments.length === 2) {\n        app.use(maybeApply(arguments[0], arguments[1]))\n      }\n    }\n  }\n\n  async function install(app) {\n    installRouter(app)\n    installProtector(app)\n    installMaybeUse(app)\n\n    app.maybeUse('bodyParser.json', bodyParser.json())\n    app.maybeUse('bodyParser.urlencoded', bodyParser.urlencoded({ extended: true }))\n\n    anonymousApis(bp, app)\n\n    app.use('/api/*', maybeApply('auth', _authenticationMiddleware))\n\n    securedApis(bp, app)\n  }\n\n  return { install }\n}\n\nfunction maybeApply(name, fn) {\n  return (req, res, next) => {\n    const router = req.originalUrl.match(/\\/api\\/(botpress-[^\\/]+).*$/i)\n    if (!router) {\n      return fn(req, res, next)\n    }\n\n    if (!routersConditions[router[1]]) {\n      return fn(req, res, next)\n    }\n\n    const condition = routersConditions[router[1]][name]\n    if (condition === false) {\n      next()\n    } else if (typeof condition === 'function' && condition(req) === false) {\n      next()\n    } else {\n      return fn(req, res, next)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/api.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 90\n// module chunks = 0","import ExtraApiProviders from '+/api'\n\nmodule.exports = (bp, app) => {\n\n  app.post('/api/login', async (req, res) => {\n    bp.stats.track('api', 'auth', 'login')\n    const result = await bp.security.login(req.body.user, req.body.password, req.ip)\n    res.send(result)\n  })\n\n  const apis = ExtraApiProviders(bp, app)\n  apis.anonymous.map(x => x && x()) // Install all anonymous APIs\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/anonymous.js","module.exports = (bp, app) => {\n\n  const installSecured = () => {\n    \n    app.get('/api/my-account', async (req, res) => {\n      res.send(req.user)\n    })\n\n  }\n\n  const installAnonymous = () => {}\n\n  return {\n    name: '[Lite] Accounts Management',\n    installSecured,\n    installAnonymous\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./extensions/lite/api/accounts.js","import _ from 'lodash'\nimport fs from 'fs'\nimport path from 'path'\nimport uuid from 'uuid'\nimport multer from 'multer'\nimport Promise from 'bluebird'\n\nimport util from '../util'\nimport ExtraApiProviders from '+/api'\n\nlet logsSecret = uuid.v4()\n\nmodule.exports = (bp, app) => {\n  app.get('/api/ping', (req, res) => {\n    res.send('pong')\n  })\n\n  app.secure('read', 'modules/list').get('/api/modules', (req, res) => {\n    const modules = _.map(bp._loadedModules, module => {\n      return {\n        name: module.name,\n        homepage: module.homepage,\n        menuText: module.settings.menuText || module.name,\n        menuIcon: module.settings.menuIcon || 'view_module',\n        noInterface: !!module.settings.noInterface,\n        plugins: module.settings.plugins || []\n      }\n    })\n    res.send(modules)\n  })\n\n  app.secure('read', 'middleware/list').get('/api/middlewares', (req, res) => {\n    res.send(bp.middlewares.list())\n  })\n\n  app.secure('write', 'middleware/customizations').post('/api/middlewares/customizations', (req, res) => {\n    bp.stats.track('api', 'middlewares', 'customizations')\n    const { middlewares } = req.body\n    bp.middlewares.setCustomizations(middlewares)\n    bp.middlewares.load()\n    res.send(bp.middlewares.list())\n  })\n\n  app.secure('write', 'middleware/customizations').delete('/api/middlewares/customizations', (req, res) => {\n    bp.stats.track('api', 'middlewares', 'customizations')\n    bp.middlewares.resetCustomizations()\n    bp.middlewares.load()\n    res.send(bp.middlewares.list())\n  })\n\n  // DEPRECATED in Botpress 1.1\n  app.secure('read', 'notifications').get('/api/notifications', async (req, res) => {\n    res.send(await bp.notifications.getInbox())\n  })\n\n  app.secure('read', 'notifications').get('/api/notifications/inbox', async (req, res) => {\n    res.send(await bp.notifications.getInbox())\n  })\n\n  app.secure('read', 'bot/information').get('/api/bot/information', (req, res) => {\n    res.send(bp.about.getBotInformation())\n  })\n\n  app.secure('read', 'modules/list/community').get('/api/module/all', (req, res) => {\n    bp.modules.listAllCommunityModules().then(modules => res.send(modules))\n  })\n\n  app.secure('read', 'modules/list/community').get('/api/module/hero', (req, res) => {\n    bp.modules.getRandomCommunityHero().then(hero => res.send(hero))\n  })\n\n  app.get('/api/bot/production', (req, res) => {\n    res.send(!util.isDeveloping)\n  })\n\n  app.secure('read', 'modules/list/community').get('/api/bot/contributor', (req, res) => {\n    res.send(bp.bot.getContributor())\n  })\n\n  app.get('/api/license', async (req, res) => {\n    res.send(await bp.licensing.getLicensing())\n  })\n\n  app.secure('write', 'bot/information/license').post('/api/license', (req, res) => {\n    bp.stats.track('api', 'license', 'change')\n    bp.licensing\n      .changeLicense(req.body.license)\n      .then(() => {\n        res.sendStatus(200)\n      })\n      .catch(err =>\n        res.status(500).send({\n          message: err && err.message\n        })\n      )\n  })\n\n  app.secure('write', 'modules/list/install').post('/api/module/install/:name', (req, res) => {\n    bp.stats.track('api', 'modules', 'install')\n    const { name } = req.params\n    bp.modules\n      .install(name)\n      .then(() => {\n        res.sendStatus(200)\n        bp.restart(1000)\n      })\n      .catch(err =>\n        res.status(500).send({\n          message: err && err.message\n        })\n      )\n  })\n\n  app.secure('write', 'modules/list/uninstall').delete('/api/module/uninstall/:name', (req, res) => {\n    bp.stats.track('api', 'modules', 'uninstall')\n    const { name } = req.params\n    bp.modules\n      .uninstall(name)\n      .then(() => {\n        res.sendStatus(200)\n        bp.restart(1000)\n      })\n      .catch(err =>\n        res.status(500).send({\n          message: err && err.message\n        })\n      )\n  })\n\n  app.delete('/api/guided-tour', (req, res) => {\n    fs.unlink(path.join(bp.projectLocation, '.welcome'), () => {\n      bp.isFirstRun = false\n      res.sendStatus(200)\n    })\n  })\n\n  app.secure('read', 'bot/logs').get('/api/logs', (req, res) => {\n    const options = {\n      from: new Date() - 7 * 24 * 60 * 60 * 1000,\n      until: new Date(),\n      limit: (req.query && req.query.limit) || 50,\n      start: 0,\n      order: 'desc',\n      fields: ['message', 'level', 'timestamp']\n    }\n\n    bp.logger.query(options, (err, results) => {\n      if (err) {\n        return console.log(err)\n      }\n      res.send(results.file)\n    })\n  })\n\n  app.secure('read', 'bot/logs').get('/api/logs/key', (req, res) => {\n    res.send({ secret: logsSecret })\n  })\n\n  app.secure('read', 'bot/logs/archive').get('/logs/archive/:key', (req, res) => {\n    bp.stats.track('api', 'logs', 'archive')\n    if (req.params.key !== logsSecret) {\n      return res.sendStatus(403)\n    }\n\n    bp.logger.archiveToFile().then(archivePath => {\n      logsSecret = uuid.v4()\n      res.download(archivePath)\n    })\n  })\n\n  app.secure('read', 'bot/umm/blocs').get('/umm/blocs', (req, res) => {\n    const content = bp.umm.getDocument()\n    res.send({ content: content })\n  })\n\n  app.secure('read', 'bot/umm/templates').get('/umm/templates', (req, res) => {\n    res.send({ templates: bp.umm.getTemplates() })\n  })\n\n  app.secure('write', 'bot/umm/blocs').post('/umm/blocs', (req, res) => {\n    const { content } = req.body || {}\n    if (_.isNil(content)) {\n      return res.status(400).send({ message: 'You need to specify the content' })\n    }\n\n    bp.umm.saveDocument(content)\n\n    return res.sendStatus(200)\n  })\n\n  app.secure('write', 'bot/umm/simulation').post('/umm/simulate', (req, res) => {\n    try {\n      const { context, content, outputPlatform, incomingEvent } = req.body\n      const blocs = bp.umm.parse({ context, outputPlatform, markdown: content, incomingEvent })\n      res.send(blocs)\n    } catch (err) {\n      res.status(400).send({ message: err.message })\n    }\n  })\n\n  app.secure('read', 'bot/content').get('/content/categories', async (req, res) => {\n    res.send(await bp.contentManager.listAvailableCategories())\n  })\n\n  app.secure('read', 'bot/content').get('/content/categories/:id/schema', async (req, res) => {\n    res.send(await bp.contentManager.getCategorySchema(req.params.id))\n  })\n\n  app.secure('read', 'bot/content').get('/content/categories/:id/items', async (req, res) => {\n    if (req.params.id === 'all') {\n      req.params.id = null\n    }\n\n    const from = req.query.from || 0\n    const count = req.query.count || 50\n    const searchTerm = req.query.search\n\n    res.send(await bp.contentManager.listCategoryItems(req.params.id, from, count, searchTerm))\n  })\n\n  app.secure('read', 'bot/content').get('/content/export', async (req, res) => {\n    res.setHeader('Content-disposition', 'attachment; filename=content-export.json')\n    res.send(await bp.contentManager.exportContent())\n  })\n\n  app.secure('write', 'bot/content').post('/content/categories/:id/items', async (req, res) => {\n    res.send(\n      await bp.contentManager.createOrUpdateCategoryItem({\n        formData: req.body.formData,\n        categoryId: req.params.id\n      })\n    )\n  })\n\n  const contentUploadMulter = multer({\n    limits: {\n      fileSize: 1024 * 1000 * 10, // 10mb\n      files: 5 // Max 5 files\n    },\n    fileFilter: (req, file, cb) => {\n      if (file.mimetype !== 'application/json') {\n        cb(null, false)\n      } else {\n        cb(null, true)\n      }\n    }\n  })\n\n  app.secure('write', 'bot/content').post('/content/upload', contentUploadMulter.array('files[]'), async (req, res) => {\n    try {\n      const documents = req.files.map(file => JSON.parse(file.buffer.toString()))\n      await Promise.mapSeries(documents, doc => bp.contentManager.importContent(doc))\n      res.send({ success: true })\n    } catch (err) {\n      res.status(500).send(err.message)\n    }\n  })\n\n  app.secure('write', 'bot/content').post('/content/categories/:id/items/:itemId', async (req, res) => {\n    await bp.contentManager.createOrUpdateCategoryItem({\n      itemId: req.params.itemId,\n      formData: req.body.formData,\n      categoryId: req.params.id\n    })\n    res.sendStatus(200)\n  })\n\n  app.secure('write', 'bot/content').post('/content/categories/all/bulk_delete', async (req, res) => {\n    await bp.contentManager.deleteCategoryItems(req.body)\n    res.sendStatus(200)\n  })\n\n  const apis = ExtraApiProviders(bp, app)\n  apis.secured.map(x => x && x()) // Install all secured APIs\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/secured.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 94\n// module chunks = 0"],"sourceRoot":""}